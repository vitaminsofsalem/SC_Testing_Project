{"data":"eyJzdGF0dXMiOjIwMCwiZGF0YSI6IjwhZG9jdHlwZSBodG1sPjxodG1sIGxhbmc9XCJlbi11c1wiIGNsYXNzPVwiYS1uby1qc1wiIGRhdGEtMTlheDVhOWpmPVwiZGluZ29cIj48IS0tIHNwOmZlYXR1cmU6aGVhZC1zdGFydCAtLT5cbjxoZWFkPjxzY3JpcHQ+dmFyIGFQYWdlU3RhcnQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOzwvc2NyaXB0PjxtZXRhIGNoYXJzZXQ9XCJ1dGYtOFwiLz5cbjwhLS0gc3A6ZW5kLWZlYXR1cmU6aGVhZC1zdGFydCAtLT5cblxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPnZhciB1ZV90MD11ZV90MHx8K25ldyBEYXRlKCk7PC9zY3JpcHQ+XG48IS0tIHNwOmZlYXR1cmU6Y3Mtb3B0aW1pemF0aW9uIC0tPlxuPG1ldGEgaHR0cC1lcXVpdj0neC1kbnMtcHJlZmV0Y2gtY29udHJvbCcgY29udGVudD0nb24nPlxuPGxpbmsgcmVsPVwiZG5zLXByZWZldGNoXCIgaHJlZj1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbVwiPlxuPGxpbmsgcmVsPVwiZG5zLXByZWZldGNoXCIgaHJlZj1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tXCI+XG48bGluayByZWw9XCJkbnMtcHJlZmV0Y2hcIiBocmVmPVwiaHR0cHM6Ly9jb21wbGV0aW9uLmFtYXpvbi5jb21cIj5cbjwhLS0gc3A6ZW5kLWZlYXR1cmU6Y3Mtb3B0aW1pemF0aW9uIC0tPlxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPlxud2luZG93LnVlX2loYiA9ICh3aW5kb3cudWVfaWhiIHx8IHdpbmRvdy51ZWluaXQgfHwgMCkgKyAxO1xuaWYgKHdpbmRvdy51ZV9paGIgPT09IDEpIHtcblxudmFyIHVlX2NzbSA9IHdpbmRvdyxcbiAgICB1ZV9ob2IgPSArbmV3IERhdGUoKTtcbihmdW5jdGlvbihkKXt2YXIgZT1kLnVlPWQudWV8fHt9LGY9RGF0ZS5ub3d8fGZ1bmN0aW9uKCl7cmV0dXJuK25ldyBEYXRlfTtlLmQ9ZnVuY3Rpb24oYil7cmV0dXJuIGYoKS0oYj8wOmQudWVfdDApfTtlLnN0dWI9ZnVuY3Rpb24oYixhKXtpZighYlthXSl7dmFyIGM9W107YlthXT1mdW5jdGlvbigpe2MucHVzaChbYy5zbGljZS5jYWxsKGFyZ3VtZW50cyksZS5kKCksZC51ZV9pZF0pfTtiW2FdLnJlcGxheT1mdW5jdGlvbihiKXtmb3IodmFyIGE7YT1jLnNoaWZ0KCk7KWIoYVswXSxhWzFdLGFbMl0pfTtiW2FdLmlzU3R1Yj0xfX07ZS5leGVjPWZ1bmN0aW9uKGIsYSl7cmV0dXJuIGZ1bmN0aW9uKCl7dHJ5e3JldHVybiBiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChjKXt1ZUxvZ0Vycm9yKGMse2F0dHJpYnV0aW9uOmF8fFwidW5kZWZpbmVkXCIsbG9nTGV2ZWw6XCJXQVJOXCJ9KX19fX0pKHVlX2NzbSk7XG5cblxuICAgIHZhciB1ZV9lcnJfY2hhbiA9ICdqc2Vyci1ydyc7XG4oZnVuY3Rpb24oZCxlKXtmdW5jdGlvbiBoKGYsYil7aWYoIShhLmVjPmEubXhlKSYmZil7YS50ZXIucHVzaChmKTtiPWJ8fHt9O3ZhciBjPWYubG9nTGV2ZWx8fGIubG9nTGV2ZWw7YyYmYyE9PWsmJmMhPT1tJiZjIT09biYmYyE9PXB8fGEuZWMrKztjJiZjIT1rfHxhLmVjZisrO2IucGFnZVVSTD1cIlwiKyhlLmxvY2F0aW9uP2UubG9jYXRpb24uaHJlZjpcIlwiKTtiLmxvZ0xldmVsPWM7Yi5hdHRyaWJ1dGlvbj1mLmF0dHJpYnV0aW9ufHxiLmF0dHJpYnV0aW9uO2EuZXJsLnB1c2goe2V4OmYsaW5mbzpifSl9fWZ1bmN0aW9uIGwoYSxiLGMsZSxnKXtkLnVlTG9nRXJyb3Ioe206YSxmOmIsbDpjLGM6XCJcIitlLGVycjpnLGZyb21PbkVycm9yOjEsYXJnczphcmd1bWVudHN9LGc/e2F0dHJpYnV0aW9uOmcuYXR0cmlidXRpb24sbG9nTGV2ZWw6Zy5sb2dMZXZlbH06dm9pZCAwKTtyZXR1cm4hMX12YXIgaz1cIkZBVEFMXCIsbT1cIkVSUk9SXCIsbj1cIldBUk5cIixwPVwiRE9XTkdSQURFRFwiLGE9e2VjOjAsZWNmOjAsXG5wZWM6MCx0czowLGVybDpbXSx0ZXI6W10sbXhlOjUwLHN0YXJ0VGltZXI6ZnVuY3Rpb24oKXthLnRzKys7c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtkLnVlJiZhLnBlYzxhLmVjJiZkLnVleChcImF0XCIpO2EucGVjPWEuZWN9LDFFNCl9fTtsLnNraXBUcmFjZT0xO2guc2tpcFRyYWNlPTE7aC5pc1N0dWI9MTtkLnVlTG9nRXJyb3I9aDtkLnVlX2Vycj1hO2Uub25lcnJvcj1sfSkodWVfY3NtLHdpbmRvdyk7XG5cblxudmFyIHVlX2lkID0gJzFRNzBNNzhDQ1M4QVM5OVJNQ0E4JyxcbiAgICB1ZV91cmwgPSAnL3JkL3VlZGF0YScsXG4gICAgdWVfbmF2dGltaW5nID0gMSxcbiAgICB1ZV9taWQgPSAnQVRWUERLSUtYMERFUicsXG4gICAgdWVfc2lkID0gJzE0Ny04NjkzNjY3LTU5MDEwMzEnLFxuICAgIHVlX3NuID0gJ3d3dy5hbWF6b24uY29tJyxcbiAgICB1ZV9mdXJsID0gJ2Zscy1uYS5hbWF6b24uY29tJyxcbiAgICB1ZV9zdXJsID0gJ2h0dHBzOi8vdW5hZ2ktbmEuYW1hem9uLmNvbS8xL2V2ZW50cy9jb20uYW1hem9uLmNzbS5uZXh1c2NsaWVudC5wcm9kJyxcbiAgICB1ZV9pbnQgPSAwLFxuICAgIHVlX2Zjc24gPSAxLFxuICAgIHVlX3VydCA9IDMsXG4gICAgdWVfcnBsX25zID0gJ2NlbC1ycGwnLFxuICAgIHVlX2RkcSA9IDEsXG4gICAgdWVfZnBmID0gJy8vZmxzLW5hLmFtYXpvbi5jb20vMS9iYXRjaC8xL09QL0FUVlBES0lLWDBERVI6MTQ3LTg2OTM2NjctNTkwMTAzMToxUTcwTTc4Q0NTOEFTOTlSTUNBOCR1ZWRhdGE9czonLFxuICAgIHVlX3NidWltcCA9IDEsXG4gICAgdWVfY2VsX2xjbGlhID0gMSxcbiAgICB1ZV9pYmZ0ID0gMCxcbiAgICB1ZV9zc3dtdHMgPSAwLFxuICAgIHVlX2pzbXRmID0gMCxcbiAgICB1ZV9mbnQgPSAwLFxuXG4gICAgdWVfc3dpID0gMTtcbnZhciB1ZV92aXo9ZnVuY3Rpb24oKXsoZnVuY3Rpb24oYixlLGEpe2Z1bmN0aW9uIGsoYyl7aWYoYi51ZS52aXoubGVuZ3RoPHAmJiFsKXt2YXIgYT1jLnR5cGU7Yz1jLm9yaWdpbmFsRXZlbnQ7L15mb2N1cy4vLnRlc3QoYSkmJmMmJihjLnRvRWxlbWVudHx8Yy5mcm9tRWxlbWVudHx8Yy5yZWxhdGVkVGFyZ2V0KXx8KGE9ZVttXXx8KFwiYmx1clwiPT1hfHxcImZvY3Vzb3V0XCI9PWE/XCJoaWRkZW5cIjpcInZpc2libGVcIiksYi51ZS52aXoucHVzaChhK1wiOlwiKygrbmV3IERhdGUtYi51ZS50MCkpLFwidmlzaWJsZVwiPT1hJiYoYi51ZS5pc2wmJnEoXCJhdFwiKSxsPTEpKX19Zm9yKHZhciBsPTAscT1iLnVleCxmLGcsbSxuPVtcIlwiLFwid2Via2l0XCIsXCJvXCIsXCJtc1wiLFwibW96XCJdLGQ9MCxwPTIwLGg9MDtoPG4ubGVuZ3RoJiYhZDtoKyspaWYoYT1uW2hdLGY9KGE/YStcIkhcIjpcImhcIikrXCJpZGRlblwiLGQ9XCJib29sZWFuXCI9PXR5cGVvZiBlW2ZdKWc9YStcInZpc2liaWxpdHljaGFuZ2VcIixtPShhP2ErXCJWXCI6XCJ2XCIpK1xuXCJpc2liaWxpdHlTdGF0ZVwiO2soe30pO2QmJmUuYWRkRXZlbnRMaXN0ZW5lcihnLGssMCk7Yi51ZSYmZCYmKGIudWUucGFnZVZpej17ZXZlbnQ6Zyxwcm9wSGlkOmZ9KX0pKHVlX2NzbSx1ZV9jc20uZG9jdW1lbnQsdWVfY3NtLndpbmRvdyl9O1xuXG4oZnVuY3Rpb24oZCxoLE4pe2Z1bmN0aW9uIEgoYSl7cmV0dXJuIGEmJmEucmVwbGFjZSYmYS5yZXBsYWNlKC9eXFxzK3xcXHMrJC9nLFwiXCIpfWZ1bmN0aW9uIHUoYSl7cmV0dXJuXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhfWZ1bmN0aW9uIEIoYSxiKXtmb3IodmFyIGMgaW4gYiliW3ZdKGMpJiYoYVtjXT1iW2NdKX1mdW5jdGlvbiBJKGEpe3RyeXt2YXIgYj1OLmNvb2tpZS5tYXRjaChSZWdFeHAoXCIoXnwgKVwiK2ErXCI9KFteO10rKVwiKSk7aWYoYilyZXR1cm4gYlsyXS50cmltKCl9Y2F0Y2goYyl7fX1mdW5jdGlvbiBPKG0sYixjKXt2YXIgcT0oeHx8e30pLnR5cGU7aWYoXCJkZXZpY2VcIiE9PWN8fDIhPT1xJiYxIT09cSltJiYoZC51ZV9pZD1hLmlkPWEucmlkPW0sdyYmKHc9dy5yZXBsYWNlKC8oKC4qPzopezJ9KShcXHcrKS8sZnVuY3Rpb24oYSxiKXtyZXR1cm4gYittfSkpLEQmJihlKFwiaWRcIixELG0pLEQ9MCkpLGImJih3JiYodz13LnJlcGxhY2UoLyguKj86KShcXHd8LSkrLyxmdW5jdGlvbihhLFxuYyl7cmV0dXJuIGMrYn0pKSxkLnVlX3NpZD1iKSxjJiZhLnRhZyhcInBhZ2Utc291cmNlOlwiK2MpLGQudWVfZnBmPXd9ZnVuY3Rpb24gUCgpe3ZhciBhPXt9O3JldHVybiBmdW5jdGlvbihiKXtiJiYoYVtiXT0xKTtiPVtdO2Zvcih2YXIgYyBpbiBhKWFbdl0oYykmJmIucHVzaChjKTtyZXR1cm4gYn19ZnVuY3Rpb24geShkLGIsYyxxKXtxPXF8fCtuZXcgRTt2YXIgZixsO2lmKGJ8fHUoYykpe2lmKGQpZm9yKGwgaW4gZj1iP2UoXCJ0XCIsYil8fGUoXCJ0XCIsYix7fSk6YS50LGZbZF09cSxjKWNbdl0obCkmJmUobCxiLGNbbF0pO3JldHVybiBxfX1mdW5jdGlvbiBlKGQsYixjKXt2YXIgZT1iJiZiIT1hLmlkP2Euc2NbYl06YTtlfHwoZT1hLnNjW2JdPXt9KTtcImlkXCI9PT1kJiZjJiYoUT0xKTtyZXR1cm4gZVtkXT1jfHxlW2RdfWZ1bmN0aW9uIFIoZCxiLGMsZSxmKXtjPVwib25cIitjO3ZhciBsPWJbY107XCJmdW5jdGlvblwiPT09dHlwZW9mIGw/ZCYmKGEuaFtkXT1sKTpsPWZ1bmN0aW9uKCl7fTtiW2NdPVxuZnVuY3Rpb24oYSl7Zj8oZShhKSxsKGEpKToobChhKSxlKGEpKX07YltjXSYmKGJbY10uaXNVZWg9MSl9ZnVuY3Rpb24gUyhtLGIsYyxxKXtmdW5jdGlvbiBwKGIsYyl7dmFyIGQ9W2JdLGc9MCxmPXt9LGwsaDtjPyhkLnB1c2goXCJtPTFcIiksZltjXT0xKTpmPWEuc2M7Zm9yKGggaW4gZilpZihmW3ZdKGgpKXt2YXIgcT1lKFwid2JcIixoKSxwPWUoXCJ0XCIsaCl8fHt9LG49ZShcInQwXCIsaCl8fGEudDAsaztpZihjfHwyPT1xKXtxPXE/ZysrOlwiXCI7ZC5wdXNoKFwic2NcIitxK1wiPVwiK2gpO2ZvcihrIGluIHApdShwW2tdKXx8bnVsbD09PXBba118fGQucHVzaChrK3ErXCI9XCIrKHBba10tbikpO2QucHVzaChcInRcIitxK1wiPVwiK3BbbV0pO2lmKGUoXCJjdGJcIixoKXx8ZShcIndiXCIsaCkpbD0xfX0hSiYmbCYmZC5wdXNoKFwiY3RiPTFcIik7cmV0dXJuIGQuam9pbihcIiZcIil9ZnVuY3Rpb24gbChiLGMsZyxlKXtpZihiKXt2YXIgZj1kLnVlX2VycjtkLnVlX3VybCYmIWUmJmImJjA8Yi5sZW5ndGgmJihlPW5ldyBJbWFnZSxcbmEuaWVsLnB1c2goZSksZS5zcmM9YixhLmNvdW50JiZhLmNvdW50KFwicG9zdGJhY2tJbWFnZVNpemVcIixiLmxlbmd0aCkpO2lmKHcpe3ZhciBtPWguZW5jb2RlVVJJQ29tcG9uZW50O20mJmImJihlPW5ldyBJbWFnZSxiPVwiXCIrZC51ZV9mcGYrbShiKStcIjpcIisoK25ldyBFLWQudWVfdDApLGEuaWVsLnB1c2goZSksZS5zcmM9Yil9ZWxzZSBhLmxvZyYmKGEubG9nKGIsXCJ1ZWRhdGFcIix7bjoxfSksYS5pZWxmLnB1c2goYikpO2YmJiFmLnRzJiZmLnN0YXJ0VGltZXIoKTthLmImJihmPWEuYixhLmI9XCJcIixsKGYsYyxnLDEpKX19ZnVuY3Rpb24gQShiKXt2YXIgYz14P3gudHlwZTpGLGQ9Mj09Y3x8YS5pc0JGb25Nc2hvcCxjPWMmJiFkLGU9YS5iZmluaTtRfHwoZSYmMTxlJiYoYis9XCImYmZmb3JtPTFcIixjfHwoYS5pc0JGVD1lLTEpKSxkJiYoYis9XCImYmZudD0xXCIsYS5pc0JGVD1hLmlzQkZUfHwxKSxhLnNzdyYmYS5pc0JGVCYmKGEuaXNCRm9uTXNob3AmJihhLmlzTlJCRj0wKSx1KGEuaXNOUkJGKSYmXG4oZD1hLnNzdyhhLm9pZCksZC5lfHx1KGQudmFsKXx8KGEuaXNOUkJGPTE8ZC52YWw/MDoxKSksdShhLmlzTlJCRil8fChiKz1cIiZucmJmPVwiK2EuaXNOUkJGKSksYS5pc0JGVCYmIWEuaXNOUkJGJiYoYis9XCImYmZ0PVwiK2EuaXNCRlQpKTtyZXR1cm4gYn1pZighYS5wYXVzZWQmJihifHx1KGMpKSl7Zm9yKHZhciBrIGluIGMpY1t2XShrKSYmZShrLGIsY1trXSk7YS5pc0JGb25Nc2hvcHx8eShcInBjXCIsYixjKTtrPVwibGRcIj09PW0mJmImJmUoXCJ3YlwiLGIpO3ZhciBzPWUoXCJpZFwiLGIpfHxhLmlkO2t8fHM9PT1hLm9pZHx8KEQ9YixiYShzLChlKFwidFwiLGIpfHx7fSkudGN8fCtlKFwidDBcIixiKSwrZShcInQwXCIsYikpKTt2YXIgcz1lKFwiaWRcIixiKXx8YS5pZCx0PWUoXCJpZDJcIixiKSxnPWEudXJsK1wiP1wiK20rXCImdj1cIithLnYrXCImaWQ9XCIrcyxKPWUoXCJjdGJcIixiKXx8ZShcIndiXCIsYiksejtKJiYoZys9XCImY3RiPVwiK0opO3QmJihnKz1cIiZpZDI9XCIrdCk7MTxkLnVlaW5pdCYmKGcrPVwiJmljPVwiK2QudWVpbml0KTtcbmlmKCEoXCJsZFwiIT1tJiZcInVsXCIhPW18fGImJmIhPXMpKXtpZihcImxkXCI9PW0pe3RyeXtoW0tdJiZoW0tdLmlzVWVoJiYoaFtLXT1udWxsKX1jYXRjaChJKXt9aWYoaC5jaHJvbWUpZm9yKHQ9MDt0PEwubGVuZ3RoO3QrKylUKEcsTFt0XSk7KHQ9Ti51ZV9iYWNrZGV0ZWN0KSYmdC51ZV9iYWNrJiZ0LnVlX2JhY2sudmFsdWUrKztkLl91ZXNzJiYoej1kLl91ZXNzKCkpO2EuaXNsPTF9YS5fYmYmJihnKz1cIiZiZj1cIithLl9iZigpKTtkLnVlX25hdnRpbWluZyYmZiYmKGUoXCJjdGJcIixzLFwiMVwiKSxhLmlzQkZvbk1zaG9wfHx5KFwidGNcIixGLEYsTSkpOyFDfHxhLmlzQkZvbk1zaG9wfHxVfHwoZiYmQihhLnQse25hXzpmLm5hdmlnYXRpb25TdGFydCx1bF86Zi51bmxvYWRFdmVudFN0YXJ0LF91bDpmLnVubG9hZEV2ZW50RW5kLHJkXzpmLnJlZGlyZWN0U3RhcnQsX3JkOmYucmVkaXJlY3RFbmQsZmVfOmYuZmV0Y2hTdGFydCxsa186Zi5kb21haW5Mb29rdXBTdGFydCxfbGs6Zi5kb21haW5Mb29rdXBFbmQsXG5jb186Zi5jb25uZWN0U3RhcnQsX2NvOmYuY29ubmVjdEVuZCxzY186Zi5zZWN1cmVDb25uZWN0aW9uU3RhcnQscnFfOmYucmVxdWVzdFN0YXJ0LHJzXzpmLnJlc3BvbnNlU3RhcnQsX3JzOmYucmVzcG9uc2VFbmQsZGxfOmYuZG9tTG9hZGluZyxkaV86Zi5kb21JbnRlcmFjdGl2ZSxkZV86Zi5kb21Db250ZW50TG9hZGVkRXZlbnRTdGFydCxfZGU6Zi5kb21Db250ZW50TG9hZGVkRXZlbnRFbmQsX2RjOmYuZG9tQ29tcGxldGUsbGRfOmYubG9hZEV2ZW50U3RhcnQsX2xkOmYubG9hZEV2ZW50RW5kLG50ZDooXCJmdW5jdGlvblwiIT09dHlwZW9mIEMubm93fHx1KE0pPzA6bmV3IEUoTStDLm5vdygpKS1uZXcgRSkrYS50MH0pLHgmJkIoYS50LHt0eTp4LnR5cGUrYS50MCxyYzp4LnJlZGlyZWN0Q291bnQrYS50MH0pLFU9MSk7YS5pc0JGb25Nc2hvcHx8QihhLnQse2hvYjpkLnVlX2hvYixob2U6ZC51ZV9ob2V9KTthLmlmciYmKGcrPVwiJmlmcj0xXCIpfXkobSxiLGMscSk7dmFyIHIsbjtrfHxiJiZcbmIhPT1zfHxjYShiKTsoYz1kLnVlX21ibCkmJmMuY250JiYhayYmKGcrPWMuY250KCkpO2s/ZShcIndiXCIsYiwyKTpcImxkXCI9PW0mJihhLmxpZD1IKHMpKTtmb3IociBpbiBhLnNjKWlmKDE9PWUoXCJ3YlwiLHIpKWJyZWFrO2lmKGspe2lmKGEucylyZXR1cm47Zz1wKGcsbnVsbCl9ZWxzZSBjPXAoZyxudWxsKSxjIT1nJiYoYz1BKGMpLGEuYj1jKSx6JiYoZys9eiksZz1wKGcsYnx8YS5pZCk7Zz1BKGcpO2lmKGEuYnx8aylmb3IociBpbiBhLnNjKTI9PWUoXCJ3YlwiLHIpJiZkZWxldGUgYS5zY1tyXTt6PTA7YS5fcnQmJihnKz1cIiZydD1cIithLl9ydCgpKTtjPWguY3NhO2lmKCFrJiZjKWZvcihuIGluIHI9ZShcInRcIixiKXx8e30sYz1jKFwiUGFnZVRpbWluZ1wiKSxyKXJbdl0obikmJmMoXCJtYXJrXCIsZGFbbl18fG4scltuXSk7a3x8KGEucz0wLChuPWQudWVfZXJyKSYmMDxuLmVjJiZuLnBlYzxuLmVjJiYobi5wZWM9bi5lYyxnKz1cIiZlYz1cIituLmVjK1wiJmVjZj1cIituLmVjZiksej1lKFwiY3RiXCIsYiksXG5cImxkXCIhPT1tfHxifHxhLm1hcmtlcnM/YS5tYXJrZXJzJiZhLmlzbCYmIWsmJmImJkIoYS5tYXJrZXJzLGUoXCJ0XCIsYikpOihhLm1hcmtlcnM9e30sQihhLm1hcmtlcnMsZShcInRcIixiKSkpLGUoXCJ0XCIsYix7fSkpO2EudGFnJiZhLnRhZygpLmxlbmd0aCYmKGcrPVwiJmNzbXRhZ3M9XCIrYS50YWcoKS5qb2luKFwifFwiKSxhLnRhZz1QKCkpO249YS52aXp8fFtdOyhyPW4ubGVuZ3RoKSYmKGcrPVwiJnZpej1cIituLnNwbGljZSgwLHIpLmpvaW4oXCJ8XCIpKTt1KGQudWVfcHR5KXx8KGcrPVwiJnB0eT1cIitkLnVlX3B0eStcIiZzcHR5PVwiK2QudWVfc3B0eStcIiZwdGk9XCIrZC51ZV9wdGkpO2EudGFiaWQmJihnKz1cIiZ0aWQ9XCIrYS50YWJpZCk7YS5hZnRiJiYoZys9XCImYWZ0Yj0xXCIpOyFhLl91aXx8YiYmYiE9c3x8KGcrPWEuX3VpKCkpO2EuYT1nO2woZyxtLHosayl9fWZ1bmN0aW9uIGNhKGEpe3ZhciBiPWgudWVfY3NtX21hcmtlcnN8fHt9LGM7Zm9yKGMgaW4gYiliW3ZdKGMpJiZ5KGMsYSxGLGJbY10pfVxuZnVuY3Rpb24gQShhLGIsYyl7Yz1jfHxoO2lmKGNbVl0pY1tWXShhLGIsITEpO2Vsc2UgaWYoY1tXXSljW1ddKFwib25cIithLGIpfWZ1bmN0aW9uIFQoYSxiLGMpe2M9Y3x8aDtpZihjW1hdKWNbWF0oYSxiLCExKTtlbHNlIGlmKGNbWV0pY1tZXShcIm9uXCIrYSxiKX1mdW5jdGlvbiBaKCl7ZnVuY3Rpb24gYSgpe2Qub25VbCgpfWZ1bmN0aW9uIGIoYSl7cmV0dXJuIGZ1bmN0aW9uKCl7Y1thXXx8KGNbYV09MSxTKGEpKX19dmFyIGM9e30sZSxmO2Qub25MZD1iKFwibGRcIik7ZC5vbkxkRW5kPWIoXCJsZFwiKTtkLm9uVWw9YihcInVsXCIpO2U9e3N0b3A6YihcIm9zXCIpfTtoLmNocm9tZT8oQShHLGEpLEwucHVzaChhKSk6ZVtHXT1kLm9uVWw7Zm9yKGYgaW4gZSllW3ZdKGYpJiZSKDAsaCxmLGVbZl0pO2QudWVfdml6JiZ1ZV92aXooKTtBKFwibG9hZFwiLGQub25MZCk7eShcInVlXCIpfWZ1bmN0aW9uIGJhKGUsYixjKXt2YXIgZj1kLnVlX21ibCxwPWguY3NhLGw9cCYmcChcIlNQQVwiKSxwPXAmJnAoXCJQYWdlVGltaW5nXCIpO1xuZiYmZi5hamF4JiZmLmFqYXgoYixjKTtsJiZwJiYobChcIm5ld1BhZ2VcIix7cmVxdWVzdElkOmUsdHJhbnNpdGlvblR5cGU6XCJzb2Z0XCJ9KSxwKFwibWFya1wiLFwidHJhbnNpdGlvblN0YXJ0XCIsYikpO2EudGFnKFwiYWpheC10cmFuc2l0aW9uXCIpfWQudWVpbml0PShkLnVlaW5pdHx8MCkrMTt2YXIgYT1kLnVlPWQudWV8fHt9O2EudDA9aC5hUGFnZVN0YXJ0fHxkLnVlX3QwO2EuaWQ9ZC51ZV9pZDthLnVybD1kLnVlX3VybDthLnJpZD1kLnVlX2lkO2EuYT1cIlwiO2EuYj1cIlwiO2EuaD17fTthLnM9MTthLnQ9e307YS5zYz17fTthLmllbD1bXTthLmllbGY9W107YS52aXo9W107YS52PVwiMC4yMjE2ODEuMFwiO2EucGF1c2VkPSExO3ZhciB2PVwiaGFzT3duUHJvcGVydHlcIixHPVwiYmVmb3JldW5sb2FkXCIsSz1cIm9uXCIrRyxWPVwiYWRkRXZlbnRMaXN0ZW5lclwiLFg9XCJyZW1vdmVFdmVudExpc3RlbmVyXCIsVz1cImF0dGFjaEV2ZW50XCIsWT1cImRldGFjaEV2ZW50XCIsZGE9e2NmOlwiY3JpdGljYWxGZWF0dXJlXCIsYWY6XCJhYm92ZVRoZUZvbGRcIixcbmZuOlwiZnVuY3Rpb25hbFwiLGZwOlwiZmlyc3RQYWludFwiLGZjcDpcImZpcnN0Q29udGVudGZ1bFBhaW50XCIsYmI6XCJib2R5QmVnaW5cIixiZTpcImJvZHlFbmRcIixsZDpcImxvYWRlZFwifSxFPWguRGF0ZSxDPWgucGVyZm9ybWFuY2V8fGgud2Via2l0UGVyZm9ybWFuY2UsZj0oQ3x8e30pLnRpbWluZyx4PShDfHx7fSkubmF2aWdhdGlvbixNPShmfHx7fSkubmF2aWdhdGlvblN0YXJ0LHc9ZC51ZV9mcGYsUT0wLFU9MCxMPVtdLEQ9MCxGO2Eub2lkPUgoYS5pZCk7YS5saWQ9SChhLmlkKTthLl90MD1hLnQwO2EudGFnPVAoKTthLmlmcj1oLnRvcCE9PWguc2VsZnx8aC5mcmFtZUVsZW1lbnQ/MTowO2EubWFya2Vycz1udWxsO2EuYXR0YWNoPUE7YS5kZXRhY2g9VDtpZihcIjAwMC0wMDAwMDAwLTg2NzUzMDlcIj09PWQudWVfc2lkKXt2YXIgJD1JKFwiY2RuLXJpZFwiKSxhYT1JKFwic2Vzc2lvbi1pZFwiKTskJiZhYSYmTygkLGFhLFwiY2RuXCIpfWQudWVpPVo7ZC51ZWg9UjtkLnVlcz1lO2QudWV0PXk7ZC51ZXg9XG5TO2EucmVzZXQ9TzthLnBhdXNlPWZ1bmN0aW9uKGQpe2EucGF1c2VkPWR9O1ooKX0pKHVlX2NzbSx1ZV9jc20ud2luZG93LHVlX2NzbS5kb2N1bWVudCk7XG5cblxudWUuc3R1Yih1ZSxcImV2ZW50XCIpO3VlLnN0dWIodWUsXCJvblN1c2hpVW5sb2FkXCIpO3VlLnN0dWIodWUsXCJvblN1c2hpRmx1c2hcIik7XG5cbnVlLnN0dWIodWUsXCJsb2dcIik7dWUuc3R1Yih1ZSxcIm9udW5sb2FkXCIpO3VlLnN0dWIodWUsXCJvbmZsdXNoXCIpO1xuKGZ1bmN0aW9uKGMpe3ZhciBhPWMudWU7YS5jdj17fTthLmN2LnNjb3Blcz17fTthLmNvdW50PWZ1bmN0aW9uKGQsYyxiKXt2YXIgZT17fSxmPWEuY3YsZz1iJiYwPT09Yi5jO2UuY291bnRlcj1kO2UudmFsdWU9YztlLnQ9YS5kKCk7YiYmYi5zY29wZSYmKGY9YS5jdi5zY29wZXNbYi5zY29wZV09YS5jdi5zY29wZXNbYi5zY29wZV18fHt9LGUuc2NvcGU9Yi5zY29wZSk7aWYodm9pZCAwPT09YylyZXR1cm4gZltkXTtmW2RdPWM7ZD0wO2ImJmIuYmYmJihkPTEpO3VlX2NzbS51ZV9zY2xvZ3x8IWEuY2xvZ3x8MCE9PWR8fGc/YS5sb2cmJmEubG9nKGUsXCJjc21jb3VudFwiLHtjOjEsYmY6ZH0pOmEuY2xvZyhlLFwiY3NtY291bnRcIix7YmY6ZH0pfTthLmNvdW50KFwiYmFzZWxpbmVDb3VudGVyMlwiLDEpO2EmJmEuZXZlbnQmJihhLmV2ZW50KHtyZXF1ZXN0SWQ6Yy51ZV9pZHx8XCJyaWRcIixzZXJ2ZXI6Yy51ZV9zbnx8XCJzblwiLG9iZnVzY2F0ZWRNYXJrZXRwbGFjZUlkOmMudWVfbWlkfHxcIm1pZFwifSxcblwiY3NtXCIsXCJjc20uQ1NNQmFzZWxpbmVFdmVudC40XCIpLGEuY291bnQoXCJuZXh1c0Jhc2VsaW5lQ291bnRlclwiLDEse2JmOjF9KSl9KSh1ZV9jc20pO1xuXG5cblxudmFyIHVlX2hvZSA9ICtuZXcgRGF0ZSgpO1xufVxud2luZG93LnVlaW5pdCA9IHdpbmRvdy51ZV9paGI7XG48L3NjcmlwdD5cblxuPCEtLSBjcWxydXY5bWd2aTkzd3YxcnNjbjVmbDhqc296IC0tPlxuPHNjcmlwdD53aW5kb3cudWUgJiYgdWUuY291bnQgJiYgdWUuY291bnQoJ0NTTUxpYnJhcnlTaXplJywgOTY4NSk8L3NjcmlwdD5cbjwhLS0gc3A6ZmVhdHVyZTphdWktYXNzZXRzIC0tPlxuPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMTFFSVE1SUdxYUwuX1JDfDAxWlRIVFpPYm5MLmNzcyw0MXdaa3lUYVdvTC5jc3MsMzFZOG0xZHpUZEwuY3NzLDAxM3ozM3VLaDJMLmNzcywwMTdEc0tqTlFKTC5jc3MsMDEzMXZxd1A1VUwuY3NzLDQxRVdPT2xCSjlMLmNzcywxMVRJdXlTcXI2TC5jc3MsMDFFbG5QaUR4V0wuY3NzLDExYkdTZ0Q1cERMLmNzcywwMURtNWVLVnh3TC5jc3MsMDFJZEtjQnVBZEwuY3NzLDAxeS1YQWxJKzJMLmNzcywyMU40a1VIN3B4TC5jc3MsMDFvRFIzSVVMTkwuY3NzLDQxQ1lOR3BHbHJMLmNzcywwMVhQSEprNjAtTC5jc3MsMTE0eTBTSVAreUwuY3NzLDIxYVBoRnkrcmlMLmNzcywxMWduZUEzTXRKTC5jc3MsMjFmZWNHOHBVekwuY3NzLDAxdWxHekJXODhMLmNzcywwMUNGVWdzQS1ZTC5jc3MsMzFDODBJaVhhbEwuY3NzLDExcW91cjNORDBMLmNzcywxMWdLQ0NLUVYrTC5jc3MsMTEwNjFIeG5FdkwuY3NzLDExb0h0MkhZeG5MLmNzcywwMTNSRGh3OWhvTC5jc3MsMTFKUXRuTC02ZUwuY3NzLDExNnY2dVl2TjZMLmNzcywxMWp0WFJtcHB3TC5jc3MsMDFRcld1UnJaLUwuY3NzLDIxenVSenRLanRMLmNzcywxMVF5cUc4eWlxTC5jc3MsMTFLMjRlT0pnNEwuY3NzLDExRjIrT0J6THlMLmNzcywwMTg5MCtWd2s4TC5jc3MsMTFZMDVEVEVMNkwuY3NzLDAxY2JTM1VLMTFMLmNzcywyMUY4NWFtMHlGTC5jc3MsMDFnaU1FUCtkakwuY3NzXy5jc3M/QVVJQ2xpZW50cy9BbWF6b25VSSN1cy5ub3QtdHJpZGVudFwiIC8+XG48c2NyaXB0PlxuKGZ1bmN0aW9uKGYsaCxRLEYpe2Z1bmN0aW9uIHkoYSl7diYmdi50YWcmJnYudGFnKHEoXCI6XCIsXCJhdWlcIixhKSl9ZnVuY3Rpb24gdChhLGIpe3YmJnYuY291bnQmJnYuY291bnQoXCJhdWk6XCIrYSwwPT09Yj8wOmJ8fCh2LmNvdW50KFwiYXVpOlwiK2EpfHwwKSsxKX1mdW5jdGlvbiBwKGEpe3RyeXtyZXR1cm4gYS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfWNhdGNoKGIpe3JldHVybiExfX1mdW5jdGlvbiB6KGEsYixjKXthLmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSk6YS5hdHRhY2hFdmVudCYmYS5hdHRhY2hFdmVudChcIm9uXCIrYixjKX1mdW5jdGlvbiBxKGEsYixjLGUpe2I9YiYmYz9iK2ErYzpifHxjO3JldHVybiBlP3EoYSxiLGUpOmJ9ZnVuY3Rpb24gRyhhLGIsYyl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse3ZhbHVlOmMsd3JpdGFibGU6ITF9KX1jYXRjaChlKXthW2JdPWN9cmV0dXJuIGN9ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBlPVxuYz1hLmxlbmd0aCxnPWZ1bmN0aW9uKCl7ZS0tfHwoUi5wdXNoKGIpLFN8fChzZXRUaW1lb3V0KGVhLDApLFM9ITApKX07Zm9yKGcoKTtjLS07KWZhW2FbY11dP2coKTooQVthW2NdXT1BW2FbY11dfHxbXSkucHVzaChnKX1mdW5jdGlvbiB4YShhLGIsYyxlLGcpe3ZhciBkPWguY3JlYXRlRWxlbWVudChhP1wic2NyaXB0XCI6XCJsaW5rXCIpO3ooZCxcImVycm9yXCIsZSk7ZyYmeihkLFwibG9hZFwiLGcpO2E/KGQudHlwZT1cInRleHQvamF2YXNjcmlwdFwiLGQuYXN5bmM9ITAsYyYmL0FVSUNsaWVudHN8aW1hZ2VzWy9dSS8udGVzdChiKSYmZC5zZXRBdHRyaWJ1dGUoXCJjcm9zc29yaWdpblwiLFwiYW5vbnltb3VzXCIpLGQuc3JjPWIpOihkLnJlbD1cInN0eWxlc2hlZXRcIixkLmhyZWY9Yik7aC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0uYXBwZW5kQ2hpbGQoZCl9ZnVuY3Rpb24gaGEoYSxiKXtyZXR1cm4gZnVuY3Rpb24oYyxlKXtmdW5jdGlvbiBnKCl7eGEoYixjLGQsZnVuY3Rpb24oYil7VD90KFwicmVzb3VyY2VfdW5sb2FkXCIpOlxuZD8oZD0hMSx0KFwicmVzb3VyY2VfcmV0cnlcIiksZygpKToodChcInJlc291cmNlX2Vycm9yXCIpLGEubG9nKFwiQXNzZXQgZmFpbGVkIHRvIGxvYWQ6IFwiK2MpKTtiJiZiLnN0b3BQcm9wYWdhdGlvbj9iLnN0b3BQcm9wYWdhdGlvbigpOmYuZXZlbnQmJihmLmV2ZW50LmNhbmNlbEJ1YmJsZT0hMCl9LGUpfWlmKGlhW2NdKXJldHVybiExO2lhW2NdPSEwO3QoXCJyZXNvdXJjZV9jb3VudFwiKTt2YXIgZD0hMDtyZXR1cm4hZygpfX1mdW5jdGlvbiB5YShhLGIsYyl7Zm9yKHZhciBlPXtuYW1lOmEsZ3VhcmQ6ZnVuY3Rpb24oYyl7cmV0dXJuIGIuZ3VhcmRGYXRhbChhLGMpfSxndWFyZFRpbWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGIuZ3VhcmRUaW1lKGEpfSxsb2dFcnJvcjpmdW5jdGlvbihjLGQsZSl7Yi5sb2dFcnJvcihjLGQsZSxhKX19LGc9W10sZD0wO2Q8Yy5sZW5ndGg7ZCsrKUguaGFzT3duUHJvcGVydHkoY1tkXSkmJihnW2RdPVUuaGFzT3duUHJvcGVydHkoY1tkXSk/VVtjW2RdXShIW2NbZF1dLFxuZSk6SFtjW2RdXSk7cmV0dXJuIGd9ZnVuY3Rpb24gQihhLGIsYyxlLGcpe3JldHVybiBmdW5jdGlvbihkLGgpe2Z1bmN0aW9uIGwoKXt2YXIgYT1udWxsO2U/YT1oOlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoJiYocC5zdGFydD13KCksYT1oLmFwcGx5KGYseWEoZCxrLG0pKSxwLmVuZD13KCkpO2lmKGIpe0hbZF09YTthPWQ7Zm9yKGZhW2FdPSEwOyhBW2FdfHxbXSkubGVuZ3RoOylBW2FdLnNoaWZ0KCkoKTtkZWxldGUgQVthXX1wLmRvbmU9ITB9dmFyIGs9Z3x8dGhpcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCYmKGg9ZCxkPUYpO2ImJihkPWQ/ZC5yZXBsYWNlKGphLFwiXCIpOlwiX19OT05BTUVfX1wiLFYuaGFzT3duUHJvcGVydHkoZCkmJmsuZXJyb3IocShcIiwgcmVyZWdpc3RlcmVkIGJ5IFwiLHEoXCIgYnkgXCIsZCtcIiBhbHJlYWR5IHJlZ2lzdGVyZWRcIixWW2RdKSxrLmF0dHJpYnV0aW9uKSxkKSxWW2RdPWsuYXR0cmlidXRpb24pO2Zvcih2YXIgbT1bXSxuPTA7bjxhLmxlbmd0aDtuKyspbVtuXT1cbmFbbl0ucmVwbGFjZShqYSxcIlwiKTt2YXIgcD1DW2R8fFwiYW5vblwiKyArK3phXT17ZGVwZW5kOm0scmVnaXN0ZXJlZDp3KCksbmFtZXNwYWNlOmsubmFtZXNwYWNlfTtkJiZBYS5oYXNPd25Qcm9wZXJ0eShkKTtjP2woKTp3YShtLGsuZ3VhcmRGYXRhbChkLGwpLGQpO3JldHVybntkZWNvcmF0ZTpmdW5jdGlvbihhKXtVW2RdPWsuZ3VhcmRGYXRhbChkLGEpfX19fWZ1bmN0aW9uIGthKGEpe3JldHVybiBmdW5jdGlvbigpe3ZhciBiPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJue2V4ZWN1dGU6QihiLCExLGEsITEsdGhpcykscmVnaXN0ZXI6QihiLCEwLGEsITEsdGhpcyl9fX1mdW5jdGlvbiBXKGEsYil7cmV0dXJuIGZ1bmN0aW9uKGMsZSl7ZXx8KGU9YyxjPUYpO3ZhciBnPXRoaXMuYXR0cmlidXRpb247cmV0dXJuIGZ1bmN0aW9uKCl7dS5wdXNoKGJ8fHthdHRyaWJ1dGlvbjpnLG5hbWU6Yyxsb2dMZXZlbDphfSk7dmFyIGQ9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG51LnBvcCgpO3JldHVybiBkfX19ZnVuY3Rpb24gSShhLGIpe3RoaXMubG9hZD17anM6aGEodGhpcywhMCksY3NzOmhhKHRoaXMpfTtHKHRoaXMsXCJuYW1lc3BhY2VcIixiKTtHKHRoaXMsXCJhdHRyaWJ1dGlvblwiLGEpfWZ1bmN0aW9uIGxhKCl7aC5ib2R5P3IudHJpZ2dlcihcImEtYm9keUJlZ2luXCIpOnNldFRpbWVvdXQobGEsMjApfWZ1bmN0aW9uIEQoYSxiKXthLmNsYXNzTmFtZT1YKGEsYikrXCIgXCIrYn1mdW5jdGlvbiBYKGEsYil7cmV0dXJuKFwiIFwiK2EuY2xhc3NOYW1lK1wiIFwiKS5zcGxpdChcIiBcIitiK1wiIFwiKS5qb2luKFwiIFwiKS5yZXBsYWNlKC9eIHwgJC9nLFwiXCIpfWZ1bmN0aW9uIG1hKGEpe3RyeXtyZXR1cm4gYSgpfWNhdGNoKGIpe3JldHVybiExfX1mdW5jdGlvbiBZKGEpe3JldHVybiBmLm1hdGNoTWVkaWE/Zi5tYXRjaE1lZGlhKGEpOnttYXRjaGVzOiExfX1mdW5jdGlvbiBKKCl7aWYoSyl7dmFyIGE9bC5tb2JpbGV8fGwudGFibGV0P1oubWF0Y2hlcyYmTC5tYXRjaGVzOkwubWF0Y2hlcztcbmlmKG5hIT09YSl7dmFyIGI9e3c6Zi5pbm5lcldpZHRofHxrLmNsaWVudFdpZHRoLGg6Zi5pbm5lckhlaWdodHx8ay5jbGllbnRIZWlnaHR9O2lmKDE3PE1hdGguYWJzKGFhLnctYi53KXx8NTA8TWF0aC5hYnMoYWEuaC1iLmgpKWFhPWIsKG5hPWEpP0QoayxcImEtd3NcIik6ay5jbGFzc05hbWU9WChrLFwiYS13c1wiKX19fWZ1bmN0aW9uIEJhKGEpeyhLPWE9PT1GPyFLOiEhYSkmJkooKX1mdW5jdGlvbiBDYSgpe3JldHVybiBLfWZ1bmN0aW9uIG9hKCl7RS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3koYSl9KX1mdW5jdGlvbiBwYShhLGIsYyl7aWYoYil7YT1wKC9DaHJvbWUvaSkmJiFwKC9FZGdlL2kpJiYhcCgvT1BSL2kpJiYhYS5jYXBhYmlsaXRpZXMuaXNBbWF6b25BcHAmJiFwKG5ldyBSZWdFeHAoYmErXCJid3ZcIitiYStcImJcIikpO3ZhciBlPVwic3c6YnJvd3NlcjpcIitjK1wiOlwiO2IuYnJvd3NlciYmYSYmKEUucHVzaChlK1wic3VwcG9ydGVkXCIpLGIuYnJvd3Nlci5hY3Rpb24oZSxjKSk7IWEmJmIuYnJvd3NlciYmXG5FLnB1c2goZStcInVuc3VwcG9ydGVkXCIpfX1cInVzZSBzdHJpY3RcIjt2YXIgTT1RLm5vdz1RLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IFF9LHc9ZnVuY3Rpb24oYSl7cmV0dXJuIGEmJmEubm93P2Eubm93LmJpbmQoYSk6TX0oZi5wZXJmb3JtYW5jZSksTj13KCksQWE9e30sbT1mLkFtYXpvblVJUGFnZUpTfHxmLlA7aWYobSYmbS53aGVuJiZtLnJlZ2lzdGVyKXtOPVtdO2Zvcih2YXIgbj1oLmN1cnJlbnRTY3JpcHQ7bjtuPW4ucGFyZW50RWxlbWVudCluLmlkJiZOLnB1c2gobi5pZCk7cmV0dXJuIG0ubG9nKFwiQSBjb3B5IG9mIFAgaGFzIGFscmVhZHkgYmVlbiBsb2FkZWQgb24gdGhpcyBwYWdlLlwiLFwiRkFUQUxcIixOLmpvaW4oXCIgXCIpKX12YXIgdj1mLnVlO3koKTt5KFwiYXVpX2J1aWxkX2RhdGU6My4yMS45LTIwMjItMDEtMDVcIik7dmFyIFI9W10sRGE9W10sUz0hMTt2YXIgZWE9ZnVuY3Rpb24oKXtmb3IodmFyIGE9c2V0VGltZW91dChlYSwwKSxiPU0oKTtEYS5sZW5ndGh8fFIubGVuZ3RoOylpZihSLnNoaWZ0KCkoKSxcbjUwPE0oKS1iKXJldHVybjtjbGVhclRpbWVvdXQoYSk7Uz0hMX07dmFyIGZhPXt9LEE9e30saWE9e30sVD0hMTt6KGYsXCJiZWZvcmV1bmxvYWRcIixmdW5jdGlvbigpe1Q9ITA7c2V0VGltZW91dChmdW5jdGlvbigpe1Q9ITF9LDFFNCl9KTt2YXIgamE9L15wcnY6LyxWPXt9LEg9e30sVT17fSxDPXt9LHphPTAsYmE9U3RyaW5nLmZyb21DaGFyQ29kZSg5MiksdT1bXSxxYT0hMCxyYT1mLm9uZXJyb3I7Zi5vbmVycm9yPWZ1bmN0aW9uKGEsYixjLGUsZyl7ZyYmXCJvYmplY3RcIj09PXR5cGVvZiBnfHwoZz1FcnJvcihhLGIsYyksZy5jb2x1bW5OdW1iZXI9ZSxnLnN0YWNrPWJ8fGN8fGU/cShiYSxnLm1lc3NhZ2UsXCJhdCBcIitxKFwiOlwiLGIsYyxlKSk6Rik7dmFyIGQ9dS5wb3AoKXx8e307Zy5hdHRyaWJ1dGlvbj1xKFwiOlwiLGcuYXR0cmlidXRpb258fGQuYXR0cmlidXRpb24sZC5uYW1lKTtnLmxvZ0xldmVsPWQubG9nTGV2ZWw7Zy5hdHRyaWJ1dGlvbiYmY29uc29sZSYmY29uc29sZS5sb2cmJmNvbnNvbGUubG9nKFtnLmxvZ0xldmVsfHxcblwiRVJST1JcIixhLFwidGhyb3duIGJ5XCIsZy5hdHRyaWJ1dGlvbl0uam9pbihcIiBcIikpO3U9W107cmEmJihkPVtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxkWzRdPWcscmEuYXBwbHkoZixkKSl9O0kucHJvdG90eXBlPXtsb2dFcnJvcjpmdW5jdGlvbihhLGIsYyxlKXtiPXttZXNzYWdlOmIsbG9nTGV2ZWw6Y3x8XCJFUlJPUlwiLGF0dHJpYnV0aW9uOnEoXCI6XCIsdGhpcy5hdHRyaWJ1dGlvbixlKX07aWYoZi51ZUxvZ0Vycm9yKXJldHVybiBmLnVlTG9nRXJyb3IoYXx8YixhP2I6bnVsbCksITA7Y29uc29sZSYmY29uc29sZS5lcnJvciYmKGNvbnNvbGUubG9nKGIpLGNvbnNvbGUuZXJyb3IoYSkpO3JldHVybiExfSxlcnJvcjpmdW5jdGlvbihhLGIsYyxlKXthPUVycm9yKHEoXCI6XCIsZSxhLGMpKTthLmF0dHJpYnV0aW9uPXEoXCI6XCIsdGhpcy5hdHRyaWJ1dGlvbixiKTt0aHJvdyBhO30sZ3VhcmRFcnJvcjpXKCksZ3VhcmRGYXRhbDpXKFwiRkFUQUxcIiksZ3VhcmRDdXJyZW50OmZ1bmN0aW9uKGEpe3ZhciBiPVxudVt1Lmxlbmd0aC0xXTtyZXR1cm4gYj9XKGIubG9nTGV2ZWwsYikuY2FsbCh0aGlzLGEpOmF9LGd1YXJkVGltZTpmdW5jdGlvbihhKXt2YXIgYj11W3UubGVuZ3RoLTFdLGM9YiYmYi5uYW1lO3JldHVybiBjJiZjIGluIEM/ZnVuY3Rpb24oKXt2YXIgYj13KCksZz1hLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtDW2NdLmFzeW5jPShDW2NdLmFzeW5jfHwwKSt3KCktYjtyZXR1cm4gZ306YX0sbG9nOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5sb2dFcnJvcihudWxsLGEsYixjKX0sZGVjbGFyZTpCKFtdLCEwLCEwLCEwKSxyZWdpc3RlcjpCKFtdLCEwKSxleGVjdXRlOkIoW10pLEFVSV9CVUlMRF9EQVRFOlwiMy4yMS45LTIwMjItMDEtMDVcIix3aGVuOmthKCksbm93OmthKCEwKSx0cmlnZ2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZT1NKCk7dGhpcy5kZWNsYXJlKGEse2RhdGE6YixwYWdlRWxhcHNlZFRpbWU6ZS0oZi5hUGFnZVN0YXJ0fHxOYU4pLHRyaWdnZXJUaW1lOmV9KTtjJiZjLmluc3RydW1lbnQmJlxuTy53aGVuKFwicHJ2OmEtbG9nVHJpZ2dlclwiKS5leGVjdXRlKGZ1bmN0aW9uKGIpe2IoYSl9KX0saGFuZGxlVHJpZ2dlcnM6ZnVuY3Rpb24oKXt0aGlzLmxvZyhcImhhbmRsZVRyaWdnZXJzIGRlcHJlY2F0ZWRcIil9LGF0dHJpYnV0ZUVycm9yczpmdW5jdGlvbihhKXtyZXR1cm4gbmV3IEkoYSl9LF9uYW1lc3BhY2U6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IEkoYSxiKX0sc2V0UHJpb3JpdHk6ZnVuY3Rpb24oYSl7cWE/cWE9ITE6dGhpcy5sb2coXCJzZXRQcmlvcml0eSBvbmx5IGFjY2VwdCB0aGUgZmlyc3QgY2FsbC5cIil9fTt2YXIgcj1HKGYsXCJBbWF6b25VSVBhZ2VKU1wiLG5ldyBJKTt2YXIgTz1yLl9uYW1lc3BhY2UoXCJQYWdlSlNcIixcIkFtYXpvblVJXCIpO08uZGVjbGFyZShcInBydjpwLWRlYnVnXCIsQyk7ci5kZWNsYXJlKFwicC1yZWNvcmRlci1ldmVudHNcIixbXSk7ci5kZWNsYXJlKFwicC1yZWNvcmRlci1zdG9wXCIsZnVuY3Rpb24oKXt9KTtHKGYsXCJQXCIscik7bGEoKTtpZihoLmFkZEV2ZW50TGlzdGVuZXIpe3ZhciBzYTtcbmguYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixzYT1mdW5jdGlvbigpe3IudHJpZ2dlcihcImEtZG9tcmVhZHlcIik7aC5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLHNhLCExKX0sITEpfXZhciBrPWguZG9jdW1lbnRFbGVtZW50LGNhPWZ1bmN0aW9uKCl7dmFyIGE9W1wiT1wiLFwibXNcIixcIk1velwiLFwiV2Via2l0XCJdLGI9aC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3JldHVybnt0ZXN0R3JhZGllbnRzOmZ1bmN0aW9uKCl7cmV0dXJuITB9LHRlc3Q6ZnVuY3Rpb24oYyl7dmFyIGU9Yy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStjLnN1YnN0cigxKTtjPShhLmpvaW4oZStcIiBcIikrZStcIiBcIitjKS5zcGxpdChcIiBcIik7Zm9yKGU9Yy5sZW5ndGg7ZS0tOylpZihcIlwiPT09Yi5zdHlsZVtjW2VdXSlyZXR1cm4hMDtyZXR1cm4hMX0sdGVzdFRyYW5zZm9ybTNkOmZ1bmN0aW9uKCl7cmV0dXJuITB9fX0oKTttPWsuY2xhc3NOYW1lO3ZhciB0YT0vKF58IClhLW1vYmlsZSggfCQpLy50ZXN0KG0pLFxudWE9LyhefCApYS10YWJsZXQoIHwkKS8udGVzdChtKSxsPXthdWRpbzpmdW5jdGlvbigpe3JldHVybiEhaC5jcmVhdGVFbGVtZW50KFwiYXVkaW9cIikuY2FuUGxheVR5cGV9LHZpZGVvOmZ1bmN0aW9uKCl7cmV0dXJuISFoLmNyZWF0ZUVsZW1lbnQoXCJ2aWRlb1wiKS5jYW5QbGF5VHlwZX0sY2FudmFzOmZ1bmN0aW9uKCl7cmV0dXJuISFoLmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikuZ2V0Q29udGV4dH0sc3ZnOmZ1bmN0aW9uKCl7cmV0dXJuISFoLmNyZWF0ZUVsZW1lbnROUyYmISFoLmNyZWF0ZUVsZW1lbnROUyhcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXCJzdmdcIikuY3JlYXRlU1ZHUmVjdH0sb2ZmbGluZTpmdW5jdGlvbigpe3JldHVybiBuYXZpZ2F0b3IuaGFzT3duUHJvcGVydHkmJm5hdmlnYXRvci5oYXNPd25Qcm9wZXJ0eShcIm9uTGluZVwiKSYmbmF2aWdhdG9yLm9uTGluZX0sZHJhZ0Ryb3A6ZnVuY3Rpb24oKXtyZXR1cm5cImRyYWdnYWJsZVwiaW4gaC5jcmVhdGVFbGVtZW50KFwic3BhblwiKX0sXG5nZW9sb2NhdGlvbjpmdW5jdGlvbigpe3JldHVybiEhbmF2aWdhdG9yLmdlb2xvY2F0aW9ufSxoaXN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuISghZi5oaXN0b3J5fHwhZi5oaXN0b3J5LnB1c2hTdGF0ZSl9LHdlYndvcmtlcjpmdW5jdGlvbigpe3JldHVybiEhZi5Xb3JrZXJ9LGF1dG9mb2N1czpmdW5jdGlvbigpe3JldHVyblwiYXV0b2ZvY3VzXCJpbiBoLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKX0saW5wdXRQbGFjZWhvbGRlcjpmdW5jdGlvbigpe3JldHVyblwicGxhY2Vob2xkZXJcImluIGguY3JlYXRlRWxlbWVudChcImlucHV0XCIpfSx0ZXh0YXJlYVBsYWNlaG9sZGVyOmZ1bmN0aW9uKCl7cmV0dXJuXCJwbGFjZWhvbGRlclwiaW4gaC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIil9LGxvY2FsU3RvcmFnZTpmdW5jdGlvbigpe3JldHVyblwibG9jYWxTdG9yYWdlXCJpbiBmJiZudWxsIT09Zi5sb2NhbFN0b3JhZ2V9LG9yaWVudGF0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuXCJvcmllbnRhdGlvblwiaW4gZn0sXG50b3VjaDpmdW5jdGlvbigpe3JldHVyblwib250b3VjaGVuZFwiaW4gaH0sZ3JhZGllbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGNhLnRlc3RHcmFkaWVudHMoKX0saGlyZXM6ZnVuY3Rpb24oKXt2YXIgYT1mLmRldmljZVBpeGVsUmF0aW8mJjEuNTw9Zi5kZXZpY2VQaXhlbFJhdGlvfHxmLm1hdGNoTWVkaWEmJmYubWF0Y2hNZWRpYShcIihtaW4tcmVzb2x1dGlvbjoxNDRkcGkpXCIpLm1hdGNoZXM7dChcImhpUmVzXCIrKHRhP1wiTW9iaWxlXCI6dWE/XCJUYWJsZXRcIjpcIkRlc2t0b3BcIiksYT8xOjApO3JldHVybiBhfSx0cmFuc2Zvcm0zZDpmdW5jdGlvbigpe3JldHVybiBjYS50ZXN0VHJhbnNmb3JtM2QoKX0sdG91Y2hTY3JvbGxpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gcCgvV2luZG93c2hvcHxhbmRyb2lkfE9TIChbNS05XXxbMS05XVswLTldKykoX1swLTldezEsMn0pKyBsaWtlIE1hYyBPUyBYfFNPRlRXQVJFPShbNS05XXxbMS05XVswLTldKykoLlswLTldezEsMn0pKy4qREVWSUNFPWlQaG9uZXxDaHJvbWV8U2lsa3xGaXJlZm94fFRyaWRlbnQuKz87IFRvdWNoL2kpfSxcbmlvczpmdW5jdGlvbigpe3JldHVybiBwKC9PUyBbMS05XVswLTldKihfWzAtOV0qKSsgbGlrZSBNYWMgT1MgWC9pKSYmIXAoL3RyaWRlbnR8RWRnZS9pKX0sYW5kcm9pZDpmdW5jdGlvbigpe3JldHVybiBwKC9hbmRyb2lkLihbMS05XXxbTC1aXSkvaSkmJiFwKC90cmlkZW50fEVkZ2UvaSl9LG1vYmlsZTpmdW5jdGlvbigpe3JldHVybiB0YX0sdGFibGV0OmZ1bmN0aW9uKCl7cmV0dXJuIHVhfSxydGw6ZnVuY3Rpb24oKXtyZXR1cm5cInJ0bFwiPT09ay5kaXJ9fTtmb3IobiBpbiBsKWwuaGFzT3duUHJvcGVydHkobikmJihsW25dPW1hKGxbbl0pKTtmb3IodmFyIGRhPVwidGV4dFNoYWRvdyB0ZXh0U3Ryb2tlIGJveFNoYWRvdyBib3JkZXJSYWRpdXMgYm9yZGVySW1hZ2Ugb3BhY2l0eSB0cmFuc2Zvcm0gdHJhbnNpdGlvblwiLnNwbGl0KFwiIFwiKSxQPTA7UDxkYS5sZW5ndGg7UCsrKWxbZGFbUF1dPW1hKGZ1bmN0aW9uKCl7cmV0dXJuIGNhLnRlc3QoZGFbUF0pfSk7dmFyIEs9ITAsYWE9e3c6MCxcbmg6MH0sWj1ZKFwiKG9yaWVudGF0aW9uOmxhbmRzY2FwZSlcIiksTD1sLm1vYmlsZXx8bC50YWJsZXQ/WShcIihtaW4td2lkdGg6NDUxcHgpXCIpOlkoXCIobWluLXdpZHRoOjEyNTBweClcIik7Wi5hZGRMaXN0ZW5lciYmWi5hZGRMaXN0ZW5lcihKKTtMLmFkZExpc3RlbmVyJiZMLmFkZExpc3RlbmVyKEopO3ZhciBuYTtKKCk7dmFyIHZhPXtnZXRJdGVtOmZ1bmN0aW9uKGEpe3RyeXtyZXR1cm4gZi5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShhKX1jYXRjaChiKXt9fSxzZXRJdGVtOmZ1bmN0aW9uKGEsYil7dHJ5e3JldHVybiBmLmxvY2FsU3RvcmFnZS5zZXRJdGVtKGEsYil9Y2F0Y2goYyl7fX19O2suY2xhc3NOYW1lPVgoayxcImEtbm8tanNcIik7RChrLFwiYS1qc1wiKTshcCgvT1MgWzEtOF0oX1swLTldKikrIGxpa2UgTWFjIE9TIFgvaSl8fGYubmF2aWdhdG9yLnN0YW5kYWxvbmV8fHAoL3NhZmFyaS9pKXx8RChrLFwiYS1lbWJlclwiKTttPVtdO2ZvcihuIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShuKSYmbFtuXSYmXG5tLnB1c2goXCJhLVwiK24ucmVwbGFjZSgvKFtBLVpdKS9nLGZ1bmN0aW9uKGEpe3JldHVyblwiLVwiK2EudG9Mb3dlckNhc2UoKX0pKTtEKGssbS5qb2luKFwiIFwiKSk7ay5zZXRBdHRyaWJ1dGUoXCJkYXRhLWF1aS1idWlsZC1kYXRlXCIsXCIzLjIxLjktMjAyMi0wMS0wNVwiKTtyLnJlZ2lzdGVyKFwicC1kZXRlY3RcIixmdW5jdGlvbigpe3JldHVybntjYXBhYmlsaXRpZXM6bCxsb2NhbFN0b3JhZ2U6bC5sb2NhbFN0b3JhZ2UmJnZhLHRvZ2dsZVJlc3BvbnNpdmVHcmlkOkJhLHJlc3BvbnNpdmVHcmlkRW5hYmxlZDpDYX19KTtwKC9VQ0Jyb3dzZXIvaSl8fGwubG9jYWxTdG9yYWdlJiZEKGssdmEuZ2V0SXRlbShcImEtZm9udC1jbGFzc1wiKSk7ci5kZWNsYXJlKFwiYS1ldmVudC1yZXZpc2VkLWhhbmRsaW5nXCIsITEpO3RyeXt2YXIgeD1uYXZpZ2F0b3Iuc2VydmljZVdvcmtlcn1jYXRjaChhKXt5KFwic3c6bmF2X2VyclwiKX14JiYoeih4LFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2EmJmEuZGF0YSYmdChhLmRhdGEuayxcbmEuZGF0YS52KX0pLHguY29udHJvbGxlciYmeC5jb250cm9sbGVyLnBvc3RNZXNzYWdlKFwiTVNHLVJEWVwiKSk7dmFyIEU9W107bT17cmVnOnt9LHVucmVnOnt9fTttLnVucmVnLmJyb3dzZXI9e2FjdGlvbjpmdW5jdGlvbihhLGIpe3RyeXt4LmdldFJlZ2lzdHJhdGlvbnMoKS50aGVuKGZ1bmN0aW9uKGMpe2MuZm9yRWFjaChmdW5jdGlvbihjKXtjLnVucmVnaXN0ZXIoKS50aGVuKGZ1bmN0aW9uKCl7dChhK1wic3VjY2Vzc1wiKX0pLmNhdGNoKGZ1bmN0aW9uKGMpe3IubG9nRXJyb3IoYyxcIltBVUkgU1ddIEZhaWxlZCB0byBcIitiK1wiIHNlcnZpY2Ugd29ya2VyOiBcIik7dChhK1wiZmFpbHVyZVwiKX0pfSl9KX1jYXRjaChjKXt5KFwic3c6YXBpX2Vycm9yXCIpfX19OyhmdW5jdGlvbihhKXt2YXIgYj1hLnJlZyxjPWEudW5yZWc7eCYmeC5nZXRSZWdpc3RyYXRpb25zPyhPLndoZW4oXCJBXCIpLmV4ZWN1dGUoZnVuY3Rpb24oYSl7cGEoYSxjLFwidW5yZWdpc3RlclwiKX0pLHooZixcImxvYWRcIixmdW5jdGlvbigpe08ud2hlbihcIkFcIikuZXhlY3V0ZShmdW5jdGlvbihhKXtwYShhLFxuYixcInJlZ2lzdGVyXCIpO29hKCl9KX0pKTooYiYmYi5icm93c2VyJiZFLnB1c2goXCJzdzpicm93c2VyOnJlZ2lzdGVyOnVuc3VwcG9ydGVkXCIpLGMmJmMuYnJvd3NlciYmRS5wdXNoKFwic3c6YnJvd3Nlcjp1bnJlZ2lzdGVyOnVuc3VwcG9ydGVkXCIpLG9hKCkpfSkobSk7ci5kZWNsYXJlKFwiYS1maXgtZXZlbnQtb2ZmXCIsITEpO3QoXCJwYWdlanM6cGtnRXhlY1RpbWVcIix3KCktTil9KSh3aW5kb3csZG9jdW1lbnQsRGF0ZSk7XG4oZnVuY3Rpb24oYil7ZnVuY3Rpb24gcihhLGUsZCl7ZnVuY3Rpb24gayhhLGIsZil7dmFyIGM9QXJyYXkoZS5sZW5ndGgpO35tJiYoY1ttXT17fSk7fm4mJihjW25dPWYpO2ZvcihmPTA7ZjxwLmxlbmd0aDtmKyspe3ZhciBnPXBbZl0sdD1hW2ZdO2NbZ109dH1mb3IoZj0wO2Y8cS5sZW5ndGg7ZisrKWc9cVtmXSx0PWJbZl0sY1tnXT10O2E9ZC5hcHBseShudWxsLGMpO3JldHVybn5tP2NbbV06YX1cInN0cmluZ1wiIT09dHlwZW9mIGEmJmIuUC5lcnJvcihcIkMwMDFcIik7LTE9PT1hLmluZGV4T2YoXCJAXCIpJiYtMTxhLmluZGV4T2YoXCIvXCIpJiYoLTE8YS5pbmRleE9mKFwiZXMzXCIpfHwtMTxhLmluZGV4T2YoXCJldmVyZ3JlZW5cIikpJiYoYT1hLnN1YnN0cmluZygwLGEubGFzdEluZGV4T2YoXCIvXCIpKSk7aWYoIXVbYV0pe3VbYV09ITA7ZHx8KGQ9ZSxlPVtdKTthPWEuc3BsaXQoXCI6XCIsMik7dmFyIGM9YVsxXT9hWzBdOnZvaWQgMCxnPShhWzFdfHxhWzBdKS5yZXBsYWNlKC9AY2FwYWJpbGl0eVxcLy8sXG5cIkBjL1wiKSxsPWM/Yi5QLl9uYW1lc3BhY2UoYyk6Yi5QLHY9IWcubGFzdEluZGV4T2YoXCJAYy9cIiwwKSxwPVtdO2E9W107dmFyIHE9W10sdz1bXSxuPS0xLG09LTE7Zm9yKGM9MDtjPGUubGVuZ3RoO2MrKyl7dmFyIGg9ZVtjXTtcIm1vZHVsZVwiPT09aCYmbC5lcnJvcihcIkMwMDJcIik7XCJleHBvcnRzXCI9PT1oP209YzpcInJlcXVpcmVcIj09PWg/bj1jOmgubGFzdEluZGV4T2YoXCJAcC9cIiwwKT9oLmxhc3RJbmRleE9mKFwiQGMvXCIsMCk/KHAucHVzaChjKSxhLnB1c2goXCJtaXg6XCIraCkpOihxLnB1c2goYyksdy5wdXNoKGgpKToocC5wdXNoKGMpLGEucHVzaChoLnN1YnN0cigzKSkpfWwud2hlbi5hcHBseShsLGEpLnJlZ2lzdGVyKFwibWl4OlwiK2csZnVuY3Rpb24oKXt2YXIgYT1bXS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIHZ8fH5ufHxxLmxlbmd0aD97Y2FwYWJpbGl0aWVzOncsY2FyZE1vZHVsZUZhY3Rvcnk6ZnVuY3Rpb24oYixjKXtiPWsoYSxiLGMpO2IuUD1sO3JldHVybiBifSxyZXF1aXJlOn5uP1xucjp2b2lkIDB9OmsoYSxbXSxmdW5jdGlvbigpe30pfSk7diYmbC53aGVuKFwibWl4OkBhbXpuL21peC5jbGllbnQtcnVudGltZVwiLFwibWl4OlwiK2cpLmV4ZWN1dGUoZnVuY3Rpb24oYSxiKXthLnJlZ2lzdGVyQ2FwYWJpbGl0eU1vZHVsZShnLGIpfSk7bC53aGVuKFwibWl4OlwiK2cpLnJlZ2lzdGVyKFwieGNwOlwiK2csZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTt2YXIgcj1mdW5jdGlvbihhLGIsYyl7dHJ5e3ZhciBlPS0xPGcuaW5kZXhPZihcIi9cIik/Zy5zcGxpdChcIi9cIilbMF06ZyxkPWFbMF0sZj1kLmxhc3RJbmRleE9mKFwiLi9cIiwwKT9kOmUrXCIvXCIrZC5zdWJzdHIoMiksaD1mLmxhc3RJbmRleE9mKFwiQHAvXCIsMCk/XCJtaXg6XCIrZjpmLnN1YnN0cigzKTtsLndoZW4oaCkuZXhlY3V0ZShmdW5jdGlvbihhKXt0cnl7YihhKX1jYXRjaCh5KXtjKHkpfX0pfWNhdGNoKHgpe2MoeCl9fX19XCJ1c2Ugc3RyaWN0XCI7dmFyIHU9e307Yi5taXhfZHx8KChiLlByb21pc2U/UDpQLndoZW4oXCIzcC1wcm9taXNlXCIpKS5yZWdpc3RlcihcIkBwL3Byb21pc2UtaXMtcmVhZHlcIixcbmZ1bmN0aW9uKGEpe2IuUHJvbWlzZT1iLlByb21pc2V8fGF9KSwoQXJyYXkucHJvdG90eXBlLmluY2x1ZGVzP1A6UC53aGVuKFwiYS1wb2x5ZmlsbFwiKSkucmVnaXN0ZXIoXCJAcC9wb2x5ZmlsbC1pcy1yZWFkeVwiLGZ1bmN0aW9uKCl7fSksYi5taXhfZD1mdW5jdGlvbihhLGIsZCl7UC53aGVuKFwiQHAvcHJvbWlzZS1pcy1yZWFkeVwiLFwiQHAvcG9seWZpbGwtaXMtcmVhZHlcIikuZXhlY3V0ZShcIkBwL21peC1kLWRlcHNcIixmdW5jdGlvbigpe3IoYSxiLGQpfSl9LGIueGNwX2Q9Yi5taXhfZCxQLndoZW4oXCJtaXg6QGFtem4vbWl4LmNsaWVudC1ydW50aW1lXCIpLmV4ZWN1dGUoZnVuY3Rpb24oYSl7UC5kZWNsYXJlKFwieGNwOkB4Y3AvcnVudGltZVwiLGEpfSkpO2IubWl4VGltZW91dHx8KGIubWl4VGltZW91dD1mdW5jdGlvbihhLGUsZCl7Yi5taXhDYXJkSW5pdFRpbWVvdXRzfHwoYi5taXhDYXJkSW5pdFRpbWVvdXRzPXt9KTtiLm1peENhcmRJbml0VGltZW91dHNbZV0mJmNsZWFyVGltZW91dChiLm1peENhcmRJbml0VGltZW91dHNbZV0pO1xuYi5taXhDYXJkSW5pdFRpbWVvdXRzW2VdPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtQLmxvZyhcIkNsaWVudC1zaWRlIGluaXRpYWxpemF0aW9uIHRpbWVvdXRcIixcIldBUk5cIixhKX0sZCl9KTtiLm1peF9jc2FfbWFwPWIubWl4X2NzYV9tYXB8fHt9O2IubWl4X2NzYT1iLm1peF9jc2F8fGZ1bmN0aW9uKGEsZSl7dHJ5e2U9ZXx8XCJcIjt2YXIgZD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGEpO2lmKDE8ZC5sZW5ndGgpZm9yKHZhciBrPTA7azxkLmxlbmd0aDtrKyspe2lmKGRba10ucXVlcnlTZWxlY3RvcihlKSl7dmFyIGM9ZFtrXTticmVha319ZWxzZSAxPT09ZC5sZW5ndGgmJihjPWRbMF0pO2lmKCFjKXRocm93IEVycm9yKFwiIFwiKTtyZXR1cm4gYi5taXhfY3NhX21hcFthXT1iLm1peF9jc2FfbWFwW2FdfHxiLmNzYShcIkNvbnRlbnRcIix7ZWxlbWVudDpjfSl9Y2F0Y2goZyl7cmV0dXJuIFAubG9nRXJyb3IoZyxcIk1JWCBDMDA0XCIsXCJFUlJPUlwiLGEpLGZ1bmN0aW9uKCl7fX19fSkod2luZG93KTtcbih3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLndoZW4oJ3NwLmxvYWQuanMnKS5leGVjdXRlKGZ1bmN0aW9uKCkge1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFYS3hyQnREVkwuanM/QVVJQ2xpZW50cy9BbWF6b25VSWpRdWVyeScpO1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMTFZKzV4K2trVEwuX1JDfDUxMTA2Z1NEbkpMLmpzLDExeUtPUnYtR1RMLmpzLDExZ2lYdFpDd1ZMLmpzLDAxK3ordUllSi1MLmpzLDAxVlJNVjNGQmRMLmpzLDIxU0RKdEJVLVBMLmpzLDAxMkZWYzMxMzFMLmpzLDExclJqRExkQVZMLmpzLDUxSDE5aEpSWXJMLmpzLDExa1d1M2NOallMLmpzLDExdE1vaGpXbVZMLmpzLDExT1JFbnUxZXBMLmpzLDExd2NXZGhybkRMLmpzLDIxc3NpTE5JWnZMLmpzLDAxOTB2eHRsemNMLmpzLDUxK04yNnZGY0JMLmpzLDAxSllIYzJvSWxMLmpzLDMxUjltOHJpZzVMLmpzLDAxZXpqNVJrejFMLmpzLDExK1J4VmRoTmNMLmpzLDMxbzJOR1RYVGhMLmpzLDAxcnBhdVRlcDRMLmpzLDAxS0ZrWEp4TVRMLmpzXy5qcz9BVUlDbGllbnRzL0FtYXpvblVJJyk7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS81MXhhRmJkLTE4TC5qcz9BVUlDbGllbnRzL0NhcmRKc1J1bnRpbWVCdXp6Q29weUJ1aWxkJyk7XG59KTtcbjwvc2NyaXB0PlxuPCEtLSBzcDplbmQtZmVhdHVyZTphdWktYXNzZXRzIC0tPlxuPCEtLSBzcDpmZWF0dXJlOm5hdi1pbmxpbmUtY3NzIC0tPlxuPCEtLSBOQVZZQUFOIENTUyAtLT5cblxuPHN0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuLm5hdi1zcHJpdGUtdjEgLm5hdi1zcHJpdGUsIC5uYXYtc3ByaXRlLXYxIC5uYXYtaWNvbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvbmF2LXNwcml0ZS1nbG9iYWwtMXgtaG0tZHNrLXJlb3JnLl9DQjQwNTkzNzU0N18ucG5nKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAwcHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbn1cbi5uYXYtc3Bpbm5lciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvamF2YXNjcmlwdHMvbGliL3BvcG92ZXIvaW1hZ2VzL3NuYWtlLl9DQjQ4NTkzNTYxMV8uZ2lmKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbi5uYXYtdGltZWxpbmUtaWNvbiwgLm5hdi1hY2Nlc3MtaW1hZ2UsIC5uYXYtdGltZWxpbmUtcHJpbWUtaWNvbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvdGltZWxpbmVfc3ByaXRlXzF4Ll9DQjQ4NTk0NTk3M18ucG5nKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbn1cbjwvc3R5bGU+XG48bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS80MUtCWU9rVGpJTC5fUkN8NzFaZ3NCeE5Fa0wuY3NzLDQxRXR2LWc0b2JMLmNzcywzMUNkcFhBc1dDTC5jc3MsMzFZWnBEQ1lKUEwuY3NzLDIxTUtqb1lMOHdMLmNzcyw0MWRNeFJYQXhQTC5jc3MsMDF5Q3EzV1hFY0wuY3NzLDExa083eUFnaVFMLmNzcywzMU92SFJXK1hpTC5jc3MsMDFYSE1PSHBLMUwuY3NzLDExaVVIRG00LS1MLmNzcywzMWpKd0FGK3lMTC5jc3NfLmNzcz9BVUlDbGllbnRzL05hdkRlc2t0b3BVYmVyQXNzZXQmRmtDYWEydk4jZGVza3RvcC4zNjI1NzYtVDEuMzEwNDg0LVQxXCIgLz5cbjwhLS0gc3A6ZW5kLWZlYXR1cmU6bmF2LWlubGluZS1jc3MgLS0+XG48IS0tIHNwOmZlYXR1cmU6aG9zdC1hc3NldHMgLS0+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbjxzY3JpcHQ+XG4ndXNlIHN0cmljdCc7XG4oZnVuY3Rpb24gc2VhcmNoT25FcnJvck92ZXJyaWRlICgpIHtcbiAgICBcbiAgICB2YXIgTVNHX0ZJTFRFUlMgPSBbIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBbL15cXHMqU2NyaXB0IGVycm9yPy5cXHMqJC8sICdzLXNjcmlwdC1lcnJvciddLFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBbL1xcdytcXHNhbHJlYWR5IHJlZ2lzdGVyZWQvLCAncy1hbHJlYWR5LXJlZ2lzdGVyZWQtZXJyb3InXVxuICAgICAgICBdLFxuICAgICAgICBGSUxFX0ZJTFRFUlMgPSBbIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICBbL14oY2hyb21lLWV4dGVuc2lvbnxtb3otZXh0ZW5zaW9ufHNhZmFyaS1leHRlbnNpb24pOlxcL1xcLy8sICdzLWV4dC1lcnJvciddXG4gICAgICAgIF0sXG4gICAgICAgIG9yaWdpbmFsID0gd2luZG93Lm9uZXJyb3IgfHwgZnVuY3Rpb24gKCkge307XG4gICAgZnVuY3Rpb24gY2hlY2sgKHZhbHVlLCBmaWx0ZXJzKSB7XG4gICAgICAgIHZhciBpID0gMCwgcngsIGNvdW50ZXI7XG4gICAgICAgIGZvciAoOyBpIDwgZmlsdGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcnggPSBmaWx0ZXJzW2ldWzBdO1xuICAgICAgICAgICAgY291bnRlciA9IGZpbHRlcnNbaV1bMV07XG4gICAgICAgICAgICBpZiAocngudGVzdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB1ZS5jb3VudChjb3VudGVyLCAodWUuY291bnQoY291bnRlcikgfHwgMCkgKyAxKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIFxuICAgIGZ1bmN0aW9uIHNlYXJjaE9uRXJyb3JXcmFwcGVyIChtZXNzYWdlLCBmaWxlLCBsaW5lLCBjb2wsIGVycm9yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodWUgJiYgdWUuY291bnQpIHsgXG4gICAgICAgICAgICAgICAgaWYgKGNoZWNrKG1lc3NhZ2UsIE1TR19GSUxURVJTKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmIChjaGVjayhmaWxlLCBGSUxFX0ZJTFRFUlMpKSByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge31cbiAgICAgICAgXG4gICAgICAgIG9yaWdpbmFsLmNhbGwodGhpcywgbWVzc2FnZSwgZmlsZSwgbGluZSwgY29sLCBlcnJvcik7XG4gICAgfVxuICAgIFxuICAgIHNlYXJjaE9uRXJyb3JXcmFwcGVyLnNraXBUcmFjZSA9IDE7XG4gICAgd2luZG93Lm9uZXJyb3IgPSBzZWFyY2hPbkVycm9yV3JhcHBlcjtcbn0oKSk7XG4oZnVuY3Rpb24gc2VhcmNoVUVMb2dFcnJvckhhbmRsZXJzICgpIHtcbiAgICB2YXIgRkFUQUwgPSAnRkFUQUwnLFxuICAgICAgICBFUlJPUiA9ICdFUlJPUicsXG4gICAgICAgIFxuICAgICAgICBET1dOR1JBREVfTVNHUyA9IFsnQSBjb3B5IG9mIFAgaGFzIGFscmVhZHkgYmVlbiBsb2FkZWQgb24gdGhpcyBwYWdlLiddLFxuICAgICAgICBDT1VOVEVSID0gJ3MtZG93bmdyYWRlZC1qcy1lcnJvcic7XG4gICAgXG4gICAgZnVuY3Rpb24gZG93bmdyYWRlKHJlYykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCFyZWMpIHJldHVybjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHJlYy5sb2dMZXZlbCAhPT0gRkFUQUwpIHJldHVybjtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgRE9XTkdSQURFX01TR1MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAocmVjLm0gPT09IERPV05HUkFERV9NU0dTW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICByZWMubG9nTGV2ZWwgPSBFUlJPUjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVlICYmIHVlLmNvdW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB1ZS5jb3VudChDT1VOVEVSLCAodWUuY291bnQoQ09VTlRFUikgfHwgMCkgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnIpIHt9XG4gICAgfVxuICAgIFxuICAgIGlmICghd2luZG93LnVlX2VycikgcmV0dXJuO1xuICAgIGlmICghd2luZG93LnVlX2Vyci5lcnJvckhhbmRsZXJzKSB7d2luZG93LnVlX2Vyci5lcnJvckhhbmRsZXJzID0gW107fVxuICAgIHdpbmRvdy51ZV9lcnIuZXJyb3JIYW5kbGVycy5wdXNoKHtcbiAgICAgICAgbmFtZTogJ3MtZG93bmdyYWRlJyxcbiAgICAgICAgaGFuZGxlcjogZG93bmdyYWRlXG4gICAgfSk7XG59KCkpO1xuPC9zY3JpcHQ+XG5cblxuXG5cblxuXG48bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8wMW1JOU5ESkpUTC5fUkN8MjFzZlR5VjRKd0wuY3NzLDExSTYtdm16KzlMLmNzcyw0MW5qYkRReHVTTC5jc3MsMDFoMVJadTJVMUwuY3NzLDAxaTlsT2hPbVFMLmNzcywwMVlvbW9MRm5QTC5jc3MsMDEzWG0rempyNkwuY3NzLDQxTmJ4cnBlNmdMLmNzcywwMU1QWVhsbXpkTC5jc3MsMDE4M01JbkRYRkwuY3NzLDIxSlhNUTgzTGJMLmNzcywwMUpzdlhESDRjTC5jc3MsMDFtNEhkVWo1MUwuY3NzLDExcVB6ZkRXYklMLmNzcywxMTFQQjhRWkdnTC5jc3MsMDF0OTJ6LVl2YUwuY3NzXy5jc3M/QVVJQ2xpZW50cy9TZWFyY2hBc3NldHMmNE5Ra0crTGEjMzMzNzM1LVQxXCIgLz5cbjxsaW5rIHJlbD1cInN0eWxlc2hlZXRcIiBocmVmPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzAxQkxxS0lTeWFMLl9SQ3wwMUN2QjdoeGJZTC5jc3MsMDErbmVIc2tocUwuY3NzLDAxbWZqNjFCUFlMLmNzcywxMUoySndpWVRpTC5jc3MsMDFIQXFZZWV0SEwuY3NzLDIxVk91MitxbktMLmNzcywwMUxmcnJ4RS1LTC5jc3MsMjFvdG4xSjNoTUwuY3NzLDAxOENiQitCdE9MLmNzcywyMUQtM3RwLSs3TC5jc3MsMDFUcktKdWo2SkwuY3NzLDAxNzEtTytuQndMLmNzcywyMS0xQ0Rzb1pETC5jc3MsMzFUandqRDJWTUwuY3NzLDExNVkwMnViWHNMLmNzcywwMUw3RzF1K0w1TC5jc3MsMjE2WExqQUxVaUwuY3NzLDAxcmRWblBrZ21MLmNzcywwMWl4ZmMtN1N0TC5jc3MsMjFVUlhBYlR1RkwuY3NzLDIxcWxqZUthaGhMLmNzcywwMXdSZG1FN2piTC5jc3MsMDFLMGZTRno2ZUwuY3NzLDAxNGVpbExXK0lMLmNzcywwMU1VMENiN3lGTC5jc3NfLmNzcz9BVUlDbGllbnRzL1NlYXJjaFBhcnRuZXJBc3NldHMmMXVZK0JEMmcjdXMuMzExODY2LVQxLjIxMTA3MC1UMS4zMTExMzMtVDFcIiAvPlxuPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzExYUR5bWlCMEwuY3NzP0FVSUNsaWVudHMvRGV0YWlsUGFnZUFsbE9mZmVyc0Rpc3BsYXlBc3NldHMmTzllV1Y2Ti8jMzEwOTc1LVQxXCIgLz5cblxuPHNjcmlwdD5cbihmdW5jdGlvbihjKXt2YXIgZD13aW5kb3cuQW1hem9uVUlQYWdlSlN8fHdpbmRvdy5QLG49ZC5fbmFtZXNwYWNlfHxkLmF0dHJpYnV0ZUVycm9ycyxiPW4/bihcIkFtYXpvblJ1c2hBc3NldExvYWRlclwiLFwiQW1hem9uUnVzaFwiKTpkO2IuZ3VhcmRGYXRhbD9iLmd1YXJkRmF0YWwoYykoYix3aW5kb3cpOmIuZXhlY3V0ZShmdW5jdGlvbigpe2MoYix3aW5kb3cpfSl9KShmdW5jdGlvbihjLGQsbil7Yy5yZWdpc3RlcihcInJ1c2gtYXNzZXQtbG9hZGVyLWJ1aWxkZXJcIixmdW5jdGlvbigpe2Z1bmN0aW9uIGIoZixjKXtoJiZoLmNvdW50JiZoLmNvdW50KFwicnVzaDpcIitmLDA9PT1jPzA6Y3x8KGguY291bnQoXCJydXNoOlwiK2YpfHwwKSsxKX1mdW5jdGlvbiBjKGYsYixlKXtlJiYoZi5hZGRFdmVudExpc3RlbmVyP2YuYWRkRXZlbnRMaXN0ZW5lcihiLGUsITEpOmYuYXR0YWNoRXZlbnQmJmYuYXR0YWNoRXZlbnQoXCJvblwiK2IsZSkpfWZ1bmN0aW9uIG0oYixkLGUsayxsLGEpe3ZhciBnO2c9Yj9kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpOlxuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChkP1wic3R5bGVcIjpcImxpbmtcIik7YyhnLFwiZXJyb3JcIixsKTtjKGcsXCJsb2FkXCIsYSk7aWYoZClnLnRleHRDb250ZW50PWU7ZWxzZSBpZihiKXtnLmFzeW5jPSEwO2lmKGI9ayliPS0xIT09ZS5pbmRleE9mKFwiaW1hZ2VzL0lcIil8fC9BVUlDbGllbnRzLy50ZXN0KGUpO2ImJmcuc2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIixcImFub255bW91c1wiKTtnLnNyYz1lfWVsc2UgZy5yZWw9XCJzdHlsZXNoZWV0XCIsZy5ocmVmPWU7ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLmFwcGVuZENoaWxkKGcpfXZhciBoPWQudWUscT17fTtyZXR1cm4gZnVuY3Rpb24oYyxoLGUpe3JldHVybiBmdW5jdGlvbihrLGwpe2Z1bmN0aW9uIGEoKXttKGgsZSxrLGcsZnVuY3Rpb24oYyl7Zz8oZz0hMSxiKFwicmVzb3VyY2VfcmV0cnlcIiksYSgpKTpiKFwicmVzb3VyY2VfZXJyb3JcIik7YyYmYy5zdG9wUHJvcGFnYXRpb24/Yy5zdG9wUHJvcGFnYXRpb24oKTpcbmQuZXZlbnQmJihkLmV2ZW50LmNhbmNlbEJ1YmJsZT0hMCl9LGwpfXZhciBnPSEwO2lmKHFba10pcmV0dXJuIGwuY2FsbChjKSwhMTtxW2tdPSEwO2IoXCJyZXNvdXJjZV9jb3VudFwiKTtyZXR1cm4hYSgpfX19KTtcInVzZSBzdHJpY3RcIjtjLndoZW4oXCJydXNoLWFzc2V0LWxvYWRlci1idWlsZGVyXCIpLnJlZ2lzdGVyKFwicnVzaC1hc3NldC1sb2FkZXJcIixmdW5jdGlvbihiKXtmdW5jdGlvbiBwKGEsYyxiKXtmdW5jdGlvbiBlKCl7KytmPT09ZCYmYiYmYigpfXZhciBkPWEubGVuZ3RoLGY9MCxoPTA7aWYoZClmb3IoO2g8ZDtoKyspYyhhW2hdLGUpO2Vsc2UgYiYmYigpfXZhciBtPXt9LGg9W10scT1iKGMsITEsITEpLGY9YihjLCExLCEwKSxuPWIoYywhMCwhMSksZT1iKGMsITAsITApLGs9ZC51ZSxsPXtGSU5HRVJQUklOVF9NSVNNQVRDSDpcInJ1c2gtYXNzZXQtbG9hZGVyOmZpbmdlcnByaW50LW1pc21hdGNoXCJ9O3JldHVybnthZGRNYW5pZmVzdDpmdW5jdGlvbihhLGIpe3ZhciBkPWEubmFtZSxcbmU9YS5maW5nZXJwcmludCxmPW1bZF07ZCYmZXx8Yy5lcnJvcihcIkludmFsaWQgbWFuaWZlc3QgKGFzc2V0XFx4M2RcIitkK1wiLCBmaW5nZXJwcmludFxceDNkXCIrZStcIilcIixcInJ1c2gtYXNzZXQtbG9hZGVyXCIsXCJhZGRNYW5pZmVzdFwiKTtmJiZmLmZpbmdlcnByaW50IT09ZSYmKGsmJmsuY291bnQobC5GSU5HRVJQUklOVF9NSVNNQVRDSCwoay5jb3VudChsLkZJTkdFUlBSSU5UX01JU01BVENIKXx8MCkrMSksYy53aGVuKFwiQVwiKS5leGVjdXRlKGZ1bmN0aW9uKGEpe2EudHJpZ2dlcihsLkZJTkdFUlBSSU5UX01JU01BVENILGQsZSxiKX0pKTtmfHwoYS5jc3M9W10uY29uY2F0KGEuY3NzfHxbXSksYS5pbmxpbmVDc3M9W10uY29uY2F0KGEuaW5saW5lQ3NzfHxbXSksYS5qcz1bXS5jb25jYXQoYS5qc3x8W10pLGEuaW5saW5lSnM9W10uY29uY2F0KGEuaW5saW5lSnN8fFtdKSxtW2RdPWEsaC5wdXNoKGQrXCI6XCIrZSkpfSxsb2FkQXNzZXQ6ZnVuY3Rpb24oYSxiLGMpe2lmKGE9bVthXSlwKGEuY3NzLFxucSxiKSxwKGEuaW5saW5lQ3NzLGYsYikscChhLmpzLG4sYykscChhLmlubGluZUpzLGUsYyksYS5jc3M9YS5pbmxpbmVDc3M9YS5qcz1hLmlubGluZUpzPVtdfSxwcmVsb2FkQXNzZXQ6ZnVuY3Rpb24oYSxiKXsoYT1tW2FdKSYmYihbXS5jb25jYXQoYS5jc3MsYS5qcykpfSxmaW5nZXJwcmludHM6ZnVuY3Rpb24oKXtyZXR1cm4gaC5qb2luKFwifFwiKX0sRVZFTlRTOmx9fSl9KTtcbiAgKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkubG9hZC5qcygnaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9JLzQxalA0amFHMmZMLmpzP0FVSUNsaWVudHMvQW1hem9uUnVzaEZyYW1ld29yaycpO1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMjEtUUtkTTFjd0wuanM/QVVJQ2xpZW50cy9BbWF6b25SdXNoUm91dGVyJyk7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8yMW9KUDFPZ2IxTC5fUkN8MzF2ZlZOYVNQbkwuanMsMzFJcTR4OStlY0wuanMsMDFCUGJ1b0tWQ0wuanMsMzFTZ2RmYmxINkwuanMsNDFZWGQyWU9SZEwuanMsMDFWbHRidjlDSUwuanMsNDFDNGNMMTlPbEwuanMsMDFyMXIzc1ZseEwuanMsMzFxbUF3N0V3ZEwuanMsMjEtOWlIUCtEQUwuanMsMDFnRU1wT3QwbkwuanMsMDE3c2VvUTZUSEwuanMsMTFhbDRqOFFyY0wuanMsMDFiODJMRklSVEwuanMsMTF3OHo5Y0VUN0wuanMsMDE1Q3dXMHB1UEwuanMsMjE1TkoxeWpXcUwuanMsMjF1b1hsM2JpdkwuanMsMDFLbXZjbjY2a0wuanMsMDExRGs0My1tN0wuanMsMDFNc2dNN2h6REwuanMsMjFvVHkxSVlVTkwuanMsMDFNbXIweU1OTkwuanMsMjF4T25DTUJ4VkwuanNfLmpzP0FVSUNsaWVudHMvU2VhcmNoQXNzZXRzJjROUWtHK0xhIzMzMzczNS1UMScpO1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMDEzbkRzd2tQM0wuX1JDfDIxN0FMK3BNNTNMLmpzLDExdmlJb09FT1BMLmpzLDAxUFJrTTFhRGZMLmpzLDIxS3JSaHBKK1pMLmpzLDIxeEUyY2JRZ2VMLmpzLDQxS2hITGppaUlMLmpzLDIxaTF0ZkhNTHlMLmpzLDMxekZSWjJEWnRMLmpzLDUxNUlrUmtPby1MLmpzLDAxajVEZVpTTXpMLmpzLDMxdGZ6TGFaakhMLmpzLDQxWGtSSFhod1BMLmpzLDIxZkFVR3hVeHNMLmpzLDUxMU1tMW9BSWRMLmpzLDMxamlON0xmd25MLmpzLDAxbHktc0hlZzhMLmpzLDAxYWNGNjluYnJMLmpzLDMxdnJoRW5KRFRMLmpzLDAxV2JEWFQyQ3pMLmpzLDIxZDEzK1RueTVMLmpzLDIxOU82Wm1ETU9MLmpzLDIxakExcy1sTVlMLmpzLDExakMxQlVTUXpMLmpzLDQxV0dTMzg3UGlMLmpzLDIxb2pJOTlqYzRMLmpzLDQxYXhTbzNhcmhMLmpzLDAxTjBHN29IUmxMLmpzLDMxeSswMGhuWU9MLmpzLDAxM0Z6dy1lVHZMLmpzLDAxYTZJMCtKcDFMLmpzLDAxUWVWdnBrZXFMLmpzLDAxUVdINkZpUHhMLmpzLDAxV0ZDcWIyM3pMLmpzLDIxUW5QVkxJTzFMLmpzLDAxS0xoRkI2QmVMLmpzLDIxcUcxTlVpdTNMLmpzXy5qcz9BVUlDbGllbnRzL1NlYXJjaFBhcnRuZXJBc3NldHMmNzNzcitNZlIjdXMuMjU4OTUzLVQyLjM3OTIwNy1UMS4zMjUxNzctQy4zNjg0NzEtVDEuMzczMjI2LVQxLjIzODM5Ny1UMicpO1xuKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkud2hlbigncmVhZHknKS5leGVjdXRlKGZ1bmN0aW9uKCkge1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzExbGZqLWo2d0wuanM/QVVJQ2xpZW50cy9BbGxPZmZlcnNEaXNwbGF5SW5ncmVzc0Fzc2V0cyZGSko3NWw0ayMzNjgzNzAtQy4zOTQ3NTMtVDEuMzEwOTc1LVQxJyk7XG59KTtcbih3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLndoZW4oJ2FvZEluZ3Jlc3NDbGljaycpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS82MXNKT2dUcWsyTC5qcz9BVUlDbGllbnRzL0RldGFpbFBhZ2VBbGxPZmZlcnNEaXNwbGF5QXNzZXRzJjZyZDVRZUJEI2xhbmd1YWdlLWVuLjM5NTEwMS1UMS4zODYzMzctVDEuMzEwOTc1LVQxLjM4Nzc0My1UMScpO1xufSk7XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cblAud2hlbigncnVzaC1hc3NldC1sb2FkZXInKS5leGVjdXRlKCdydXNoLW1hbmlmZXN0LXJlZ2lzdHJhdGlvbicsIGZ1bmN0aW9uIChyYWwpIHtcbiAgICByYWwuYWRkTWFuaWZlc3Qoe1wibmFtZVwiOlwiQW1hem9uUnVzaEFzc2V0TG9hZGVyXCIsXCJmaW5nZXJwcmludFwiOlwiODE5MDNGOENCOTRBMjgyMUNENjkzQ0RBMDBEMjFCRjJEMkFBOUFGQ1wifSk7XG4gICAgcmFsLmFkZE1hbmlmZXN0KCB7XCJuYW1lXCI6XCJBbWF6b25SdXNoRnJhbWV3b3JrXCIsXCJmaW5nZXJwcmludFwiOlwiNDc3NUY4NUM4QjMyRjcxMTk5MkIzQkY3NDE1QUFENTg2QUNCMzU0RlwifSk7XG4gICAgcmFsLmFkZE1hbmlmZXN0KCB7XCJuYW1lXCI6XCJBbWF6b25SdXNoUm91dGVyXCIsXCJmaW5nZXJwcmludFwiOlwiQzVFMTcyMzg2MUQ2OTMxRTg4M0I3RUY0RDdBMUJGQzZFM0IwMEM0NlwifSk7XG59KTtcbjwvc2NyaXB0PlxuXG48c2NyaXB0PlAuZGVjbGFyZSgnc1xcLWdsdXhcXC13aWRnZXRcXC1yZWZyZXNoJywgbnVsbCk7PC9zY3JpcHQ+XG5cblxuXG48bGluayByZWw9XCJwcmVjb25uZWN0XCIgaHJlZj1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tXCIgY3Jvc3NvcmlnaW4+XG48dGl0bGU+QW1hem9uLmNvbSA6IGlwaG9uZTwvdGl0bGU+XG5cblxuPCEtLSYmJlBvcnRhbCZEZWxpbWl0ZXImJiYtLT48IS0tIHNwOmVuZC1mZWF0dXJlOmhvc3QtYXNzZXRzIC0tPlxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPlxud2luZG93LnVlX2loZSA9ICh3aW5kb3cudWVfaWhlIHx8IDApICsgMTtcbmlmICh3aW5kb3cudWVfaWhlID09PSAxKSB7XG4oZnVuY3Rpb24oYyl7YyYmMT09PWMudWVfanNtdGYmJlwib2JqZWN0XCI9PT10eXBlb2YgYy5QJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5QLndoZW4mJmMuUC53aGVuKFwibXNob3AtaW50ZXJhY3Rpb25zXCIpLmV4ZWN1dGUoZnVuY3Rpb24oZSl7XCJvYmplY3RcIj09PXR5cGVvZiBlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5hZGRMaXN0ZW5lciYmZS5hZGRMaXN0ZW5lcihmdW5jdGlvbihiKXtcIm9iamVjdFwiPT09dHlwZW9mIGImJlwiT1JJR0lOXCI9PT1iLmRhdGFTb3VyY2UmJlwibnVtYmVyXCI9PT10eXBlb2YgYi5jbGlja1RpbWUmJlwib2JqZWN0XCI9PT10eXBlb2YgYi5ldmVudHMmJlwibnVtYmVyXCI9PT10eXBlb2YgYi5ldmVudHMucGFnZVZpc2libGUmJihjLnVlX2pzbXRmX2ludGVyYWN0aW9uPXtwdjpiLmV2ZW50cy5wYWdlVmlzaWJsZSxjdDpiLmNsaWNrVGltZX0pfSl9KX0pKHVlX2NzbSk7XG4oZnVuY3Rpb24oYyxlLGIpe2Z1bmN0aW9uIG0oYSl7Znx8KGY9ZFthLnR5cGVdLmlkLFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYS5jbGllbnRYPyhoPWEucGFnZVgsaz1hLnBhZ2VZKTooaD1hLmNsaWVudFgsaz1hLmNsaWVudFkpLDIhPWZ8fGwmJihsIT1ofHxuIT1rKT8ocigpLGcuaXNsJiZlLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtwKFwiYXRcIixnLmlkKX0sMCkpOihsPWgsbj1rLGY9MCkpfWZ1bmN0aW9uIHIoKXtmb3IodmFyIGEgaW4gZClkLmhhc093blByb3BlcnR5KGEpJiZnLmRldGFjaChhLG0sZFthXS5wYXJlbnQpfWZ1bmN0aW9uIHMoKXtmb3IodmFyIGEgaW4gZClkLmhhc093blByb3BlcnR5KGEpJiZnLmF0dGFjaChhLG0sZFthXS5wYXJlbnQpfWZ1bmN0aW9uIHQoKXt2YXIgYT1cIlwiOyFxJiZmJiYocT0xLGErPVwiJnVpPVwiK2YpO3JldHVybiBhfXZhciBnPWMudWUscD1jLnVleCxxPTAsZj0wLGwsbixoLGssZD17Y2xpY2s6e2lkOjEscGFyZW50OmJ9LG1vdXNlbW92ZTp7aWQ6MixcbnBhcmVudDpifSxzY3JvbGw6e2lkOjMscGFyZW50OmV9LGtleWRvd246e2lkOjQscGFyZW50OmJ9fTtnJiZwJiYocygpLGcuX3VpPXQpfSkodWVfY3NtLHdpbmRvdyxkb2N1bWVudCk7XG5cblxuKGZ1bmN0aW9uKHMsbCl7ZnVuY3Rpb24gbShiLGUsYyl7Yz1jfHxuZXcgRGF0ZSgrbmV3IERhdGUrdCk7Yz1cImV4cGlyZXM9XCIrYy50b1VUQ1N0cmluZygpO24uY29va2llPWIrXCI9XCIrZStcIjtcIitjK1wiO3BhdGg9L1wifWZ1bmN0aW9uIHAoYil7Yis9XCI9XCI7Zm9yKHZhciBlPW4uY29va2llLnNwbGl0KFwiO1wiKSxjPTA7YzxlLmxlbmd0aDtjKyspe2Zvcih2YXIgYT1lW2NdO1wiIFwiPT1hLmNoYXJBdCgwKTspYT1hLnN1YnN0cmluZygxKTtpZigwPT09YS5pbmRleE9mKGIpKXJldHVybiBkZWNvZGVVUklDb21wb25lbnQoYS5zdWJzdHJpbmcoYi5sZW5ndGgsYS5sZW5ndGgpKX1yZXR1cm5cIlwifWZ1bmN0aW9uIHEoYixlLGMpe2lmKCFlKXJldHVybiBiOy0xPGIuaW5kZXhPZihcIntcIikmJihiPVwiXCIpO2Zvcih2YXIgYT1iLnNwbGl0KFwiJlwiKSxmLGQ9ITEsaD0hMSxnPTA7ZzxhLmxlbmd0aDtnKyspZj1hW2ddLnNwbGl0KFwiOlwiKSxmWzBdPT1lPyghY3x8ZD9hLnNwbGljZShnLDEpOihmWzFdPWMsYVtnXT1cbmYuam9pbihcIjpcIikpLGg9ZD0hMCk6Mj5mLmxlbmd0aCYmKGEuc3BsaWNlKGcsMSksaD0hMCk7aCYmKGI9YS5qb2luKFwiJlwiKSk7IWQmJmMmJigwPGIubGVuZ3RoJiYoYis9XCImXCIpLGIrPWUrXCI6XCIrYyk7cmV0dXJuIGJ9dmFyIGs9cy51ZXx8e30sdD0zMDI0RTcsbj11ZV9jc20uZG9jdW1lbnR8fGwuZG9jdW1lbnQscj1udWxsLGQ7YTp7dHJ5e2Q9bC5sb2NhbFN0b3JhZ2U7YnJlYWsgYX1jYXRjaCh1KXt9ZD12b2lkIDB9ay5jb3VudCYmay5jb3VudChcImNzbS5jb29raWVTaXplXCIsZG9jdW1lbnQuY29va2llLmxlbmd0aCk7ay5jb29raWU9e2dldDpwLHNldDptLHVwZGF0ZUNzbUhpdDpmdW5jdGlvbihiLGUsYyl7dHJ5e3ZhciBhO2lmKCEoYT1yKSl7dmFyIGY7YTp7dHJ5e2lmKGQmJmQuZ2V0SXRlbSl7Zj1kLmdldEl0ZW0oXCJjc20taGl0XCIpO2JyZWFrIGF9fWNhdGNoKGspe31mPXZvaWQgMH1hPWZ8fHAoXCJjc20taGl0XCIpfHxcInt9XCJ9YT1xKGEsYixlKTtyPWE9cShhLFwidFwiLCtuZXcgRGF0ZSk7XG50cnl7ZCYmZC5zZXRJdGVtJiZkLnNldEl0ZW0oXCJjc20taGl0XCIsYSl9Y2F0Y2goaCl7fW0oXCJjc20taGl0XCIsYSxjKX1jYXRjaChnKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBsLnVlTG9nRXJyb3ImJnVlTG9nRXJyb3IoRXJyb3IoXCJDb29raWUgbWFuYWdlcjogXCIrZy5tZXNzYWdlKSx7bG9nTGV2ZWw6XCJXQVJOXCJ9KX19fX0pKHVlX2NzbSx3aW5kb3cpO1xuXG5cbihmdW5jdGlvbihsLGUpe2Z1bmN0aW9uIGMoYil7Yj1cIlwiO3ZhciBjPWEuaXNCRlQ/XCJiXCI6XCJzXCIsZD1cIlwiK2Eub2lkLGc9XCJcIithLmxpZCxoPWQ7ZCE9ZyYmMjA9PWcubGVuZ3RoJiYoYys9XCJhXCIsaCs9XCItXCIrZyk7YS50YWJpZCYmKGI9YS50YWJpZCtcIitcIik7Yis9YytcIi1cIitoO2IhPWYmJjEwMD5iLmxlbmd0aCYmKGY9YixhLmNvb2tpZT9hLmNvb2tpZS51cGRhdGVDc21IaXQobSxiKyhcInxcIisgK25ldyBEYXRlKSk6ZS5jb29raWU9XCJjc20taGl0PVwiK2IrKFwifFwiKyArbmV3IERhdGUpK24rXCI7IHBhdGg9L1wiKX1mdW5jdGlvbiBwKCl7Zj0wfWZ1bmN0aW9uIGQoYil7ITA9PT1lW2EucGFnZVZpei5wcm9wSGlkXT9mPTA6ITE9PT1lW2EucGFnZVZpei5wcm9wSGlkXSYmYyh7dHlwZTpcInZpc2libGVcIn0pfXZhciBuPVwiOyBleHBpcmVzPVwiKyhuZXcgRGF0ZSgrbmV3IERhdGUrNjA0OEU1KSkudG9HTVRTdHJpbmcoKSxtPVwidGJcIixmLGE9bC51ZXx8e30saz1hLnBhZ2VWaXomJmEucGFnZVZpei5ldmVudCYmXG5hLnBhZ2VWaXoucHJvcEhpZDthLmF0dGFjaCYmKGEuYXR0YWNoKFwiY2xpY2tcIixjKSxhLmF0dGFjaChcImtleXVwXCIsYyksa3x8KGEuYXR0YWNoKFwiZm9jdXNcIixjKSxhLmF0dGFjaChcImJsdXJcIixwKSksayYmKGEuYXR0YWNoKGEucGFnZVZpei5ldmVudCxkLGUpLGQoe30pKSk7YS5hZnRiPTF9KSh1ZV9jc20sdWVfY3NtLmRvY3VtZW50KTtcblxuXG51ZV9jc20udWUuc3R1Yih1ZSxcImltcHJlc3Npb25cIik7XG5cblxudWUuc3R1Yih1ZSxcInRyaWdnZXJcIik7XG5cblxuXG5pZih3aW5kb3cudWUmJnVldCkgeyB1ZXQoJ2JiJyk7IH1cblxufVxuPC9zY3JpcHQ+XG48c2NyaXB0PndpbmRvdy51ZSAmJiB1ZS5jb3VudCAmJiB1ZS5jb3VudCgnQ1NNTGlicmFyeVNpemUnLCAzMTczKTwvc2NyaXB0PlxuPCEtLSBzcDpmZWF0dXJlOmhlYWQtY2xvc2UgLS0+XG48c2NyaXB0Plxud2luZG93LlAgJiYgUC5yZWdpc3RlcignYmInKTtcbmlmICh0eXBlb2YgdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gIHVlcygndDAnLCAncG9ydGFsLWJiJywgbmV3IERhdGUoKSk7XG4gIHVlcygnY3RiJywgJ3BvcnRhbC1iYicsIDEpO1xufVxuPC9zY3JpcHQ+XG48L2hlYWQ+PCEtLSBzcDplbmQtZmVhdHVyZTpoZWFkLWNsb3NlIC0tPlxuPCEtLSBzcDpmZWF0dXJlOnN0YXJ0LWJvZHkgLS0+XG48Ym9keSBjbGFzcz1cImEtbS11cyBhLWF1aV83MjU1NC1jIGEtYXVpX2FjY29yZGlvbl9hMTF5X3JvbGVfMzU0MDI1LWMgYS1hdWlfa2lsbHN3aXRjaF9jc2FfbG9nZ2VyXzM3Mjk2My1jIGEtYXVpX2xhdW5jaF8yMDIxX2FsbHlfZml4ZXNfMzkyNDgyLWMgYS1hdWlfcGNpX3Jpc2tfYmFubmVyXzIxMDA4NC1jIGEtYXVpX3ByZWxvYWRfMjYxNjk4LWMgYS1hdWlfcmVsX25vcmVmZXJyZXJfbm9vcGVuZXJfMzA5NTI3LWMgYS1hdWlfdGVtcGxhdGVfd2VibGFiX2NhY2hlXzMzMzQwNi1jIGEtYXVpX3Rucl92Ml8xODA4MzYtY1wiPjxkaXYgaWQ9XCJhLXBhZ2VcIj48c2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDthLXdsYWItc3RhdGVzJnF1b3Q7fVwiPntcIkFVSV9UTlJfVjJfMTgwODM2XCI6XCJDXCIsXCJBVUlfQUNDT1JESU9OX0ExMVlfUk9MRV8zNTQwMjVcIjpcIkNcIixcIkFVSV9QUkVMT0FEXzI2MTY5OFwiOlwiQ1wiLFwiQVVJX0xBVU5DSF8yMDIxX0FMTFlfRklYRVNfMzkyNDgyXCI6XCJDXCIsXCJBVUlfVEVNUExBVEVfV0VCTEFCX0NBQ0hFXzMzMzQwNlwiOlwiQ1wiLFwiQVVJXzcyNTU0XCI6XCJDXCIsXCJBVUlfS0lMTFNXSVRDSF9DU0FfTE9HR0VSXzM3Mjk2M1wiOlwiQ1wiLFwiQVVJX1JFTF9OT1JFRkVSUkVSX05PT1BFTkVSXzMwOTUyN1wiOlwiQ1wiLFwiQVVJX1BDSV9SSVNLX0JBTk5FUl8yMTAwODRcIjpcIkNcIn08L3NjcmlwdD48c2NyaXB0PnR5cGVvZiB1ZXggPT09ICdmdW5jdGlvbicgJiYgdWV4KCdsZCcsICdwb3J0YWwtYmInLCB7d2I6IDF9KTwvc2NyaXB0PjwhLS0gc3A6ZW5kLWZlYXR1cmU6c3RhcnQtYm9keSAtLT5cbiAgICA8aW1nIGhlaWdodD1cIjFcIiB3aWR0aD1cIjFcIiBzdHlsZT0nZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuOycgc3JjPScvL2Zscy1uYS5hbWF6b24uY29tLzEvYmF0Y2gvMS9PUC9BVFZQREtJS1gwREVSOjE0Ny04NjkzNjY3LTU5MDEwMzE6MVE3ME03OENDUzhBUzk5Uk1DQTgkdWVkYXRhPXM6JTJGcmQlMkZ1ZWRhdGElM0ZzdGF0aWNiJTI2aWQlM0QxUTcwTTc4Q0NTOEFTOTlSTUNBODowJyBhbHQ9XCJcIiBvbmxvYWQ9XCJ3aW5kb3cudWVfc2JsICYmIHdpbmRvdy51ZV9zYmwoKTtcIi8+XG5cblxuPHNjcmlwdD5cbiFmdW5jdGlvbigpe2Z1bmN0aW9uIG4obix0KXt2YXIgcj1pKG4pO3JldHVybiB0JiYocj1yKFwiaW5zdGFuY2VcIix0KSkscn12YXIgcj1bXSxjPTAsaT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1jKys7cmV0dXJuIHIucHVzaChbdCxbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSxuLHt0aW1lOkRhdGUubm93KCl9XSksaShuKX19O24uX3M9cix0aGlzLmNzYT1ufSgpOztcbmNzYSgnQ29uZmlnJywge30pO1xuaWYgKHdpbmRvdy5jc2EpIHtcbiAgICBjc2EoXCJDb25maWdcIiwge1xuICAgICAgICAnQXBwbGljYXRpb24nOiAnUmV0YWlsOlByb2Q6d3d3LmFtYXpvbi5jb20nLFxuICAgICAgICAnRXZlbnRzLk5hbWVzcGFjZSc6ICdjc2EnLFxuICAgICAgICAnT2JmdXNjYXRlZE1hcmtldHBsYWNlSWQnOiAnQVRWUERLSUtYMERFUicsXG4gICAgICAgICdFdmVudHMuU3VzaGlFbmRwb2ludCc6ICdodHRwczovL3VuYWdpLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5jc20uY3NhLnByb2QnLFxuICAgICAgICAnQ2FjaGVEZXRlY3Rpb24uUmVxdWVzdElEJzogXCIxUTcwTTc4Q0NTOEFTOTlSTUNBOFwiLFxuICAgICAgICAnQ2FjaGVEZXRlY3Rpb24uQ2FsbGJhY2snOiB3aW5kb3cudWUgJiYgdWUucmVzZXQsXG4gICAgICAgICdMQ1AuZWxlbWVudERlZHVwJzogMVxuICAgIH0pO1xuXG4gICAgY3NhKFwiRXZlbnRzXCIpKFwic2V0RW50aXR5XCIsIHtcbiAgICAgICAgcGFnZToge3JlcXVlc3RJZDogXCIxUTcwTTc4Q0NTOEFTOTlSTUNBOFwiLCBtZWFuaW5nZnVsOiBcImludGVyYWN0aXZlXCJ9LFxuICAgICAgICBzZXNzaW9uOiB7aWQ6IFwiMTQ3LTg2OTM2NjctNTkwMTAzMVwifVxuICAgIH0pO1xufVxuIWZ1bmN0aW9uKGkpe3ZhciByLGUsbz1cInNwbGljZVwiLHU9aS5jc2EsZj17fSxjPXt9LGE9aS5jc2EuX3Mscz0wLGw9MCxnPS0xLGg9e30sZD17fSx2PXt9LG49T2JqZWN0LmtleXMscD1mdW5jdGlvbigpe307ZnVuY3Rpb24gdChuLHQpe3JldHVybiB1KG4sdCl9ZnVuY3Rpb24gbShuLHQpe3ZhciBpPWNbbl18fHt9O08oaSx0KSxjW25dPWksbCsrLFMoVSwwKX1mdW5jdGlvbiB3KG4sdCxpKXt2YXIgcj0hMDtyZXR1cm4gdD1EKHQpLGkmJmkuYnVmZmVyZWQmJihyPSh2W25dfHxbXSkuZXZlcnkoZnVuY3Rpb24obil7cmV0dXJuITEhPT10KG4pfSkpLHI/KGhbbl18fChoW25dPVtdKSxoW25dLnB1c2godCksZnVuY3Rpb24oKXshZnVuY3Rpb24obix0KXt2YXIgaT1oW25dO2kmJmlbb10oaS5pbmRleE9mKHQpLDEpfShuLHQpfSk6cH1mdW5jdGlvbiBiKG4sdCl7aWYodD1EKHQpLG4gaW4gZClyZXR1cm4gdChkW25dKSxwO3JldHVybiB3KG4sZnVuY3Rpb24obil7cmV0dXJuIHQobiksITF9KX1mdW5jdGlvbiBFKG4sdCl7aWYodShcIkVycm9yc1wiKShcImxvZ0Vycm9yXCIsbiksZi5ERUJVRyl0aHJvdyB0fHxufWZ1bmN0aW9uIHkoKXtyZXR1cm4gTWF0aC5hYnMoNDI5NDk2NzI5NSpNYXRoLnJhbmRvbSgpfDApLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBEKG4sdCl7cmV0dXJuIGZ1bmN0aW9uKCl7dHJ5e3JldHVybiBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChuKXtFKG4ubWVzc2FnZXx8bixuKX19fWZ1bmN0aW9uIFMobix0KXtyZXR1cm4gaS5zZXRUaW1lb3V0KEQobiksdCl9ZnVuY3Rpb24gVSgpe2Zvcih2YXIgbj0wO248YS5sZW5ndGg7KXt2YXIgdD1hW25dLGk9dFswXWluIGM7aWYoIWkmJiFlKXJldHVybiB2b2lkKHM9Zi5BZGRNaXNzaW5nUGx1Z2luc1RvRW5kP2EubGVuZ3RoOnQubGVuZ3RoKTtpPyhhW29dKHM9biwxKSxJKHQpKTpuKyt9Zz1sfWZ1bmN0aW9uIEkobil7dmFyIGFyZ3VtZW50cyx0PWNbblswXV0saT0oYXJndW1lbnRzPW5bMV0pWzBdO2lmKCF0fHwhdFtpXSlyZXR1cm4gRShcIlVuZGVmaW5lZCBmdW5jdGlvbjogXCIrdCtcIi9cIitpKTtyPW5bM10sY1tuWzJdXT10W2ldLmFwcGx5KHQsYXJndW1lbnRzLnNsaWNlKDEpKXx8e30scj0wfWZ1bmN0aW9uIE0oKXtlPTEsVSgpfWZ1bmN0aW9uIE8odCxpKXtuKGkpLmZvckVhY2goZnVuY3Rpb24obil7dFtuXT1pW25dfSl9YihcIiRiZWZvcmV1bmxvYWRcIixNKSxtKFwiQ29uZmlnXCIse2luc3RhbmNlOmZ1bmN0aW9uKG4pe08oZixuKX19KSx1LnBsdWdpbj1EKGZ1bmN0aW9uKG4pe24odCl9KSx0LmNvbmZpZz1mLHQucmVnaXN0ZXI9bSx0Lm9uPXcsdC5vbmNlPWIsdC5ibGFuaz1wLHQuZW1pdD1mdW5jdGlvbihuLHQsaSl7Zm9yKHZhciByPWhbbl18fFtdLGU9MDtlPHIubGVuZ3RoOykhMT09PXJbZV0odCk/cltvXShlLDEpOmUrKztkW25dPXR8fHt9LGkmJmkuYnVmZmVyZWQmJih2W25dfHwodltuXT1bXSksMTAwPD12W25dLmxlbmd0aCYmdltuXS5zaGlmdCgpLHZbbl0ucHVzaCh0fHx7fSkpfSx0LlVVSUQ9ZnVuY3Rpb24oKXtyZXR1cm5beSgpLHkoKSx5KCkseSgpXS5qb2luKFwiLVwiKX0sdC50aW1lPWZ1bmN0aW9uKG4pe3ZhciB0PXI/bmV3IERhdGUoci50aW1lKTpuZXcgRGF0ZTtyZXR1cm5cIklTT1wiPT09bj90LnRvSVNPU3RyaW5nKCk6dC5nZXRUaW1lKCl9LHQuZXJyb3I9RSx0Lndhcm49ZnVuY3Rpb24obix0KXtpZih1KFwiRXJyb3JzXCIpKFwibG9nV2FyblwiLG4pLGYuREVCVUcpdGhyb3cgdHx8bn0sdC5leGVjPUQsdC50aW1lb3V0PVMsdC5pbnRlcnZhbD1mdW5jdGlvbihuLHQpe3JldHVybiBpLnNldEludGVydmFsKEQobiksdCl9LCh0Lmdsb2JhbD1pKS5jc2EuX3MucHVzaD1mdW5jdGlvbihuKXtuWzBdaW4gYyYmKCFhLmxlbmd0aHx8ZSk/KEkobiksYS5sZW5ndGgmJmchPT1sJiZVKCkpOmFbb10ocysrLDAsbil9LFUoKSxTKGZ1bmN0aW9uKCl7UyhNLGYuU2tpcE1pc3NpbmdQbHVnaW5zVGltZW91dHx8NWUzKX0sMSl9KFwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/d2luZG93Omdsb2JhbCk7Y3NhLnBsdWdpbihmdW5jdGlvbihvKXt2YXIgZj1cImFkZEV2ZW50TGlzdGVuZXJcIixlPVwicmVxdWVzdEFuaW1hdGlvbkZyYW1lXCIsdD1vLmV4ZWMscj1vLmdsb2JhbCx1PW8ub247by5yYWY9ZnVuY3Rpb24obil7aWYocltlXSlyZXR1cm4gcltlXSh0KG4pKX0sby5vbj1mdW5jdGlvbihuLGUsdCxyKXtpZihuJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBuW2ZdKXt2YXIgaT1vLmV4ZWModCk7cmV0dXJuIG5bZl0oZSxpLHIpLGZ1bmN0aW9uKCl7bi5yZW1vdmVFdmVudExpc3RlbmVyKGUsaSxyKX19cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIG4/dShuLGUsdCxyKTpvLmJsYW5rfX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24obyl7dmFyIHQsbixyPXt9LGU9XCJsb2NhbFN0b3JhZ2VcIixjPVwic2Vzc2lvblN0b3JhZ2VcIixhPVwibG9jYWxcIixpPVwic2Vzc2lvblwiLHU9by5leGVjO2Z1bmN0aW9uIHMoZSx0KXt2YXIgbjt0cnl7clt0XT0hIShuPW8uZ2xvYmFsW2VdKSxuPW58fHt9fWNhdGNoKGUpe3JbdF09IShuPXt9KX1yZXR1cm4gbn1mdW5jdGlvbiBmKCl7dD10fHxzKGUsYSksbj1ufHxzKGMsaSl9ZnVuY3Rpb24gbChlKXtyZXR1cm4gZSYmZVtpXT9uOnR9by5zdG9yZT11KGZ1bmN0aW9uKGUsdCxuKXtmKCk7dmFyIG89bChuKTtyZXR1cm4gZT90P3ZvaWQob1tlXT10KTpvW2VdOk9iamVjdC5rZXlzKG8pfSksby5zdG9yYWdlU3VwcG9ydD11KGZ1bmN0aW9uKCl7cmV0dXJuIGYoKSxyfSksby5kZWxldGVTdG9yZWQ9dShmdW5jdGlvbihlLHQpe2YoKTt2YXIgbj1sKHQpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUpZm9yKHZhciBvIGluIG4pbi5oYXNPd25Qcm9wZXJ0eShvKSYmZShvLG5bb10pJiZkZWxldGUgbltvXTtlbHNlIGRlbGV0ZSBuW2VdfSl9KTtjc2EucGx1Z2luKGZ1bmN0aW9uKG4pe24udHlwZXM9e292bDpmdW5jdGlvbihuKXt2YXIgcj1bXTtpZihuKWZvcih2YXIgaSBpbiBuKW4uaGFzT3duUHJvcGVydHkoaSkmJnIucHVzaChuW2ldKTtyZXR1cm4gcn19fSk7Y3NhLnBsdWdpbihmdW5jdGlvbihvKXtmdW5jdGlvbiByKG4pe3JldHVybiBmdW5jdGlvbihyKXtvKFwiTWV0cmljc1wiLHtwcm9kdWNlcklkOlwiY3NhXCIsZGltZW5zaW9uczp7bWVzc2FnZTpyfX0pKFwicmVjb3JkTWV0cmljXCIsbiwxKX19by5yZWdpc3RlcihcIkVycm9yc1wiLHtsb2dFcnJvcjpyKFwianNFcnJvclwiKSxsb2dXYXJuOnIoXCJqc1dhcm5cIil9KX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24ocil7dmFyIG8sZSxhLG4sdCxpPVwid2lsbERpc2FwcGVhclwiLGY9ci5nbG9iYWwscD1yLmV4ZWMsdT1yKFwiRXZlbnRzXCIpLGM9Zi5sb2NhdGlvbixkPWYuZG9jdW1lbnQsbD0oKGYucGVyZm9ybWFuY2V8fHt9KS5uYXZpZ2F0aW9ufHx7fSkudHlwZSxzPXIub24sZz1yLmVtaXQsJD17fTtjJiZkJiYocyhmLFwiYmVmb3JldW5sb2FkXCIsYikscyhmLFwicGFnZWhpZGVcIixiKSxlPWYuYXBwfHx7fSxhPXAoYiksdD1cImZ1bmN0aW9uXCI9PXR5cGVvZihuPWVbaV0pLGVbaV09cChmdW5jdGlvbigpe2EoKSx0JiZuKCl9KSxmLmFwcHx8KGYuYXBwPWUpLFwiY29tcGxldGVcIj09PWQucmVhZHlTdGF0ZT95KCk6cyhmLFwibG9hZFwiLHkpLHIucmVnaXN0ZXIoXCJTUEFcIix7bmV3UGFnZTpofSksaCh7dHJhbnNpdGlvblR5cGU6ezA6XCJoYXJkXCIsMTpcInJlZnJlc2hcIiwyOlwiYmFjay1idXR0b25cIn1bbF18fFwidW5rbm93blwifSkpO2Z1bmN0aW9uIGgoYSxlKXt2YXIgbj0hIW8sdD0oZT1lfHx7fSkua2VlcFBhZ2VBdHRyaWJ1dGVzO24mJihnKFwiJGJlZm9yZVBhZ2VUcmFuc2l0aW9uXCIpLGcoXCIkcGFnZVRyYW5zaXRpb25cIikpLG4mJiF0JiZ1KFwicmVtb3ZlRW50aXR5XCIsXCJwYWdlXCIpLG89ci5VVUlEKCksdD8kLmlkPW86JD17c2NoZW1hSWQ6XCI8bnM+LlBhZ2VFbnRpdHkuMVwiLGlkOm8sdXJsOmMuaHJlZixzZXJ2ZXI6Yy5ob3N0bmFtZSxwYXRoOmMucGF0aG5hbWUscmVmZXJyZXI6ZC5yZWZlcnJlcix0aXRsZTpkLnRpdGxlfSxPYmplY3Qua2V5cyhhfHx7fSkuZm9yRWFjaChmdW5jdGlvbihlKXskW2VdPWFbZV19KSx1KFwic2V0RW50aXR5XCIse3BhZ2U6JH0pLGcoXCIkcGFnZUNoYW5nZVwiLCQse2J1ZmZlcmVkOjF9KSxuJiZnKFwiJGFmdGVyUGFnZVRyYW5zaXRpb25cIil9ZnVuY3Rpb24geSgpe2coXCIkbG9hZFwiKSxnKFwiJHJlYWR5XCIpLGcoXCIkYWZ0ZXJsb2FkXCIpfWZ1bmN0aW9uIGIoKXtnKFwiJHJlYWR5XCIpLGcoXCIkYmVmb3JldW5sb2FkXCIpLGcoXCIkdW5sb2FkXCIpLGcoXCIkYWZ0ZXJ1bmxvYWRcIil9fSk7Y3NhLnBsdWdpbihmdW5jdGlvbihjKXt2YXIgdD1cIkV2ZW50c1wiLGU9XCJVTktOT1dOXCIsYT1cImlkXCIsdT1cImFsbFwiLG49XCJtZXNzYWdlSWRcIixpPVwidGltZXN0YW1wXCIsZj1cInByb2R1Y2VySWRcIixvPVwiYXBwbGljYXRpb25cIixyPVwib2JmdXNjYXRlZE1hcmtldHBsYWNlSWRcIixzPVwiZW50aXRpZXNcIixkPVwic2NoZW1hSWRcIixsPVwidmVyc2lvblwiLHA9XCJhdHRyaWJ1dGVzXCIsdj1cIjxucz5cIixnPWMuY29uZmlnLGg9KGMuZ2xvYmFsLmxvY2F0aW9ufHx7fSkuaG9zdCxtPWdbdCtcIi5OYW1lc3BhY2VcIl18fFwiY3NhX290aGVyXCIsST1nLkFwcGxpY2F0aW9ufHxcIk90aGVyXCIrKGg/XCI6XCIraDpcIlwiKSxiPWMoXCJUcmFuc3BvcnRcIikseT17fSxPPWZ1bmN0aW9uKHQsZSl7T2JqZWN0LmtleXModCkuZm9yRWFjaChlKX07ZnVuY3Rpb24gRShuLGksbyl7TyhpLGZ1bmN0aW9uKHQpe3ZhciBlPW89PT11fHwob3x8e30pW3RdO3QgaW4gbnx8KG5bdF09e3ZlcnNpb246MSxpZDppW3RdW2FdfHxjLlVVSUQoKX0pLFUoblt0XSxpW3RdLGUpfSl9ZnVuY3Rpb24gVShlLG4saSl7TyhuLGZ1bmN0aW9uKHQpeyFmdW5jdGlvbih0LGUsbil7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGUmJnQhPT1sP2MuZXJyb3IoXCJBdHRyaWJ1dGUgaXMgbm90IG9mIHR5cGUgc3RyaW5nOiBcIit0KTohMD09PW58fDE9PT1ufHwodD09PWF8fCEhfihufHxbXSkuaW5kZXhPZih0KSl9KHQsblt0XSxpKXx8KGVbdF09blt0XSl9KX1mdW5jdGlvbiBOKG8sdCxyKXtPKHQsZnVuY3Rpb24odCl7dmFyIGU9b1t0XTtpZihlW2RdKXt2YXIgbj17fSxpPXt9O25bYV09ZVthXSxuW2ZdPWVbZl18fHIsbltkXT1lW2RdLG5bbF09ZVtsXSsrLG5bcF09aSxTKG4pLFUoaSxlLDEpLGsoaSksYihcImxvZ1wiLG4pfX0pfWZ1bmN0aW9uIFModCl7dFtpXT1mdW5jdGlvbih0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdCYmKHQ9bmV3IERhdGUodCkudG9JU09TdHJpbmcoKSksdHx8Yy50aW1lKFwiSVNPXCIpfSh0W2ldKSx0W25dPXRbbl18fGMuVVVJRCgpLHRbb109SSx0W3JdPWcuT2JmdXNjYXRlZE1hcmtldHBsYWNlSWR8fGUsdFtkXT10W2RdLnJlcGxhY2UodixtKX1mdW5jdGlvbiBrKHQpe2RlbGV0ZSB0W2xdLGRlbGV0ZSB0W2RdLGRlbGV0ZSB0W2ZdfWZ1bmN0aW9uIHcobyl7dmFyIHI9e307dGhpcy5sb2c9ZnVuY3Rpb24odCxlKXt2YXIgbj17fSxpPShlfHx7fSkuZW50O3JldHVybiB0P1wic3RyaW5nXCIhPXR5cGVvZiB0W2RdP2MuZXJyb3IoXCJBIHZhbGlkIHNjaGVtYSBpZCBpcyByZXF1aXJlZCBmb3IgdGhlIGV2ZW50XCIpOihTKHQpLEUobix5LGkpLEUobixyLGkpLEUobix0W3NdfHx7fSxpKSxPKG4sZnVuY3Rpb24odCl7ayhuW3RdKX0pLHRbZl09b1tmXSx0W3NdPW4sdm9pZCBiKFwibG9nXCIsdCkpOmMuZXJyb3IoXCJUaGUgZXZlbnQgY2Fubm90IGJlIHVuZGVmaW5lZFwiKX0sdGhpcy5zZXRFbnRpdHk9ZnVuY3Rpb24odCl7RShyLHQsdSksTihyLHQsb1tmXSl9fWdbXCJLaWxsU3dpdGNoLlwiK3RdfHxjLnJlZ2lzdGVyKHQse3NldEVudGl0eTpmdW5jdGlvbih0KXtFKHksdCx1KSxOKHksdCxcImNzYVwiKX0scmVtb3ZlRW50aXR5OmZ1bmN0aW9uKHQpe2RlbGV0ZSB5W3RdfSxpbnN0YW5jZTpmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHcodCl9fSl9KTtjc2EucGx1Z2luKGZ1bmN0aW9uKHMpe3ZhciBjLGc9XCJUcmFuc3BvcnRcIixsPVwicG9zdFwiLGY9XCJwcmVmbGlnaHRcIixyPVwiY3NhLmNhanVuLlwiLGk9XCJzdG9yZVwiLGE9XCJkZWxldGVTdG9yZWRcIix1PVwic2VuZEJlYWNvblwiLHQ9XCJfX21lcmdlXCIsZT1cIm1lc3NhZ2VJZFwiLG49XCIuRmx1c2hJbnRlcnZhbFwiLG89MCxkPXMuY29uZmlnW2crXCIuQnVmZmVyU2l6ZVwiXXx8MmUzLGg9cy5jb25maWdbZytcIi5SZXRyeURlbGF5XCJdfHwxNTAwLHA9e30sdj0wLHk9W10sbT1zLmdsb2JhbCxFPW0uZG9jdW1lbnQsYj1zLnRpbWVvdXQsaz1tLk9iamVjdC5rZXlzLHc9cy5jb25maWdbZytuXXx8NWUzLEk9dyxPPXMuY29uZmlnW2crbitcIi5CYWNrb2ZmRmFjdG9yXCJdfHwxLFI9cy5jb25maWdbZytuK1wiLkJhY2tvZmZMaW1pdFwiXXx8M2U0LFM9MDtmdW5jdGlvbiBCKG4pe2lmKDg2NGU1PHMudGltZSgpLStuZXcgRGF0ZShuLnRpbWVzdGFtcCkpcmV0dXJuIHMud2FybihcIkV2ZW50IGlzIHRvbyBvbGQ6IFwiK24pO3Y8ZCYmKG5bZV1pbiBwfHwocFtuW2VdXT1uLHYrKyksXCJmdW5jdGlvblwiPT10eXBlb2Ygblt0XSYmblt0XShwW25bZV1dKSwhUyYmbyYmKFM9YihULGZ1bmN0aW9uKCl7dmFyIG49STtyZXR1cm4gST1NYXRoLm1pbihuKk8sUiksbn0oKSkpKX1mdW5jdGlvbiBUKCl7eS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBvPVtdO2socCkuZm9yRWFjaChmdW5jdGlvbihuKXt2YXIgdD1wW25dO2UuYWNjZXB0cyh0KSYmby5wdXNoKHQpfSksby5sZW5ndGgmJihlLmNodW5rcz9lLmNodW5rcyhvKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe0QoZSxuKX0pOkQoZSxvKSl9KSxwPXt9LFM9MH1mdW5jdGlvbiBEKHQsZSl7ZnVuY3Rpb24gbygpe3NbYV0ocituKX12YXIgbj1zLlVVSUQoKTtzW2ldKHIrbixKU09OLnN0cmluZ2lmeShlKSksW2Z1bmN0aW9uKG4sdCxlKXt2YXIgbz1tLm5hdmlnYXRvcnx8e30scj1tLmNvcmRvdmF8fHt9O2lmKCFvW3VdfHwhbltsXSlyZXR1cm4gMDtuW2ZdJiZyJiZcImlvc1wiPT09ci5wbGF0Zm9ybUlkJiYhYyYmKChuZXcgSW1hZ2UpLnNyYz1uW2ZdKCkudXJsLGM9MSk7dmFyIGk9bltsXSh0KTtpZighaS50eXBlJiZvW3VdKGkudXJsLGkuYm9keSkpcmV0dXJuIGUoKSwxfSxmdW5jdGlvbihuLHQsZSl7aWYoIW5bbF0pcmV0dXJuIDA7dmFyIG89bltsXSh0KSxyPW8udXJsLGk9by5ib2R5LGM9by50eXBlLGY9bmV3IFhNTEh0dHBSZXF1ZXN0LGE9MDtmdW5jdGlvbiB1KG4sdCxlKXtmLm9wZW4oXCJQT1NUXCIsbiksZi53aXRoQ3JlZGVudGlhbHM9ITAsZSYmZi5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsZSksZi5zZW5kKHQpfXJldHVybiBmLm9ubG9hZD1mdW5jdGlvbigpe2Yuc3RhdHVzPDI5OT9lKCk6cy5jb25maWdbZytcIi5YSFJSZXRyaWVzXCJdJiZhPDMmJmIoZnVuY3Rpb24oKXt1KHIsaSxjKX0sKythKmgpfSx1KHIsaSxjKSwxfV0uc29tZShmdW5jdGlvbihuKXt0cnl7cmV0dXJuIG4odCxlLG8pfWNhdGNoKG4pe319KX1rJiYocy5vbmNlKFwiJGFmdGVybG9hZFwiLGZ1bmN0aW9uKCl7bz0xLGZ1bmN0aW9uKGUpeyhzW2ldKCl8fFtdKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe2lmKCFuLmluZGV4T2YocikpdHJ5e3ZhciB0PXNbaV0obik7c1thXShuKSxKU09OLnBhcnNlKHQpLmZvckVhY2goZSl9Y2F0Y2gobil7cy5lcnJvcihuKX19KX0oQikscy5vbihFLFwidmlzaWJpbGl0eWNoYW5nZVwiLFQsITEpLFQoKX0pLHMub25jZShcIiRhZnRlcnVubG9hZFwiLGZ1bmN0aW9uKCl7bz0xLFQoKX0pLHMub24oXCIkYWZ0ZXJQYWdlVHJhbnNpdGlvblwiLGZ1bmN0aW9uKCl7dj0wLEk9d30pLHMucmVnaXN0ZXIoZyx7bG9nOkIscmVnaXN0ZXI6ZnVuY3Rpb24obil7eS5wdXNoKG4pfX0pKX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24obil7dmFyIHI9bi5jb25maWdbXCJFdmVudHMuU3VzaGlFbmRwb2ludFwiXTtuKFwiVHJhbnNwb3J0XCIpKFwicmVnaXN0ZXJcIix7YWNjZXB0czpmdW5jdGlvbihuKXtyZXR1cm4gbi5zY2hlbWFJZH0scG9zdDpmdW5jdGlvbihuKXt2YXIgdD1uLm1hcChmdW5jdGlvbihuKXtyZXR1cm57ZGF0YTpufX0pO3JldHVybnt1cmw6cixib2R5OkpTT04uc3RyaW5naWZ5KHtldmVudHM6dH0pfX0scHJlZmxpZ2h0OmZ1bmN0aW9uKCl7dmFyIG4sdD0vXFwvXFwvKC4qPylcXC8vLmV4ZWMocik7cmV0dXJuIHQmJnRbMV0mJihuPVwiaHR0cHM6Ly9cIit0WzFdK1wiL3BpbmdcIikse3VybDpufX0sY2h1bmtzOmZ1bmN0aW9uKG4pe2Zvcih2YXIgdD1bXTs1MDA8bi5sZW5ndGg7KXQucHVzaChuLnNwbGljZSgwLDUwMCkpO3JldHVybiB0LnB1c2gobiksdH19KX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24obil7dmFyIHQsYSxvLHIsZT1uLmNvbmZpZyxpPVwiUGFnZVZpZXdzXCIsZD1lW2krXCIuSW1wcmVzc2lvbk1pbmltdW1UaW1lXCJdfHwxZTMscz1cImhpZGRlblwiLGM9XCJpbm5lckhlaWdodFwiLGc9XCJpbm5lcldpZHRoXCIsbD1cInJlbmRlcmVkVG9cIixmPWwrXCJWaWV3ZWRcIixtPWwrXCJNZWFuaW5nZnVsXCIsdT1sK1wiSW1wcmVzc2VkXCIscD0xLHY9MixoPTMsdz00LHk9NSxQPVwibG9hZGVkXCIsST03LFQ9OCxiPW4uZ2xvYmFsLEU9bi5vbixWPW4oXCJFdmVudHNcIix7cHJvZHVjZXJJZDpcImNzYVwifSksJD1iLmRvY3VtZW50LE09e30sUz17fSxIPXk7ZnVuY3Rpb24gSyhlKXtpZighTVtJXSl7dmFyIGk7aWYoTVtlXT1uLnRpbWUoKSxlIT09aCYmZSE9PVB8fCh0PXR8fE1bZV0pLHQmJkg9PT13KWE9YXx8TVtlXSwoaT17fSlbbV09dC1vLGlbZl09YS1vLFIoXCJQYWdlVmlldy40XCIsaSkscj1yfHxuLnRpbWVvdXQoaixkKTtpZihlIT09eSYmZSE9PXAmJmUhPT12fHwoY2xlYXJUaW1lb3V0KHIpLHI9MCksZSE9PXAmJmUhPT12fHxSKFwiUGFnZVJlbmRlci4zXCIse3RyYW5zaXRpb25UeXBlOmU9PT1wP1wiaGFyZFwiOlwic29mdFwifSksZT09PUkpKGk9e30pW21dPXQtbyxpW2ZdPWEtbyxpW3VdPU1bZV0tbyxSKFwiUGFnZUltcHJlc3NlZC4yXCIsaSl9fWZ1bmN0aW9uIFIoZSxpKXtTW2VdfHwoaS5zY2hlbWFJZD1cIjxucz4uXCIrZSxWKFwibG9nXCIsaSx7ZW50OlwiYWxsXCJ9KSxTW2VdPTEpfWZ1bmN0aW9uIFcoKXswPT09YltjXSYmMD09PWJbZ10/KEg9VCxuKFwiRXZlbnRzXCIpKFwic2V0RW50aXR5XCIse3BhZ2U6e3ZpZXdwb3J0OlwiaGlkZGVuLWlmcmFtZVwifX0pKTpIPSRbc10/eTp3LEsoSCl9ZnVuY3Rpb24gaigpe0soSSkscj0wfWZ1bmN0aW9uIGsoKXt2YXIgZT1vP3Y6cDtNPXt9LFM9e30sYT10PTAsbz1uLnRpbWUoKSxLKGUpLFcoKX1mdW5jdGlvbiBxKCl7dmFyIGU9JC5yZWFkeVN0YXRlO1wiaW50ZXJhY3RpdmVcIj09PWUmJksoaCksXCJjb21wbGV0ZVwiPT09ZSYmSyhQKX1lW1wiS2lsbFN3aXRjaC5cIitpXXx8KCQmJnZvaWQgMCE9PSRbc10/KGsoKSxFKCQsXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsVywhMSksRSgkLFwicmVhZHlzdGF0ZWNoYW5nZVwiLHEsITEpLEUoXCIkYWZ0ZXJQYWdlVHJhbnNpdGlvblwiLGspLEUoXCIkdGltaW5nOmxvYWRlZFwiLHEpLG4ub25jZShcIiRsb2FkXCIscSkpOm4ud2FybihcIlBhZ2UgdmlzaWJpbGl0eSBub3Qgc3VwcG9ydGVkXCIpKX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24oYyl7dmFyIHM9Yy5jb25maWdbXCJJbnRlcmFjdGlvbnMuUGFyZW50Q2hhaW5MZW5ndGhcIl18fDE1LGU9XCJjbGlja1wiLHI9XCJ0b3VjaGVzXCIsZj1cInRpbWVTdGFtcFwiLG89XCJsZW5ndGhcIix1PVwicGFnZVhcIixnPVwicGFnZVlcIixwPVwicGFnZVhPZmZzZXRcIixoPVwicGFnZVlPZmZzZXRcIixtPTI1MCx2PTUsZD0yMDAsbD0uNSx0PXtjYXB0dXJlOiEwLHBhc3NpdmU6ITB9LFg9Yy5nbG9iYWwsWT1jLmVtaXQsbj1jLm9uLHg9WC5NYXRoLmFicyxhPShYLmRvY3VtZW50fHx7fSkuZG9jdW1lbnRFbGVtZW50fHx7fSx5PXt4OjAseTowLHQ6MCxzWDowLHNZOjB9LE49e3g6MCx5OjAsdDowLHNYOjAsc1k6MH07ZnVuY3Rpb24gYih0KXtpZih0LmlkKXJldHVyblwiLy8qW0BpZD0nXCIrdC5pZCtcIiddXCI7dmFyIGU9ZnVuY3Rpb24odCl7dmFyIGUsbj0xO2ZvcihlPXQucHJldmlvdXNTaWJsaW5nO2U7ZT1lLnByZXZpb3VzU2libGluZyllLm5vZGVOYW1lPT09dC5ub2RlTmFtZSYmKG4rPTEpO3JldHVybiBufSh0KSxuPXQubm9kZU5hbWU7cmV0dXJuIDEhPT1lJiYobis9XCJbXCIrZStcIl1cIiksdC5wYXJlbnROb2RlJiYobj1iKHQucGFyZW50Tm9kZSkrXCIvXCIrbiksbn1mdW5jdGlvbiBJKHQsZSxuKXt2YXIgYT1jKFwiQ29udGVudFwiLHt0YXJnZXQ6bn0pLGk9e3NjaGVtYUlkOlwiPG5zPi5Db250ZW50SW50ZXJhY3Rpb24uMVwiLGludGVyYWN0aW9uOnQsaW50ZXJhY3Rpb25EYXRhOmUsbWVzc2FnZUlkOmMuVVVJRCgpfTtpZihuKXt2YXIgcj1iKG4pO3ImJihpLmF0dHJpYnV0aW9uPXIpO3ZhciBvPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LG49ZS50YWdOYW1lLGE9ITEsaT10P3QuaHJlZjpudWxsLHI9MDtyPHM7cisrKXtpZighZXx8IWUucGFyZW50RWxlbWVudCl7YT0hMDticmVha31uPShlPWUucGFyZW50RWxlbWVudCkudGFnTmFtZStcIi9cIituLGk9aXx8ZS5ocmVmfXJldHVybiBhfHwobj1cIi4uLi9cIituKSx7cGM6bixocjppfX0obik7by5wYyYmKGkuaW50ZXJhY3Rpb25EYXRhLnBhcmVudENoYWluPW8ucGMpLG8uaHImJihpLmludGVyYWN0aW9uRGF0YS5ocmVmPW8uaHIpfWEoXCJsb2dcIixpKSxZKFwiJGNvbnRlbnQuaW50ZXJhY3Rpb25cIixpKX1mdW5jdGlvbiBpKHQpe0koZSx7aW50ZXJhY3Rpb25YOlwiXCIrdC5wYWdlWCxpbnRlcmFjdGlvblk6XCJcIit0LnBhZ2VZfSx0LnRhcmdldCl9ZnVuY3Rpb24gQyh0KXtpZih0JiZ0W3JdJiYxPT09dFtyXVtvXSl7dmFyIGU9dFtyXVswXTtOPXk9e2U6dC50YXJnZXQseDplW3VdLHk6ZVtnXSx0OnRbZl0sc1g6WFtwXSxzWTpYW2hdfX19ZnVuY3Rpb24gRCh0KXtpZih0JiZ0W3JdJiYxPT09dFtyXVtvXSYmeSYmTil7dmFyIGU9dFtyXVswXSxuPXRbZl0sYT1uLU4udCxpPXtlOnQudGFyZ2V0LHg6ZVt1XSx5OmVbZ10sdDpuLHNYOlhbcF0sc1k6WFtoXX07Tj1pLGQ8PWEmJih5PWkpfX1mdW5jdGlvbiBFKHQpe2lmKHQpe3ZhciBlPXgoeS54LU4ueCksbj14KHkueS1OLnkpLGE9eCh5LnNYLU4uc1gpLGk9eCh5LnNZLU4uc1kpLHI9dFtmXS15LnQ7aWYobTwxZTMqZS9yJiZ2PGV8fG08MWUzKm4vciYmdjxuKXt2YXIgbz1uPGU7byYmYSYmZSpsPD1hfHwhbyYmaSYmbipsPD1pfHxJKChvP1wiaG9yaXpvbnRhbFwiOlwidmVydGljYWxcIikrXCItc3dpcGVcIix7aW50ZXJhY3Rpb25YOlwiXCIreS54LGludGVyYWN0aW9uWTpcIlwiK3kueSxlbmRYOlwiXCIrTi54LGVuZFk6XCJcIitOLnl9LHkuZSl9fX1uKGEsZSxpLHQpLG4oYSxcInRvdWNoc3RhcnRcIixDLHQpLG4oYSxcInRvdWNobW92ZVwiLEQsdCksbihhLFwidG91Y2hlbmRcIixFLHQpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbih0KXt2YXIgbixyLGkscz1cIk11dGF0aW9uT2JzZXJ2ZXJcIixlPVwiUGVyZm9ybWFuY2VPYnNlcnZlclwiLHU9XCJvYnNlcnZlXCIsbz1cImRpc2Nvbm5lY3RcIixmPVwic2Nyb2xsXCIsYT10Lmdsb2JhbCxjPWEuZG9jdW1lbnQsbD1jLmJvZHl8fGMuZG9jdW1lbnRFbGVtZW50LHA9RGF0ZS5ub3csYj1bXSxkPVtdLGc9W10sbT0wLHk9MCx2PTAsTz10LmJsYW5rO2Z1bmN0aW9uIGgoZSl7Yi5wdXNoKHt0OnAoKSxtOmV9KX1mdW5jdGlvbiB3KGUpe2QucHVzaCh7dDpwKCksbTplfSksdj0xLG4mJm4oKX1mdW5jdGlvbiBFKCl7diYmKGcucHVzaCh7dDpwKCkseTp5fSkseT1hLnBhZ2VZT2Zmc2V0LHY9MCl9ZnVuY3Rpb24gVChlKXttPWUsKHI9bmV3IGFbc10odykpW3VdKGwse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSksKGk9bmV3IGFbc10oaCkpW3VdKGwse2F0dHJpYnV0ZXM6ITAsc3VidHJlZTohMCxhdHRyaWJ1dGVGaWx0ZXI6W1wic3JjXCJdLGF0dHJpYnV0ZU9sZFZhbHVlOiEwfSksTz10Lm9uKGEsZixFLHtwYXNzaXZlOiEwfSl9cCYmYVtzXSYmKHQuY29uZmlnW1wiVmlzdWFsUmVhZHkuQ29sbGVjdEFmdGVyUGFpbnRcIl0/YVtlXSYmfihhW2VdLnN1cHBvcnRlZEVudHJ5VHlwZXN8fFtdKS5pbmRleE9mKFwicGFpbnRcIik/bmV3IGFbZV0oZnVuY3Rpb24oZSl7VCgoKGUuZ2V0RW50cmllcygpfHxbXSlbMF18fHt9KS5zdGFydFRpbWV8fHAoKSl9KVt1XSh7ZW50cnlUeXBlczpbXCJwYWludFwiXSxidWZmZXJlZDohMH0pOnQucmFmKFQpOlQoMCksdC5yZWdpc3RlcihcIlNwZWVkSW5kZXhCdWZmZXJzXCIse2dldEJ1ZmZlcnM6ZnVuY3Rpb24oZSl7ZSYmKEUoKSxlKG0sYixkLGcpLHImJnJbb10oKSxpJiZpW29dKCksTygpKX0scmVnaXN0ZXJMaXN0ZW5lcjpmdW5jdGlvbihlKXtuPWV9fSkpfSk7XG5jc2EucGx1Z2luKGZ1bmN0aW9uKGIpe3ZhciBhPWIuZ2xvYmFsLGM9YS51ZXQsZT1hLnVleCxmPWEudWUsYT1hLk9iamVjdCxnPXtsYXJnZXN0Q29udGVudGZ1bFBhaW50OlwibGNwXCIsc3BlZWRJbmRleDpcInNpXCIsYXRmU3BlZWRJbmRleDpcImF0ZnNpXCIsdmlzdWFsbHlMb2FkZWQ1MDpcInZsNTBcIix2aXN1YWxseUxvYWRlZDkwOlwidmw5MFwiLHZpc3VhbGx5TG9hZGVkMTAwOlwidmwxMDBcIn07YiYmYyYmZSYmYS5rZXlzJiZmJiZhLmtleXMoZykuZm9yRWFjaChmdW5jdGlvbihhKXtiLm9uKFwiJHRpbWluZzpcIithLGZ1bmN0aW9uKGIpe3ZhciBkPWdbYV07aWYoZi5pc2wpe3ZhciBoPVwiY3NhOlwiK2Q7YyhkLGgsdm9pZCAwLGIpO2UoXCJhdFwiLGgpfWVsc2UgYyhkLHZvaWQgMCx2b2lkIDAsYil9KX0pfSk7XG5cbjwvc2NyaXB0PlxuPHNjcmlwdD53aW5kb3cudWUgJiYgdWUuY291bnQgJiYgdWUuY291bnQoJ0NTTUxpYnJhcnlTaXplJywgMTM1NTUpPC9zY3JpcHQ+XG48IS0tIHNwOmZlYXR1cmU6bmF2LWlubGluZS1qcyAtLT5cbjwhLS0gTkFWWUFBTiBKUyAtLT5cbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPiFmdW5jdGlvbihuKXtmdW5jdGlvbiBlKG4sZSl7cmV0dXJue206bixhOmZ1bmN0aW9uKG4pe3JldHVybltdLnNsaWNlLmNhbGwobil9KGUpfX1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaGVhZGVyXCIpO3ZhciByPWZ1bmN0aW9uKG4pe2Z1bmN0aW9uIHUobixyLHUpe25bdV09ZnVuY3Rpb24oKXthLl9yZXBsYXkucHVzaChyLmNvbmNhdChlKHUsYXJndW1lbnRzKSkpfX12YXIgYT17fTtyZXR1cm4gYS5fc291cmNlTmFtZT1uLGEuX3JlcGxheT1bXSxhLmdldE5vdz1mdW5jdGlvbihuLGUpe3JldHVybiBlfSxhLndoZW49ZnVuY3Rpb24oKXt2YXIgbj1bZShcIndoZW5cIixhcmd1bWVudHMpXSxyPXt9O3JldHVybiB1KHIsbixcInJ1blwiKSx1KHIsbixcImRlY2xhcmVcIiksdShyLG4sXCJwdWJsaXNoXCIpLHUocixuLFwiYnVpbGRcIikscn0sdShhLFtdLFwiZGVjbGFyZVwiKSx1KGEsW10sXCJidWlsZFwiKSx1KGEsW10sXCJwdWJsaXNoXCIpLHUoYSxbXSxcImltcG9ydEV2ZW50XCIpLHIuX3NoaW1zLnB1c2goYSksYX07ci5fc2hpbXM9W10sbi4kTmF2fHwobi4kTmF2PXIoXCJyY3gtbmF2XCIpKSxuLiROYXYubWFrZXx8KG4uJE5hdi5tYWtlPXIpfSh3aW5kb3cpPC9zY3JpcHQ+PHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4kTmF2LmltcG9ydEV2ZW50KCduYXZiYXJKUy1iZWFjb25iZWx0Jyk7XG4kTmF2LmRlY2xhcmUoJ2ltZy5zcHJpdGUnLCB7XG4gICdwbmczMic6ICdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvbmF2LXNwcml0ZS1nbG9iYWwtMXgtaG0tZHNrLXJlb3JnLl9DQjQwNTkzNzU0N18ucG5nJyxcbiAgJ3BuZzMyLTJ4JzogJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9nbm8vc3ByaXRlcy9uYXYtc3ByaXRlLWdsb2JhbC0yeC1obS1kc2stcmVvcmcuX0NCNDA1OTM3NTQ3Xy5wbmcnXG59KTtcbiROYXYuZGVjbGFyZSgnaW1nLnRpbWVsaW5lJywge1xuICAndGltZWxpbmUtaWNvbi0yeCc6ICdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvdGltZWxpbmVfc3ByaXRlXzJ4Ll9DQjQ0MzU4MTE5MV8ucG5nJ1xufSk7XG53aW5kb3cuX25hdmJhclNwcml0ZVVybCA9ICdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvbmF2LXNwcml0ZS1nbG9iYWwtMXgtaG0tZHNrLXJlb3JnLl9DQjQwNTkzNzU0N18ucG5nJztcbiROYXYuZGVjbGFyZSgnaW1nLnBpeGVsJywgJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS94LWxvY2FsZS9jb21tb24vdHJhbnNwYXJlbnQtcGl4ZWwuX0NCNDg1OTM1MDM2Xy5naWYnKTtcbjwvc2NyaXB0PlxuPGltZyBzcmM9XCJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvZ25vL3Nwcml0ZXMvbmF2LXNwcml0ZS1nbG9iYWwtMXgtaG0tZHNrLXJlb3JnLl9DQjQwNTkzNzU0N18ucG5nXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIiBhbHQ9XCJcIi8+XG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj52YXIgbmF2X3RfYWZ0ZXJfcHJlbG9hZF9zcHJpdGUgPSArIG5ldyBEYXRlKCk7PC9zY3JpcHQ+XG48c2NyaXB0PlxuKHdpbmRvdy5BbWF6b25VSVBhZ2VKUyA/IEFtYXpvblVJUGFnZUpTIDogUCkud2hlbignbmF2Q0YnKS5leGVjdXRlKGZ1bmN0aW9uKCkge1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5sb2FkLmpzKCdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFjeXk5c3pNd0wuX1JDfDcxYUNwa0ZlcmtMLmpzLDAxUXZSZUZlSnlMLmpzLDAxNnRna09NTU5MLmpzLDYxbjltTDJIQllMLmpzLDQxZ05Lb0swczdMLmpzLDExNXBWOFJsMDJMLmpzLDIxUUEtc3p4Z3ZMLmpzLDExazQ3eVVNT2pMLmpzLDQxU1pOZ3ZYNG9MLmpzLDUxLXhWVWtGTHFMLmpzLDMxc3EzcGZkZTRMLmpzLDExLTk4UUFoN2dMLmpzLDMxaytTaU44bUxMLmpzXy5qcz9BVUlDbGllbnRzL05hdkRlc2t0b3BVYmVyQXNzZXQmTWs5ektjWDcjZGVza3RvcC5sYW5ndWFnZS1lbi51cy4zNjU0MTktVDEuMzY2NzQwLVQxLjMxMDQ4NC1UMScpO1xufSk7XG48L3NjcmlwdD5cbjwhLS0gc3A6ZW5kLWZlYXR1cmU6bmF2LWlubGluZS1qcyAtLT5cbjwhLS0gc3A6ZmVhdHVyZTpuYXYtc2tlbGV0b24gLS0+XG48IS0tIHNwOmVuZC1mZWF0dXJlOm5hdi1za2VsZXRvbiAtLT5cbjwhLS0gc3A6ZmVhdHVyZTpuYXZiYXIgLS0+XG5cbjwhLS1QaWx1IC0tPlxuXG5cbiAgPCEtLSBOQVZZQUFOIC0tPlxuXG5cblxuXG5cblxuXG5cblxuXG5cbjwhLS0gbmF2bWV0IGluaXRpYWwgZGVmaW5pdGlvbiAtLT5cblxuXG5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz5cbiAgICBpZih3aW5kb3cubmF2bWV0PT09dW5kZWZpbmVkKSB7XG4gICAgICB3aW5kb3cubmF2bWV0PVtdO1xuICAgICAgaWYgKHdpbmRvdy5wZXJmb3JtYW5jZSAmJiB3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nICYmIHdpbmRvdy51ZV90MCkge1xuICAgICAgICB2YXIgdCA9IHdpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmc7XG4gICAgICAgIHZhciBub3cgPSArIG5ldyBEYXRlKCk7XG4gICAgICAgIHdpbmRvdy5uYXZtZXQuYmFzaWMgPSB7XG4gICAgICAgICAgJ25ldHdvcmtMYXRlbmN5JzogKHQucmVzcG9uc2VTdGFydCAtIHQuZmV0Y2hTdGFydCksXG4gICAgICAgICAgJ25hdkZpcnN0UGFpbnQnOiAobm93IC0gdC5yZXNwb25zZVN0YXJ0KSxcbiAgICAgICAgICAnTmF2U3RhcnQnOiAobm93IC0gd2luZG93LnVlX3QwKVxuICAgICAgICB9O1xuICAgICAgICB3aW5kb3cubmF2bWV0LnB1c2goe2tleTpcIk5hdkZpcnN0UGFpbnRTdGFydFwiLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cudWVfdDB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHdpbmRvdy51ZV90MCkge1xuICAgICAgd2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6XCJOYXZNYWluU3RhcnRcIixlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93LnVlX3QwfSk7XG4gICAgfVxuPC9zY3JpcHQ+XG5cblxuXG5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTs8L3NjcmlwdD5cbiAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPlxuICAgIC8vIE5hdiBzdGFydCBzaG91bGQgYmUgbG9nZ2VkIGF0IHRoaXMgcGxhY2Ugb25seSBpZiByZXF1ZXN0IGlzIE5PVCBwcm9ncmVzc2l2ZWx5IGxvYWRlZC5cbiAgICAvLyBGb3IgcHJvZ3Jlc3NpdmUgbG9hZGluZyBjYXNlIHRoaXMgbWV0cmljIGlzIGxvZ2dlZCBhcyBwYXJ0IG9mIHNrZWxldG9uLlxuICAgIC8vIFByZXNlbmNlIG9mIHNrZWxldG9uIHNpZ25hbHMgdGhhdCByZXF1ZXN0IGlzIHByb2dyZXNzaXZlbHkgbG9hZGVkLlxuICAgIGlmKCFkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5hdmJhci1za2VsZXRvblwiKSkge1xuICAgICAgd2luZG93LnVldCAmJiB1ZXQoJ25zJyk7XG4gICAgfVxuICAgIHdpbmRvdy5fbmF2YmFyID0gKGZ1bmN0aW9uIChvKSB7XG4gICAgICBvLmNvbXBvbmVudExvYWRlZCA9IG8ubG9hZGluZyA9IGZ1bmN0aW9uKCl7fTtcbiAgICAgIG8uYnJvd3NlcHJvbW9zID0ge307XG4gICAgICBvLmlzc1Byb21vcyA9IFtdO1xuICAgICAgcmV0dXJuIG87XG4gICAgfSh3aW5kb3cuX25hdmJhciB8fCB7fSkpO1xuICAgIHdpbmRvdy5fbmF2YmFyLmRlY2xhcmVPbkxvYWQgPSBmdW5jdGlvbiAoKSB7IHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgncGFnZS5sb2FkJyk7IH07XG4gICAgaWYgKHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgd2luZG93Ll9uYXZiYXIuZGVjbGFyZU9uTG9hZCwgZmFsc2UpO1xuICAgIH0gZWxzZSBpZiAod2luZG93LmF0dGFjaEV2ZW50KSB7XG4gICAgICB3aW5kb3cuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIiwgd2luZG93Ll9uYXZiYXIuZGVjbGFyZU9uTG9hZCk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cuJE5hdikge1xuICAgICAgJE5hdi53aGVuKCdwYWdlLmRvbVJlYWR5JykucnVuKFwiT25sb2FkRmFsbGJhY2tTZXR1cFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fbmF2YmFyLmRlY2xhcmVPbkxvYWQoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2xvZ0V2ZW50LmVuYWJsZWQnLFxuICAgICAgJ2ZhbHNlJyk7XG5cbiAgICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5saWdodG5pbmdEZWFscycsIHt9KTtcbiAgPC9zY3JpcHQ+XG5cbiAgICA8c3R5bGUgbWFyaz1cImFib3ZlTmF2SW5qZWN0aW9uQ1NTXCIgdHlwZT1cInRleHQvY3NzXCI+XG4gICAgICBkaXYjbmF2U3dtSG9saWRheS5uYXYtZm9jdXMge2JvcmRlcjogbm9uZTttYXJnaW46IDA7fVxuICAgIDwvc3R5bGU+XG4gICAgPHNjcmlwdCBtYXJrPVwiYWJvdmVOYXZJbmplY3Rpb25KU1wiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgICAgIHRyeSB7XG4gICAgICAgIGlmKHdpbmRvdy5uYXZtZXQ9PT11bmRlZmluZWQpd2luZG93Lm5hdm1ldD1bXTsgaWYod2luZG93LiROYXYpIHsgJE5hdi53aGVuKCckJywgJ2NvbmZpZycsICdmbHlvdXQuYWNjb3VudExpc3QnLCAnU2lnbkluUmVkaXJlY3QnLCAnZGF0YVBhbmVsJykucnVuKCdhY2NvdW50TGlzdFJlZGlyZWN0Rml4JywgZnVuY3Rpb24gKCQsIGNvbmZpZywgZmx5b3V0LCBTaWduSW5SZWRpcmVjdCwgZGF0YVBhbmVsKSB7IGlmICghY29uZmlnLmFjY291bnRMaXN0KSB7IHJldHVybjsgfSBmbHlvdXQuZ2V0UGFuZWwoKS5vbkRhdGEoZnVuY3Rpb24gKGRhdGEpIHsgaWYgKFNpZ25JblJlZGlyZWN0KSB7IHZhciAkYW5jaG9ycyA9ICQoJ1tkYXRhLW5hdi1yb2xlPXNpZ25pbl0nLCBmbHlvdXQuZWxlbSgpKTsgJC5lYWNoKCRhbmNob3JzLCBmdW5jdGlvbihpLCBhbmNob3JFbCkge1NpZ25JblJlZGlyZWN0LnNldFJlZGlyZWN0VXJsKCQoYW5jaG9yRWwpLCBudWxsLCBudWxsKTt9KTt9fSk7fSk7ICROYXYud2hlbignJCcpLnJ1bignZGVmaW5lSXNBcnJheScsIGZ1bmN0aW9uKGpRdWVyeSkgeyBpZihqUXVlcnkuaXNBcnJheT09PXVuZGVmaW5lZCkgeyBqUXVlcnkuaXNBcnJheT1mdW5jdGlvbihwYXJhbSkgeyBpZihwYXJhbS5sZW5ndGg9PT11bmRlZmluZWQpIHsgcmV0dXJuIGZhbHNlOyB9IHJldHVybiB0cnVlOyB9OyB9IH0pOyAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5jYXJ0Rmx5b3V0RGlzYWJsZWQnLCAndHJ1ZScpOyAkTmF2LndoZW4oJyQnLCckRicsJ2NvbmZpZycsJ2xvZ0V2ZW50JywncGFuZWxzJywncGhvbmVIb21lJywnZGF0YVBhbmVsJywnZmx5b3V0cy5yZW5kZXJQcm9tbycsJ2ZseW91dHMuc2xvcHB5VHJpZ2dlcicsJ2ZseW91dHMuYWNjZXNzaWJpbGl0eScsJ3V0aWwubW91c2VPdXQnLCd1dGlsLm9uS2V5JywnZGVidWcucGFyYW0nKS5idWlsZCgnZmx5b3V0cy5idWlsZFN1YlBhbmVscycsZnVuY3Rpb24oJCwkRixjb25maWcsbG9nRXZlbnQscGFuZWxzLHBob25lSG9tZSxkYXRhUGFuZWwscmVuZGVyUHJvbW8sY3JlYXRlU2xvcHB5VHJpZ2dlcixhMTF5SGFuZGxlcixtb3VzZU91dFV0aWxpdHksb25LZXksZGVidWdQYXJhbSl7dmFyIGZseW91dERlYnVnPWRlYnVnUGFyYW0oJ25hdkZseW91dENsaWNrJyk7cmV0dXJuIGZ1bmN0aW9uKGZseW91dCxldmVudCl7dmFyIGxpbmtLZXlzPVtdOyQoJy5uYXYtaXRlbScsZmx5b3V0LmVsZW0oKSkuZWFjaChmdW5jdGlvbigpe3ZhciAkaXRlbT0kKHRoaXMpO2xpbmtLZXlzLnB1c2goe2xpbms6JGl0ZW0scGFuZWxLZXk6JGl0ZW0uYXR0cignZGF0YS1uYXYtcGFuZWxrZXknKX0pO30pO2lmKGxpbmtLZXlzLmxlbmd0aD09PTApe3JldHVybjt9IHZhciB2aXNpYmxlPWZhbHNlO3ZhciAkcGFyZW50PSQoJzxkaXYgY2xhc3M9XFwnbmF2LXN1YmNhdHNcXCc+PC9kaXY+JykuYXBwZW5kVG8oZmx5b3V0LmVsZW0oKSk7dmFyIHBhbmVsR3JvdXA9Zmx5b3V0LmdldE5hbWUoKSsnU3ViQ2F0cyc7dmFyIGhpZGVUaW1lb3V0PW51bGw7dmFyIHNsb3BweVRyaWdnZXI9Y3JlYXRlU2xvcHB5VHJpZ2dlcigkcGFyZW50KTt2YXIgc2hvd1BhcmVudD1mdW5jdGlvbigpe2lmKGhpZGVUaW1lb3V0KXtjbGVhclRpbWVvdXQoaGlkZVRpbWVvdXQpO2hpZGVUaW1lb3V0PW51bGw7fSBpZih2aXNpYmxlKXtyZXR1cm47fSB2YXIgaGVpZ2h0PSQoJyNuYXYtZmx5b3V0LXNob3BBbGwnKS5oZWlnaHQoKTsgJHBhcmVudC5jc3MoeydoZWlnaHQnOiBoZWlnaHR9KTskcGFyZW50LmFuaW1hdGUoe3dpZHRoOidzaG93J30se2R1cmF0aW9uOjIwMCxjb21wbGV0ZTpmdW5jdGlvbigpeyRwYXJlbnQuY3NzKHtvdmVyZmxvdzondmlzaWJsZSd9KTt9fSk7dmlzaWJsZT10cnVlO307dmFyIGhpZGVQYXJlbnROb3c9ZnVuY3Rpb24oKXskcGFyZW50LnN0b3AoKS5jc3Moe292ZXJmbG93OidoaWRkZW4nLGRpc3BsYXk6J25vbmUnLHdpZHRoOidhdXRvJyxoZWlnaHQ6J2F1dG8nfSk7cGFuZWxzLmhpZGVBbGwoe2dyb3VwOnBhbmVsR3JvdXB9KTt2aXNpYmxlPWZhbHNlO2lmKGhpZGVUaW1lb3V0KXtjbGVhclRpbWVvdXQoaGlkZVRpbWVvdXQpO2hpZGVUaW1lb3V0PW51bGw7fX07dmFyIGhpZGVQYXJlbnQ9ZnVuY3Rpb24oKXtpZighdmlzaWJsZSl7cmV0dXJuO30gaWYoaGlkZVRpbWVvdXQpe2NsZWFyVGltZW91dChoaWRlVGltZW91dCk7aGlkZVRpbWVvdXQ9bnVsbDt9IGhpZGVUaW1lb3V0PXNldFRpbWVvdXQoaGlkZVBhcmVudE5vdywxMCk7fTtmbHlvdXQub25IaWRlKGZ1bmN0aW9uKCl7c2xvcHB5VHJpZ2dlci5kaXNhYmxlKCk7aGlkZVBhcmVudE5vdygpO3RoaXMuZWxlbSgpLmhpZGUoKTt9KTt2YXIgYWRkUGFuZWw9ZnVuY3Rpb24oJGxpbmsscGFuZWxLZXkpe3ZhciBwYW5lbD1kYXRhUGFuZWwoe2NsYXNzTmFtZTonbmF2LXN1YmNhdCcsZGF0YUtleTpwYW5lbEtleSxncm91cHM6W3BhbmVsR3JvdXBdLHNwaW5uZXI6ZmFsc2UsdmlzaWJsZTpmYWxzZX0pO2lmKCFmbHlvdXREZWJ1Zyl7dmFyIG1vdXNlb3V0PW1vdXNlT3V0VXRpbGl0eSgpO21vdXNlb3V0LmFkZChmbHlvdXQuZWxlbSgpKTttb3VzZW91dC5hY3Rpb24oZnVuY3Rpb24oKXtwYW5lbC5oaWRlKCk7fSk7bW91c2VvdXQuZW5hYmxlKCk7fSB2YXIgYTExeT1hMTF5SGFuZGxlcih7bGluazokbGluayxvbkVzY2FwZTpmdW5jdGlvbigpe3BhbmVsLmhpZGUoKTskbGluay5mb2N1cygpO319KTt2YXIgbG9nUGFuZWxJbnRlcmFjdGlvbj1mdW5jdGlvbihwcm9tb0lELHdsVHJpZ2dlcnMpe3ZhciBsb2dOb3c9JEYub25jZSgpLm9uKGZ1bmN0aW9uKCl7dmFyIHBhbmVsRXZlbnQ9JC5leHRlbmQoe30sZXZlbnQse2lkOnByb21vSUR9KTtpZihjb25maWcuYnJvd3NlUHJvbW9zJiYhIWNvbmZpZy5icm93c2VQcm9tb3NbcHJvbW9JRF0pe3BhbmVsRXZlbnQuYnA9MTt9IGxvZ0V2ZW50KHBhbmVsRXZlbnQpO3Bob25lSG9tZS50cmlnZ2VyKHdsVHJpZ2dlcnMpO30pO2lmKHBhbmVsLmlzVmlzaWJsZSgpJiZwYW5lbC5oYXNJbnRlcmFjdGVkKCkpe2xvZ05vdygpO31lbHNle3BhbmVsLm9uSW50ZXJhY3QobG9nTm93KTt9fTtwYW5lbC5vbkRhdGEoZnVuY3Rpb24oZGF0YSl7cmVuZGVyUHJvbW8oZGF0YS5wcm9tb0lELHBhbmVsLmVsZW0oKSk7bG9nUGFuZWxJbnRlcmFjdGlvbihkYXRhLnByb21vSUQsZGF0YS53bFRyaWdnZXJzKTt9KTtwYW5lbC5vblNob3coZnVuY3Rpb24oKXt2YXIgY29sdW1uQ291bnQ9JCgnLm5hdi1jb2x1bW4nLHBhbmVsLmVsZW0oKSkubGVuZ3RoO3BhbmVsLmVsZW0oKS5hZGRDbGFzcygnbmF2LWNvbGNvdW50LScrY29sdW1uQ291bnQpO3Nob3dQYXJlbnQoKTt2YXIgJHN1YkNhdExpbmtzPSQoJy5uYXYtc3ViY2F0LWxpbmtzID4gYScscGFuZWwuZWxlbSgpKTt2YXIgbGVuZ3RoPSRzdWJDYXRMaW5rcy5sZW5ndGg7aWYobGVuZ3RoPjApe3ZhciBmaXJzdEVsZW1lbnRMZWZ0UG9zPSRzdWJDYXRMaW5rcy5lcSgwKS5vZmZzZXQoKS5sZWZ0O2Zvcih2YXIgaT0xO2k8bGVuZ3RoO2krKyl7aWYoZmlyc3RFbGVtZW50TGVmdFBvcz09PSRzdWJDYXRMaW5rcy5lcShpKS5vZmZzZXQoKS5sZWZ0KXskc3ViQ2F0TGlua3MuZXEoaSkuYWRkQ2xhc3MoJ25hdl9saW5lc3RhcnQnKTt9fSBpZigkKCdzcGFuLm5hdi10aXRsZS5uYXYtaXRlbScscGFuZWwuZWxlbSgpKS5sZW5ndGg9PT0wKXt2YXIgY2F0VGl0bGU9JC50cmltKCRsaW5rLmh0bWwoKSk7Y2F0VGl0bGU9Y2F0VGl0bGUucmVwbGFjZSgvcmVmPXNhX21lbnVfdG9wL2csJ3JlZj1zYV9tZW51Jyk7dmFyICRzdWJQYW5lbFRpdGxlPSQoJzxzcGFuIGNsYXNzPVxcJ25hdi10aXRsZSBuYXYtaXRlbVxcJz4nKyBjYXRUaXRsZSsnPC9zcGFuPicpO3BhbmVsLmVsZW0oKS5wcmVwZW5kKCRzdWJQYW5lbFRpdGxlKTt9fSAkbGluay5hZGRDbGFzcygnbmF2LWFjdGl2ZScpO30pO3BhbmVsLm9uSGlkZShmdW5jdGlvbigpeyRsaW5rLnJlbW92ZUNsYXNzKCduYXYtYWN0aXZlJyk7aGlkZVBhcmVudCgpO2ExMXkuZGlzYWJsZSgpO3Nsb3BweVRyaWdnZXIuZGlzYWJsZSgpO30pO3BhbmVsLm9uU2hvdyhmdW5jdGlvbigpe2ExMXkuZWxlbXMoJCgnYSwgYXJlYScscGFuZWwuZWxlbSgpKSk7fSk7c2xvcHB5VHJpZ2dlci5yZWdpc3RlcigkbGluayxwYW5lbCk7aWYoZmx5b3V0RGVidWcpeyRsaW5rLmNsaWNrKGZ1bmN0aW9uKCl7aWYocGFuZWwuaXNWaXNpYmxlKCkpe3BhbmVsLmhpZGUoKTt9ZWxzZXtwYW5lbC5zaG93KCk7fX0pO30gdmFyIHBhbmVsS2V5SGFuZGxlcj1vbktleSgkbGluayxmdW5jdGlvbigpe2lmKHRoaXMuaXNFbnRlcigpfHx0aGlzLmlzU3BhY2UoKSl7cGFuZWwuc2hvdygpO319LCdrZXlkb3duJyxmYWxzZSk7JGxpbmsuZm9jdXMoZnVuY3Rpb24oKXtwYW5lbEtleUhhbmRsZXIuYmluZCgpO30pLmJsdXIoZnVuY3Rpb24oKXtwYW5lbEtleUhhbmRsZXIudW5iaW5kKCk7fSk7cGFuZWwuZWxlbSgpLmFwcGVuZFRvKCRwYXJlbnQpO307dmFyIGhpZGVQYXJlbnRBbmRSZXNldFRyaWdnZXI9ZnVuY3Rpb24oKXtoaWRlUGFyZW50KCk7c2xvcHB5VHJpZ2dlci5kaXNhYmxlKCk7fTtmb3IodmFyIGk9MDtpPGxpbmtLZXlzLmxlbmd0aDtpKyspe3ZhciBpdGVtPWxpbmtLZXlzW2ldO2lmKGl0ZW0ucGFuZWxLZXkpe2FkZFBhbmVsKGl0ZW0ubGluayxpdGVtLnBhbmVsS2V5KTt9ZWxzZXtpdGVtLmxpbmsubW91c2VvdmVyKGhpZGVQYXJlbnRBbmRSZXNldFRyaWdnZXIpO319fTt9KTt9O1xuICAgICAgfSBjYXRjaCAoIGVyciApIHtcbiAgICAgICAgaWYgKCB3aW5kb3cuJE5hdiApIHtcbiAgICAgICAgICB3aW5kb3cuJE5hdi53aGVuKCdtZXRyaWNzJywgJ2xvZ1VlRXJyb3InKS5ydW4oZnVuY3Rpb24obWV0cmljcywgbG9nKSB7XG4gICAgICAgICAgICBtZXRyaWNzLmluY3JlbWVudCgnTmF2SlM6QWJvdmVOYXZJbmplY3Rpb246ZXJyb3InKTtcbiAgICAgICAgICAgIGxvZyhlcnIudG9TdHJpbmcoKSwge1xuICAgICAgICAgICAgICAnYXR0cmlidXRpb24nOiAncmN4LW5hdicsXG4gICAgICAgICAgICAgICdsb2dMZXZlbCc6ICdGQVRBTCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgPC9zY3JpcHQ+XG5cbiAgPG5vc2NyaXB0PlxuICAgIDxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj48IS0tXG4gICAgICAjbmF2YmFyICNuYXYtc2hvcCAubmF2LWE6aG92ZXIge1xuICAgICAgICBjb2xvcjogI2ZmOTkwMDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICB9XG4gICAgICAjbmF2YmFyICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLWZhY2FkZSxcbiAgICAgICNuYXZiYXIgI25hdi10b29scyAubmF2LWljb24sXG4gICAgICAjbmF2YmFyICNuYXYtc2hvcCAubmF2LWljb24sXG4gICAgICAjbmF2YmFyICNuYXYtc3VibmF2IC5uYXYtaGFzQXJyb3cgLm5hdi1hcnJvdyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAjbmF2YmFyICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLXN1Ym1pdCxcbiAgICAgICNuYXZiYXIgI25hdi1zZWFyY2ggLm5hdi1zZWFyY2gtc2NvcGUge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICAgICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLXNjb3BlIHtcbiAgICAgICAgcGFkZGluZzogMCA1cHg7XG4gICAgICB9XG4gICAgICAjbmF2YmFyICNuYXYtc2VhcmNoIC5uYXYtc2VhcmNoLWRyb3Bkb3duIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDVweDtcbiAgICAgICAgaGVpZ2h0OiAyM3B4O1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eSA9IDEwMCk7XG4gICAgICB9XG4gICAgLS0+PC9zdHlsZT5cbiA8L25vc2NyaXB0PlxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPndpbmRvdy5uYXZtZXQucHVzaCh7a2V5OidQcmVOYXYnLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cubmF2bWV0LnRtcH0pOzwvc2NyaXB0PlxuXG48YSBpZD0nbmF2LXRvcCc+PC9hPlxuXG5cblxuXG5cblxuXG48YSBpZD1cInNraXBsaW5rXCIgdGFiaW5kZXg9XCIwXCIgY2xhc3M9XCJza2lwLWxpbmtcIj5Ta2lwIHRvIG1haW4gY29udGVudDwvYT5cblxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPndpbmRvdy5uYXZtZXQudG1wPStuZXcgRGF0ZSgpOzwvc2NyaXB0PlxuPCEtLSBOYXZ5YWFuIFVwbmF2IC0tPlxuICAgIDxkaXYgaWQ9XCJuYXYtdXBuYXZcIiBhcmlhLWhpZGRlbj1cInRydWVcIiA+XG4gICAgICA8IS0tIHVudzEgZmFpbGVkIC0tPlxuICAgICAgXG4gICAgPC9kaXY+XG48c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+d2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6J1VwTmF2JyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC50bXB9KTs8L3NjcmlwdD5cblxuXG48c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+d2luZG93Lm5hdm1ldC5tYWluPStuZXcgRGF0ZSgpOzwvc2NyaXB0PlxuXG5cblxuPGhlYWRlciBpZD1cIm5hdmJhci1tYWluXCIgY2xhc3MgPSBcIm5hdi1vcHQtc3ByaXRlIG5hdi1mbGV4IG5hdi1sb2NhbGUtdXMgbmF2LWxhbmctZW4gbmF2LXNzbCBuYXYtdW5yZWMgbmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiPlxuXG4gICBcbiAgPGRpdiBpZD0nbmF2YmFyJyBjZWxfd2lkZ2V0X2lkPSdOYXZpZ2F0aW9uLWRlc2t0b3AtbmF2YmFyJ1xuICByb2xlPSduYXZpZ2F0aW9uJyBjbGFzcz1cIm5hdi1zcHJpdGUtdjEgY2Vsd2lkZ2V0IG5hdi1ibHVlYmVhY29uIG5hdi1hMTF5LXQxIGJvbGQtZm9jdXMtaG92ZXIgbGF5b3V0MiBuYXYtZmxleCBsYXlvdXQzIGxheW91dDMtYWx0IG5hdi1wYWNrYXJkLWdsb3cgaGFtYnVyZ2VyIG5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIj5cbiAgICBcbiAgICA8ZGl2IGlkPSduYXYtYmVsdCc+XG4gICAgICA8ZGl2IGNsYXNzPSduYXYtbGVmdCc+XG4gICAgICAgIDxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTs8L3NjcmlwdD5cbiAgPGRpdiBpZD1cIm5hdi1sb2dvXCIgPlxuICAgIDxhIGhyZWY9XCIvcmVmPW5hdl9sb2dvXCIgaWQ9XCJuYXYtbG9nby1zcHJpdGVzXCIgY2xhc3M9XCJuYXYtbG9nby1saW5rIG5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIiBhcmlhLWxhYmVsPVwiQW1hem9uXCI+XG4gICAgICA8c3BhbiBjbGFzcz1cIm5hdi1zcHJpdGUgbmF2LWxvZ28tYmFzZVwiPjwvc3Bhbj5cbiAgICAgIDxzcGFuIGlkPVwibG9nby1leHRcIiBjbGFzcz1cIm5hdi1zcHJpdGUgbmF2LWxvZ28tZXh0IG5hdi1wcm9ncmVzc2l2ZS1jb250ZW50XCI+PC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9XCJuYXYtbG9nby1sb2NhbGVcIj4udXM8L3NwYW4+XG4gICAgPC9hPlxuICA8L2Rpdj5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnB1c2goe2tleTonTG9nbycsZW5kOituZXcgRGF0ZSgpLGJlZ2luOndpbmRvdy5uYXZtZXQudG1wfSk7PC9zY3JpcHQ+XG4gICAgICAgIFxuPGRpdiBpZD1cIm5hdi1nbG9iYWwtbG9jYXRpb24tc2xvdFwiPlxuICAgIDxzcGFuIGlkPVwibmF2LWdsb2JhbC1sb2NhdGlvbi1kYXRhLW1vZGFsLWFjdGlvblwiIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZSBuYXYtcHJvZ3Jlc3NpdmUtYXR0cmlidXRlXCIgZGF0YS1hLW1vZGFsPSd7JnF1b3Q7d2lkdGgmcXVvdDs6Mzc1LCAmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDtmYWxzZSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7Q2hvb3NlIHlvdXIgbG9jYXRpb24mcXVvdDssICZxdW90O2FqYXhIZWFkZXJzJnF1b3Q7OnsmcXVvdDthbnRpLWNzcmZ0b2tlbi1hMnomcXVvdDs6JnF1b3Q7Z0UzYzJTK3o2UWZMOWgxb1cwUkpEWWh2QTc4eUZJVGlxMHJaTytNQUFBQU1BQUFBQUdIYlF0bHlZWGNBQUFBQSZxdW90O30sICZxdW90O25hbWUmcXVvdDs6JnF1b3Q7Z2xvdy1tb2RhbCZxdW90OywgJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9nbG93L2dldC1hZGRyZXNzLXNlbGVjdGlvbnMuaHRtbD9kZXZpY2VUeXBlJiN4M0Q7ZGVza3RvcCZhbXA7cGFnZVR5cGUmI3gzRDtTZWFyY2gmYW1wO3N0b3JlQ29udGV4dCYjeDNEO05vU3RvcmVOYW1lJmFtcDthY3Rpb25Tb3VyY2UmI3gzRDtkZXNrdG9wLW1vZGFsJnF1b3Q7LCAmcXVvdDtmb290ZXImcXVvdDs6JnF1b3Q7Jmx0O3NwYW4gY2xhc3MmI3gzRDtcXCZxdW90O2EtZGVjbGFyYXRpdmVcXCZxdW90OyBkYXRhLWFjdGlvbiYjeDNEO1xcJnF1b3Q7YS1wb3BvdmVyLWNsb3NlXFwmcXVvdDsgZGF0YS1hLXBvcG92ZXItY2xvc2UmI3gzRDtcXCZxdW90O3t9XFwmcXVvdDsmZ3Q7Jmx0O3NwYW4gY2xhc3MmI3gzRDtcXCZxdW90O2EtYnV0dG9uIGEtYnV0dG9uLXByaW1hcnlcXCZxdW90OyZndDsmbHQ7c3BhbiBjbGFzcyYjeDNEO1xcJnF1b3Q7YS1idXR0b24taW5uZXJcXCZxdW90OyZndDsmbHQ7YnV0dG9uIG5hbWUmI3gzRDtcXCZxdW90O2dsb3dEb25lQnV0dG9uXFwmcXVvdDsgY2xhc3MmI3gzRDtcXCZxdW90O2EtYnV0dG9uLXRleHRcXCZxdW90OyB0eXBlJiN4M0Q7XFwmcXVvdDtidXR0b25cXCZxdW90OyZndDtEb25lJmx0Oy9idXR0b24mZ3Q7Jmx0Oy9zcGFuJmd0OyZsdDsvc3BhbiZndDsmbHQ7L3NwYW4mZ3Q7JnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtDaG9vc2UgeW91ciBsb2NhdGlvbiZxdW90O30nIGRhdGEtYWN0aW9uPVwiYS1tb2RhbFwiPlxuICAgICAgICA8YSBpZD1cIm5hdi1nbG9iYWwtbG9jYXRpb24tcG9wb3Zlci1saW5rXCIgY2xhc3M9XCJuYXYtYSBuYXYtYS0yIGEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmUgbmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiIHRhYmluZGV4PVwiMFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdi1zcHJpdGUgbmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiIGlkPVwibmF2LXBhY2thcmQtZ2xvdy1sb2MtaWNvblwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBpZD1cImdsb3ctaW5ncmVzcy1ibG9ja1wiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibmF2LWxpbmUtMSBuYXYtcHJvZ3Jlc3NpdmUtY29udGVudFwiIGlkPVwiZ2xvdy1pbmdyZXNzLWxpbmUxXCI+XG4gICAgICAgICAgICAgICAgICAgRGVsaXZlciB0b1xuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm5hdi1saW5lLTIgbmF2LXByb2dyZXNzaXZlLWNvbnRlbnRcIiBpZD1cImdsb3ctaW5ncmVzcy1saW5lMlwiPlxuICAgICAgICAgICAgICAgICAgIEVneXB0XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvYT5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8aW5wdXQgZGF0YS1hZGRuZXdhZGRyZXNzPVwiYWRkLW5ld1wiIGlkPVwidW5pZmllZExvY2F0aW9uMUNsaWNrQWRkcmVzc1wiIG5hbWU9XCJkcm9wZG93bi1zZWxlY3Rpb25cIiB0eXBlPVwiaGlkZGVuXCIgdmFsdWU9XCJhZGQtbmV3XCIgY2xhc3M9XCJuYXYtcHJvZ3Jlc3NpdmUtYXR0cmlidXRlXCIgLz5cbiAgICAgICAgPGlucHV0IGRhdGEtYWRkbmV3YWRkcmVzcz1cImFkZC1uZXdcIiBpZD1cInViYlNoaXBUb1wiIG5hbWU9XCJkcm9wZG93bi1zZWxlY3Rpb24tdWJiXCIgdHlwZT1cImhpZGRlblwiIHZhbHVlPVwiYWRkLW5ld1wiIGNsYXNzPVwibmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiLz5cbiAgICAgICAgPGlucHV0IGlkPVwiZ2xvd1ZhbGlkYXRpb25Ub2tlblwiIG5hbWU9XCJnbG93LXZhbGlkYXRpb24tdG9rZW5cIiB0eXBlPVwiaGlkZGVuXCIgdmFsdWU9XCJnRTNjMlMrejZRZkw5aDFvVzBSSkRZaHZBNzh5RklUaXEwclpPK01BQUFBTUFBQUFBR0hiUXRseVlYY0FBQUFBXCIgY2xhc3M9XCJuYXYtcHJvZ3Jlc3NpdmUtYXR0cmlidXRlXCIvPlxuPC9kaXY+XG5cbjxkaXYgaWQ9XCJuYXYtZ2xvYmFsLWxvY2F0aW9uLXRvYXN0ZXItc2NyaXB0LWNvbnRhaW5lclwiIGNsYXNzPVwibmF2LXByb2dyZXNzaXZlLWNvbnRlbnRcIj5cbiAgICA8IS0tIE5BVllBQU4tR0xPVy1OQVYtVE9BU1RFUiAtLT5cbiAgICAgICAgICA8c2NyaXB0PlxuICAgICAgICAgICAgICBQLndoZW4oJ2dsb3ctdG9hc3Rlci1zdHJpbmdzJykuZXhlY3V0ZShmdW5jdGlvbihTKSB7XG4gICAgICAgICAgICAgICAgUy5sb2FkKHtcImdsb3ctdG9hc3Rlci1hZGRyZXNzLWNoYW5nZS1lcnJvclwiOlwiQW4gZXJyb3IgaGFzIG9jY3VycmVkIGFuZCB0aGUgYWRkcmVzcyBoYXMgbm90IGJlZW4gdXBkYXRlZC4gUGxlYXNlIHRyeSBhZ2Fpbi5cIixcImdsb3ctdG9hc3Rlci11bmtub3duLWVycm9yXCI6XCJBbiBlcnJvciBoYXMgb2NjdXJyZWQuIFBsZWFzZSB0cnkgYWdhaW4uXCJ9KTtcbiAgICAgICAgICAgICB9KTtcbiAgICAgICAgICA8L3NjcmlwdD5cbiAgICAgICAgICA8c2NyaXB0PlxuICAgICAgICAgICAgICBQLndoZW4oJ2dsb3ctdG9hc3Rlci1tYW5hZ2VyJykuZXhlY3V0ZShmdW5jdGlvbihNKSB7XG4gICAgICAgICAgICAgICAgTS5jcmVhdGUoe1wicGFnZVR5cGVcIjpcIlNlYXJjaFwiLFwiYWlzVHJhbnNpdGlvblN0YXRlXCI6XCJpblwiLFwicmFuY29yTG9jYXRpb25Tb3VyY2VcIjpcIlJFQUxNX0RFRkFVTFRcIn0pXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIDwvc2NyaXB0PlxuPC9kaXY+XG5cbiAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9J25hdi1maWxsJz5cbiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnRtcD0rbmV3IERhdGUoKTs8L3NjcmlwdD5cbjxkaXYgaWQ9XCJuYXYtc2VhcmNoXCI+XG4gIDxkaXYgaWQ9XCJuYXYtYmFyLWxlZnRcIj48L2Rpdj5cbiAgPGZvcm1cbiAgICBpZD1cIm5hdi1zZWFyY2gtYmFyLWZvcm1cIlxuICAgIGFjY2VwdC1jaGFyc2V0PVwidXRmLThcIlxuICAgIGFjdGlvbj1cIi9zL3JlZj1uYl9zYl9ub3NzXCJcbiAgICBjbGFzcz1cIm5hdi1zZWFyY2hiYXIgbmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiXG4gICAgbWV0aG9kPVwiR0VUXCJcbiAgICBuYW1lPVwic2l0ZS1zZWFyY2hcIlxuICAgIHJvbGU9XCJzZWFyY2hcIlxuICA+XG5cbiAgICA8ZGl2IGNsYXNzPVwibmF2LWxlZnRcIj5cbiAgICAgIDxkaXYgaWQ9XCJuYXYtc2VhcmNoLWRyb3Bkb3duLWNhcmRcIj5cbiAgICAgICAgXG4gIDxkaXYgY2xhc3M9XCJuYXYtc2VhcmNoLXNjb3BlIG5hdi1zcHJpdGVcIj5cbiAgICA8ZGl2IGNsYXNzPVwibmF2LXNlYXJjaC1mYWNhZGVcIiBkYXRhLXZhbHVlPVwic2VhcmNoLWFsaWFzPWFwc1wiPlxuICAgICAgPHNwYW4gaWQ9XCJuYXYtc2VhcmNoLWxhYmVsLWlkXCIgY2xhc3M9XCJuYXYtc2VhcmNoLWxhYmVsIG5hdi1wcm9ncmVzc2l2ZS1jb250ZW50XCI+QWxsPC9zcGFuPlxuICAgICAgPGkgY2xhc3M9XCJuYXYtaWNvblwiPjwvaT5cbiAgICA8L2Rpdj5cbiAgICA8c3BhbiBpZD1cInNlYXJjaERyb3Bkb3duRGVzY3JpcHRpb25cIiBjbGFzcz1cIm5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlNlbGVjdCB0aGUgZGVwYXJ0bWVudCB5b3Ugd2FudCB0byBzZWFyY2ggaW48L3NwYW4+XG4gICAgPHNlbGVjdFxuICAgICAgYXJpYS1kZXNjcmliZWRieT1cInNlYXJjaERyb3Bkb3duRGVzY3JpcHRpb25cIlxuICAgICAgY2xhc3M9XCJuYXYtc2VhcmNoLWRyb3Bkb3duIHNlYXJjaFNlbGVjdCBuYXYtcHJvZ3Jlc3NpdmUtYXR0cnVidXRlIG5hdi1wcm9ncmVzc2l2ZS1zZWFyY2gtZHJvcGRvd25cIlxuICAgICAgZGF0YS1uYXYtZGlnZXN0PVwieW9DMFc0Y2JMaUtWdHV6RTl1bTNTalBQYy9nPVwiXG4gICAgICBkYXRhLW5hdi1zZWxlY3RlZD1cIjBcIlxuICAgICAgaWQ9XCJzZWFyY2hEcm9wZG93bkJveFwiXG4gICAgICBuYW1lPVwidXJsXCJcbiAgICAgIHN0eWxlPVwiZGlzcGxheTogYmxvY2s7XCJcbiAgICAgIHRhYmluZGV4PVwiMFwiXG4gICAgICB0aXRsZT1cIlNlYXJjaCBpblwiXG4gICAgPlxuICAgICAgICA8b3B0aW9uIHNlbGVjdGVkPVwic2VsZWN0ZWRcIiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1hcHNcIj5BbGwgRGVwYXJ0bWVudHM8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1hcnRzLWNyYWZ0cy1pbnRsLXNoaXBcIj5BcnRzICYgQ3JhZnRzPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9YXV0b21vdGl2ZS1pbnRsLXNoaXBcIj5BdXRvbW90aXZlPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9YmFieS1wcm9kdWN0cy1pbnRsLXNoaXBcIj5CYWJ5PC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9YmVhdXR5LWludGwtc2hpcFwiPkJlYXV0eSAmIFBlcnNvbmFsIENhcmU8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1zdHJpcGJvb2tzLWludGwtc2hpcFwiPkJvb2tzPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZmFzaGlvbi1ib3lzLWludGwtc2hpcFwiPkJveXMnIEZhc2hpb248L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1jb21wdXRlcnMtaW50bC1zaGlwXCI+Q29tcHV0ZXJzPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZGVhbHMtaW50bC1zaGlwXCI+RGVhbHM8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1kaWdpdGFsLW11c2ljXCI+RGlnaXRhbCBNdXNpYzwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWVsZWN0cm9uaWNzLWludGwtc2hpcFwiPkVsZWN0cm9uaWNzPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZmFzaGlvbi1naXJscy1pbnRsLXNoaXBcIj5HaXJscycgRmFzaGlvbjwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWhwYy1pbnRsLXNoaXBcIj5IZWFsdGggJiBIb3VzZWhvbGQ8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1raXRjaGVuLWludGwtc2hpcFwiPkhvbWUgJiBLaXRjaGVuPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9aW5kdXN0cmlhbC1pbnRsLXNoaXBcIj5JbmR1c3RyaWFsICYgU2NpZW50aWZpYzwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWRpZ2l0YWwtdGV4dFwiPktpbmRsZSBTdG9yZTwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWx1Z2dhZ2UtaW50bC1zaGlwXCI+THVnZ2FnZTwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWZhc2hpb24tbWVucy1pbnRsLXNoaXBcIj5NZW4ncyBGYXNoaW9uPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9bW92aWVzLXR2LWludGwtc2hpcFwiPm1vdmllcy10di1pbnRsLXNoaXA8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1tdXNpYy1pbnRsLXNoaXBcIj5NdXNpYywgQ0RzICYgVmlueWw8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz1wZXRzLWludGwtc2hpcFwiPlBldCBTdXBwbGllczwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPWluc3RhbnQtdmlkZW9cIj5QcmltZSBWaWRlbzwvb3B0aW9uPlxuICAgICAgICA8b3B0aW9uIHZhbHVlPVwic2VhcmNoLWFsaWFzPXNvZnR3YXJlLWludGwtc2hpcFwiPlNvZnR3YXJlPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9c3BvcnRpbmctaW50bC1zaGlwXCI+U3BvcnRzICYgT3V0ZG9vcnM8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz10b29scy1pbnRsLXNoaXBcIj5Ub29scyAmIEhvbWUgSW1wcm92ZW1lbnQ8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz10b3lzLWFuZC1nYW1lcy1pbnRsLXNoaXBcIj5Ub3lzICYgR2FtZXM8L29wdGlvbj5cbiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cInNlYXJjaC1hbGlhcz12aWRlb2dhbWVzLWludGwtc2hpcFwiPlZpZGVvIEdhbWVzPC9vcHRpb24+XG4gICAgICAgIDxvcHRpb24gdmFsdWU9XCJzZWFyY2gtYWxpYXM9ZmFzaGlvbi13b21lbnMtaW50bC1zaGlwXCI+V29tZW4ncyBGYXNoaW9uPC9vcHRpb24+XG4gICAgPC9zZWxlY3Q+XG4gIDwvZGl2PlxuXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwibmF2LWZpbGxcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJuYXYtc2VhcmNoLWZpZWxkIFwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgaWQ9XCJ0d290YWJzZWFyY2h0ZXh0Ym94XCJcbiAgICAgICAgICB2YWx1ZT1cImlwaG9uZVwiXG4gICAgICAgICAgbmFtZT1cImZpZWxkLWtleXdvcmRzXCJcbiAgICAgICAgICBhdXRvY29tcGxldGU9XCJvZmZcIlxuICAgICAgICAgIHBsYWNlaG9sZGVyPVwiXCJcbiAgICAgICAgICBjbGFzcz1cIm5hdi1pbnB1dCBuYXYtcHJvZ3Jlc3NpdmUtYXR0cmlidXRlXCJcbiAgICAgICAgICBkaXI9XCJhdXRvXCJcbiAgICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICAgIGFyaWEtbGFiZWw9XCJTZWFyY2hcIlxuICAgICAgICA+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJuYXYtaXNzLWF0dGFjaFwiPjwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJuYXYtcmlnaHRcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJuYXYtc2VhcmNoLXN1Ym1pdCBuYXYtc3ByaXRlXCI+XG4gICAgICAgIDxzcGFuIGlkPVwibmF2LXNlYXJjaC1zdWJtaXQtdGV4dFwiIGNsYXNzPVwibmF2LXNlYXJjaC1zdWJtaXQtdGV4dCBuYXYtc3ByaXRlIG5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIiBhcmlhLWxhYmVsPVwiR29cIj5cbiAgICAgICAgICA8aW5wdXQgaWQ9XCJuYXYtc2VhcmNoLXN1Ym1pdC1idXR0b25cIiB0eXBlPVwic3VibWl0XCIgY2xhc3M9XCJuYXYtaW5wdXQgbmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiIHZhbHVlPVwiR29cIiB0YWJpbmRleD1cIjBcIj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZm9ybT5cbjwvZGl2PlxuPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPndpbmRvdy5uYXZtZXQucHVzaCh7a2V5OidTZWFyY2gnLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cubmF2bWV0LnRtcH0pOzwvc2NyaXB0PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0nbmF2LXJpZ2h0Jz5cbiAgICAgICAgICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+d2luZG93Lm5hdm1ldC50bXA9K25ldyBEYXRlKCk7PC9zY3JpcHQ+XG4gICAgICAgICAgPGRpdiBpZD0nbmF2LXRvb2xzJyBjbGFzcz1cImxheW91dFRvb2xiYXJQYWRkaW5nXCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICA8YSBocmVmPVwiL2dwL2N1c3RvbWVyLXByZWZlcmVuY2VzL3NlbGVjdC1sYW5ndWFnZS9yZWY9dG9wbmF2X2xhbmdfYWlzP2llPVVURjgmcHJlZmVyZW5jZXNSZXR1cm5Vcmw9JTJGXCIgaWQ9XCJpY3AtbmF2LWZseW91dFwiIGNsYXNzPVwibmF2LWEgbmF2LWEtMiBpY3AtbGluay1zdHlsZS0yXCIgYXJpYS1sYWJlbD1cIkNob29zZSBhIGxhbmd1YWdlIGZvciBzaG9wcGluZy5cIj5cbiAgICA8c3BhbiBjbGFzcz1cImljcC1uYXYtbGluay1pbm5lclwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJuYXYtbGluZS0xXCI+XG4gICAgICA8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz1cIm5hdi1saW5lLTJcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJpY3AtbmF2LWZsYWcgaWNwLW5hdi1mbGFnLXVzXCI+PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz1cIm5hdi1pY29uIG5hdi1hcnJvd1wiPjwvc3Bhbj5cbiAgICAgIDwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gIDwvYT5cblxuICAgICAgICAgICAgICBcbiAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluP29wZW5pZC5wYXBlLm1heF9hdXRoX2FnZT0wJm9wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRnMlMkYlM0ZfZW5jb2RpbmclM0RVVEY4JTI2ayUzRGlwaG9uZSUyNnBhZ2UlM0Q0JTI2cWlkJTNEMTY0MTMwMzMzMyUyNnJlZiUzRHNyX3BnXzQlMjZzcHJlZml4JTNEaXBob25lJTI1MkNhcHMlMjUyQzI2MiUyNnJlZl8lM0RuYXZfeWFfc2lnbmluJm9wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJm9wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0Jm9wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAmXCIgY2xhc3M9XCJuYXYtYSBuYXYtYS0yICAgbmF2LXByb2dyZXNzaXZlLWF0dHJpYnV0ZVwiIGRhdGEtbmF2LXJlZj1cIm5hdl95YV9zaWduaW5cIiAgZGF0YS1uYXYtcm9sZT1cInNpZ25pblwiIGRhdGEtdXgtanEtbW91c2VlbnRlcj1cInRydWVcIiBpZD1cIm5hdi1saW5rLWFjY291bnRMaXN0XCIgdGFiaW5kZXg9XCIwXCIgZGF0YS1jc2EtYy10eXBlPVwibGlua1wiIGRhdGEtY3NhLWMtc2xvdC1pZD1cIm5hdi1saW5rLWFjY291bnRMaXN0XCIgZGF0YS1jc2EtYy1jb250ZW50LWlkPVwibmF2X3lhX3NpZ25pblwiPlxuICA8ZGl2IGNsYXNzPVwibmF2LWxpbmUtMS1jb250YWluZXJcIj48c3BhbiBpZD1cIm5hdi1saW5rLWFjY291bnRMaXN0LW5hdi1saW5lLTFcIiBjbGFzcz1cIm5hdi1saW5lLTEgbmF2LXByb2dyZXNzaXZlLWNvbnRlbnRcIj5IZWxsbywgU2lnbiBpbjwvc3Bhbj48L2Rpdj5cbiAgPHNwYW4gY2xhc3M9XCJuYXYtbGluZS0yIFwiPkFjY291bnQgJiBMaXN0czxzcGFuIGNsYXNzPVwibmF2LWljb24gbmF2LWFycm93XCI+PC9zcGFuPlxuICA8L3NwYW4+XG48L2E+XG5cbiAgICAgICAgICAgICAgXG48YSBocmVmPVwiL2dwL2Nzcy9vcmRlci1oaXN0b3J5P3JlZl89bmF2X29yZGVyc19maXJzdFwiIGNsYXNzPVwibmF2LWEgbmF2LWEtMiAgIG5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIiBpZD1cIm5hdi1vcmRlcnNcIiB0YWJpbmRleD1cIjBcIj5cbiAgPHNwYW4gY2xhc3M9XCJuYXYtbGluZS0xXCI+UmV0dXJuczwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9XCJuYXYtbGluZS0yXCI+JiBPcmRlcnM8L3NwYW4+XG48L2E+XG5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICA8YSBocmVmPVwiL2dwL2NhcnQvdmlldy5odG1sP3JlZl89bmF2X2NhcnRcIiBhcmlhLWxhYmVsPVwiMCBpdGVtcyBpbiBjYXJ0XCIgY2xhc3M9XCJuYXYtYSBuYXYtYS0yIG5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIiBpZD1cIm5hdi1jYXJ0XCI+XG4gICAgPGRpdiBpZD1cIm5hdi1jYXJ0LWNvdW50LWNvbnRhaW5lclwiPlxuICAgICAgPHNwYW4gaWQ9XCJuYXYtY2FydC1jb3VudFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwibmF2LWNhcnQtY291bnQgbmF2LWNhcnQtMCBuYXYtcHJvZ3Jlc3NpdmUtYXR0cmlidXRlIG5hdi1wcm9ncmVzc2l2ZS1jb250ZW50XCI+MDwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPVwibmF2LWNhcnQtaWNvbiBuYXYtc3ByaXRlXCI+PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9XCJuYXYtY2FydC10ZXh0LWNvbnRhaW5lclwiIGNsYXNzPVwiIG5hdi1wcm9ncmVzc2l2ZS1hdHRyaWJ1dGVcIj5cbiAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwibmF2LWxpbmUtMVwiPlxuICAgICAgICBcbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGNsYXNzPVwibmF2LWxpbmUtMlwiPlxuICAgICAgICBDYXJ0XG4gICAgICAgIDxzcGFuIGNsYXNzPVwibmF2LWljb24gbmF2LWFycm93XCI+PC9zcGFuPlxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuICA8L2E+XG5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+d2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6J1Rvb2xzJyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC50bXB9KTs8L3NjcmlwdD5cblxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBpZD0nbmF2LW1haW4nIGNsYXNzPSduYXYtc3ByaXRlJz5cbiAgICAgIDxkaXYgY2xhc3M9J25hdi1sZWZ0Jz5cbiAgICAgICAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPndpbmRvdy5uYXZtZXQudG1wPStuZXcgRGF0ZSgpOzwvc2NyaXB0PlxuICA8YSBocmVmPVwiL2dwL3NpdGUtZGlyZWN0b3J5P3JlZl89bmF2X2VtX2pzX2Rpc2FibGVkXCIgaWQ9XCJuYXYtaGFtYnVyZ2VyLW1lbnVcIiByb2xlPVwiYnV0dG9uXCIgYXJpYS1sYWJlbD1cIk9wZW4gTWVudVwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtc2xvdC1pZD1cIkhhbWJ1cmdlck1lbnVEZXNrdG9wXCJcbiAgZGF0YS1jc2EtYy1pbnRlcmFjdGlvbi1ldmVudHM9XCJjbGlja1wiID5cbiAgICA8aSBjbGFzcz1cImhtLWljb24gbmF2LXNwcml0ZVwiPjwvaT5cbiAgICA8c3BhbiBjbGFzcz1cImhtLWljb24tbGFiZWxcIj5BbGw8L3NwYW4+XG4gIDwvYT5cbiAgXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbiAgdmFyIGhtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuYXYtaGFtYnVyZ2VyLW1lbnVcIik7XG4gIGhtZW51LnNldEF0dHJpYnV0ZShcImhyZWZcIiwgXCJqYXZhc2NyaXB0OiB2b2lkKDApXCIpO1xuICB3aW5kb3cubmF2SGFtYnVyZ2VyTWV0cmljTG9nZ2VyID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKHdpbmRvdy51ZSAmJiB3aW5kb3cudWUuY291bnQpIHtcbiAgICAgIHZhciBtZXRyaWNOYW1lID0gXCJOYXY6SG1lbnU6SWNvbkNsaWNrQWN0aW9uUGVuZGluZ1wiO1xuICAgICAgd2luZG93LnVlLmNvdW50KG1ldHJpY05hbWUsICh1ZS5jb3VudChtZXRyaWNOYW1lKSB8fCAwKSArIDEpO1xuICAgIH1cbiAgICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoXCJuYXZITWVudUljb25DbGlja2VkXCIsITApO1xuICAgIHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZShcIm5hdkhNZW51SWNvbkNsaWNrZWROb3RSZWFkeVRpbWVTdGFtcFwiLCBEYXRlLm5vdygpKTtcbiAgfTtcbiAgaG1lbnUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHdpbmRvdy5uYXZIYW1idXJnZXJNZXRyaWNMb2dnZXIpO1xuICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2hhbWJ1cmdlck1lbnVJY29uQXZhaWxhYmxlT25Mb2FkJywgZmFsc2UpO1xuPC9zY3JpcHQ+ICBcbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnB1c2goe2tleTonSGFtYnVyZ2VyTWVudUljb24nLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cubmF2bWV0LnRtcH0pOzwvc2NyaXB0PlxuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0nbmF2LWZpbGwnPlxuICAgICAgICBcbiAgICAgICAgICBcbiA8ZGl2IGlkPVwibmF2LXNob3BcIj5cbiA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGlkPSduYXYteHNob3AtY29udGFpbmVyJz5cbiAgICAgICAgICAgIDxkaXYgaWQ9J25hdi14c2hvcCcgY2xhc3M9XCJuYXYtcHJvZ3Jlc3NpdmUtY29udGVudFwiPlxuICAgICAgICAgICAgICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+d2luZG93Lm5hdm1ldC50bXA9K25ldyBEYXRlKCk7PC9zY3JpcHQ+XG48YSBocmVmPVwiL2dwL2dvbGRib3g/cmVmXz1uYXZfY3NfZ2JcIiBjbGFzcz1cIm5hdi1hICBcIiB0YWJpbmRleD1cIjBcIiBkYXRhLWNzYS1jLXR5cGU9XCJsaW5rXCIgZGF0YS1jc2EtYy1zbG90LWlkPVwibmF2X2NzXzBcIiBkYXRhLWNzYS1jLWNvbnRlbnQtaWQ9XCJuYXZfY3NfZ2JcIj5Ub2RheSdzIERlYWxzPC9hPlxuXG48YSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sP25vZGVJZD01MDg1MTAmcmVmXz1uYXZfY3NfY3VzdG9tZXJzZXJ2aWNlXCIgY2xhc3M9XCJuYXYtYSAgXCIgdGFiaW5kZXg9XCIwXCIgZGF0YS1jc2EtYy10eXBlPVwibGlua1wiIGRhdGEtY3NhLWMtc2xvdC1pZD1cIm5hdl9jc18xXCIgZGF0YS1jc2EtYy1jb250ZW50LWlkPVwibmF2X2NzX2N1c3RvbWVyc2VydmljZVwiPkN1c3RvbWVyIFNlcnZpY2U8L2E+XG5cbjxhIGhyZWY9XCIvZ3AvYnJvd3NlLmh0bWw/bm9kZT0xNjExNTkzMTAxMSZyZWZfPW5hdl9jc19yZWdpc3RyeVwiIGNsYXNzPVwibmF2LWEgIFwiIHRhYmluZGV4PVwiMFwiIGRhdGEtY3NhLWMtdHlwZT1cImxpbmtcIiBkYXRhLWNzYS1jLXNsb3QtaWQ9XCJuYXZfY3NfMlwiIGRhdGEtY3NhLWMtY29udGVudC1pZD1cIm5hdl9jc19yZWdpc3RyeVwiPlJlZ2lzdHJ5PC9hPlxuXG48YSBocmVmPVwiL2dpZnQtY2FyZHMvYi8/aWU9VVRGOCZub2RlPTIyMzgxOTIwMTEmcmVmXz1uYXZfY3NfZ2NcIiBjbGFzcz1cIm5hdi1hICBcIiB0YWJpbmRleD1cIjBcIiBkYXRhLWNzYS1jLXR5cGU9XCJsaW5rXCIgZGF0YS1jc2EtYy1zbG90LWlkPVwibmF2X2NzXzNcIiBkYXRhLWNzYS1jLWNvbnRlbnQtaWQ9XCJuYXZfY3NfZ2NcIj5HaWZ0IENhcmRzPC9hPlxuXG48YSBocmVmPVwiL2IvP19lbmNvZGluZz1VVEY4JmxkPUFaVVNTT0Etc2VsbCZub2RlPTEyNzY2NjY5MDExJnJlZl89bmF2X2NzX3NlbGxcIiBjbGFzcz1cIm5hdi1hICBcIiB0YWJpbmRleD1cIjBcIiBkYXRhLWNzYS1jLXR5cGU9XCJsaW5rXCIgZGF0YS1jc2EtYy1zbG90LWlkPVwibmF2X2NzXzRcIiBkYXRhLWNzYS1jLWNvbnRlbnQtaWQ9XCJuYXZfY3Nfc2VsbFwiPlNlbGw8L2E+XG5cbjxhIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9hY2Nlc3NpYmlsaXR5XCIgYXJpYS1sYWJlbD1cIkNsaWNrIHRvIGNhbGwgb3VyIERpc2FiaWxpdHkgQ3VzdG9tZXIgU3VwcG9ydCBsaW5lLCBvciByZWFjaCB1cyBkaXJlY3RseSBhdCAxLTg4OC0yODMtMTY3OFwiIGNsYXNzPVwibmF2LWhpZGRlbi1hcmlhICBcIiB0YWJpbmRleD1cIjBcIiAgZGF0YS1jc2EtYy10eXBlPVwibGlua1wiIGRhdGEtY3NhLWMtc2xvdC1pZD1cIm5hdl9jc181XCIgPkRpc2FiaWxpdHkgQ3VzdG9tZXIgU3VwcG9ydDwvYT5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnB1c2goe2tleTonQ3Jvc3NTaG9wJyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC50bXB9KTs8L3NjcmlwdD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0nbmF2LXJpZ2h0Jz5cbiAgICAgICAgICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+d2luZG93Lm5hdm1ldC50bXA9K25ldyBEYXRlKCk7PC9zY3JpcHQ+PCEtLSBOYXZ5YWFuIFNXTSAtLT5cbjxkaXYgaWQ9XCJuYXYtc3dtc2xvdFwiIGNsYXNzPVwibmF2LXN3bS10ZXh0LXdpZGdldFwiPlxuICA8YSBocmVmPVwiL2RlYWxzLz9fZW5jb2Rpbmc9VVRGOCZyZWZfPW5hdl9zd21fdW5kZWZpbmVkJnBmX3JkX3A9Njk0OWFjMzgtMzllMC00ZTc1LWFkOGMtYWJhNjRmOGI3ODhiJnBmX3JkX3M9bmF2LXNpdGV3aWRlLW1zZy10ZXh0LWV4cG9ydCZwZl9yZF90PTQyMDEmcGZfcmRfaT1uYXZiYXItNDIwMSZwZl9yZF9tPUFUVlBES0lLWDBERVImcGZfcmRfcj0xUTcwTTc4Q0NTOEFTOTlSTUNBOFwiIGlkPVwic3dtLWxpbmtcIiBjbGFzcz1cIm5hdl9hIG5hdi1zd20tdGV4dCBuYXYtcHJvZ3Jlc3NpdmUtYXR0cmlidXRlIG5hdi1wcm9ncmVzc2l2ZS1jb250ZW50XCI+TmV3IFllYXIsIG5ldyBkZWFsczwvYT5cbjwvZGl2PjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnB1c2goe2tleTonU1dNJyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC50bXB9KTs8L3NjcmlwdD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBpZD0nbmF2LXN1Ym5hdi10b2FzdGVyJz48L2Rpdj5cblxuICAgIFxuICAgIDxkaXYgaWQ9XCJuYXYtcHJvZ3Jlc3NpdmUtc3VibmF2XCI+XG4gICAgICBcbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgaWQ9J25hdi1mbHlvdXQtZXdjJyBhcmlhLWhpZGRlbj0ndHJ1ZScgdGFiaW5kZXg9Jy0xJyBjbGFzcz0nbmF2LWV3Yy1sYXp5LWFsaWduIG5hdi1ld2MtaGlkZS1oZWFkJz48ZGl2IGNsYXNzPSduYXYtZmx5b3V0LWJvZHkgZXdjLWJlYWNvbic+PGRpdiBjbGFzcz0nbmF2LWV3Yy1hcnJvdyc+PC9kaXY+PGRpdiBjbGFzcz0nbmF2LWV3Yy1jb250ZW50Jz48L2Rpdj48L2Rpdj48L2Rpdj48c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+XG4oZnVuY3Rpb24oKSB7XG4gIHZhciB2aWV3cG9ydFdpZHRoID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoIHx8XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggfHxcbiAgICAgIGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGg7XG4gIH07XG5cbiAgaWYgKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicpIHsgIHVldCgneDEnLCAnZXdjJywge3diOiAxfSk7IH1cblxuICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5ld2MnLCAoZnVuY3Rpb24oKSB7XG4gICAgdmFyIGNvbmZpZyA9IHtcImVuYWJsZVBlcnNpc3RlbnRcIjp0cnVlLFwidmlld3BvcnRXaWR0aEZvclBlcnNpc3RlbnRcIjoxNDAwLFwiaXNFV0NMb2dnaW5nXCI6MSxcImlzRVdDU3RhdGVFeHBhbmRlZFwiOnRydWUsXCJFV0NTdGF0ZVJlYXNvblwiOlwiZml4ZWRcIixcImlzU21hbGxTY3JlZW5FbmFibGVkXCI6dHJ1ZSxcImlzRnJlc2hDdXN0b21lclwiOmZhbHNlLFwiZXJyb3JDb250ZW50XCI6e1wiaHRtbFwiOlwiPGRpdiBjbGFzcz0nbmF2LWV3Yy1lcnJvcic+PHNwYW4gY2xhc3M9J25hdi10aXRsZSc+T29wcyE8L3NwYW4+PHAgY2xhc3M9J25hdi1wYXJhZ3JhcGgnPlRoZXJlJ3MgYSBwcm9ibGVtIGxvYWRpbmcgeW91ciBjYXJ0IHJpZ2h0IG5vdy48L3A+PGEgaHJlZj0nL2dwL2NhcnQvdmlldy5odG1sP3JlZl89bmF2X2Vycl9ld2NfdGltZW91dCcgY2xhc3M9J25hdi1hY3Rpb24tYnV0dG9uJz48c3BhbiBjbGFzcz0nbmF2LWFjdGlvbi1pbm5lcic+WW91ciBDYXJ0PC9zcGFuPjwvYT48L2Rpdj5cIn0sXCJ1cmxcIjpcIi9jYXJ0L2V3Yy9jb21wYWN0P2hvc3RQYWdlVHlwZT1TZWFyY2gmaG9zdFN1YlBhZ2VUeXBlPUxpc3QmaG9zdFBhZ2VSSUQ9MVE3ME03OENDUzhBUzk5Uk1DQTgmcHJlcmVuZGVyPTBcIixcImNhcnRDb3VudFwiOjAsXCJmcmVzaENhcnRDb3VudFwiOjAsXCJhbG1DYXJ0Q291bnRcIjowLFwiaXNDb21wYWN0Vmlld0VuYWJsZWRcIjp0cnVlLFwiaXNDb21wYWN0RVdDUmVuZGVyZWRcIjp0cnVlfTtcbiAgICB2YXIgaGFzQXVpID0gd2luZG93LlAgJiYgd2luZG93LlAuQVVJX0JVSUxEX0RBVEU7XG4gICAgdmFyIGlzUlRMRW5hYmxlZCA9IChkb2N1bWVudC5kaXIgPT09ICdydGwnKTtcbiAgICBjb25maWcucGlubmFibGUgPSBjb25maWcucGlubmFibGUgJiYgaGFzQXVpO1xuICAgIGNvbmZpZy5pc01pZ3JhdGlvblRyZWF0bWVudCA9IHRydWU7XG5cbiAgICBjb25maWcuZmx5b3V0ID0gKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG5hdmJlbHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmF2LWJlbHQnKTtcbiAgICAgIHZhciBuYXZDYXJ0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hdi1jYXJ0Jyk7XG4gICAgICB2YXIgZXdjRmx5b3V0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hdi1mbHlvdXQtZXdjJyk7XG4gICAgICB2YXIgcGVyc2lzdGVudENsYXNzT25Cb2R5ID0gJ25hdi1ld2MtcGVyc2lzdGVudC1ob3ZlciBuYXYtZXdjLWZ1bGwtaGVpZ2h0LXBlcnNpc3RlbnQtaG92ZXInO1xuICAgICAgdmFyIGZseW91dCA9IHt9O1xuXG4gICAgICB2YXIgZ2V0RG9jdW1lbnRTY3JvbGxUb3AgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCkgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7XG4gICAgICB9O1xuXG4gICAgICB2YXIgaXNXaW5kb3cgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdztcbiAgICAgIH07XG5cbiAgICAgIHZhciBnZXRXaW5kb3cgPSBmdW5jdGlvbihlbGVtKSB7XG4gICAgICAgIHJldHVybiBpc1dpbmRvdyhlbGVtKSA/IGVsZW0gOiBlbGVtLm5vZGVUeXBlID09PSA5ICYmIGVsZW0uZGVmYXVsdFZpZXc7XG4gICAgICB9O1xuXG4gICAgICB2YXIgZ2V0T2Zmc2V0ID0gZnVuY3Rpb24oZWxlbSkge1xuICAgICAgICBpZiAoZWxlbS5nZXRDbGllbnRSZWN0cyAmJiAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCkge1xuICAgICAgICAgIHJldHVybiB7dG9wOiAwfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3RcbiAgICAgICAgICA/IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgICAgICA6IHt0b3A6IDB9O1xuXG4gICAgICAgIGlmIChyZWN0LndpZHRoIHx8IHJlY3QuaGVpZ2h0KSB7XG4gICAgICAgICAgdmFyIGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcbiAgICAgICAgICB2YXIgd2luID0gZ2V0V2luZG93KGRvYyk7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQgLSBkb2MuZG9jdW1lbnRFbGVtZW50LmNsaWVudFRvcFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlY3Q7XG4gICAgICB9O1xuXG4gICAgICBmbHlvdXQuYWxpZ24gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIG5ld1RvcCA9IGdldE9mZnNldChuYXZiZWx0KS50b3AgLSBnZXREb2N1bWVudFNjcm9sbFRvcCgpO1xuICAgICAgICBld2NGbHlvdXQuc3R5bGUudG9wID0gKG5ld1RvcCA+IDAgPyBuZXdUb3AgKyAncHgnIDogMCk7XG4gICAgICB9O1xuXG4gICAgICBmbHlvdXQuaGlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpc1JUTEVuYWJsZWRcbiAgICAgICAgICA/IChld2NGbHlvdXQuc3R5bGUubGVmdCA9ICcnKVxuICAgICAgICAgIDogKGV3Y0ZseW91dC5zdHlsZS5yaWdodCA9ICcnKTtcbiAgICAgIH07XG5cbiAgICAgIGlmKHR5cGVvZiBjb25maWcuaXNDb21wYWN0RVdDUmVuZGVyZWQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAoY29uZmlnLmlzU21hbGxTY3JlZW5FbmFibGVkICYmIHZpZXdwb3J0V2lkdGgoKSA8IDE0MDApIHx8XG4gICAgICAgICAgKGNvbmZpZy5pc0NvbXBhY3RWaWV3RW5hYmxlZCAmJiB2aWV3cG9ydFdpZHRoKCkgPj0gMTQwMClcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29uZmlnLmlzQ29tcGFjdEVXQ1JlbmRlcmVkID0gdHJ1ZTtcbiAgICAgICAgICBjb25maWcuaXNFV0NTdGF0ZUV4cGFuZGVkID0gdHJ1ZTtcbiAgICAgICAgICBjb25maWcudXJsID0gY29uZmlnLnVybC5yZXBsYWNlKFwiL2dwL25hdmNhcnQvc2lkZWJhclwiLCBcIi9jYXJ0L2V3Yy9jb21wYWN0XCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbmZpZy5pc0NvbXBhY3RFV0NSZW5kZXJlZCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciB2aWV3cG9ydFF1YWxpZnlGb3JQZXJzaXN0ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gKGNvbmZpZy5pc0NvbXBhY3RFV0NSZW5kZXJlZClcbiAgICAgICAgICA/IHRydWVcbiAgICAgICAgICA6IHZpZXdwb3J0V2lkdGgoKSA+PSAxNDAwO1xuICAgICAgfVxuXG4gICAgICBmbHlvdXQuaGFzUXVhbGlmaWVkVmlld3BvcnRGb3JQZXJzaXN0ZW50ID0gdmlld3BvcnRRdWFsaWZ5Rm9yUGVyc2lzdGVudDtcblxuICAgICAgdmFyIGdldEVXQ1JpZ2h0T2Zmc2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghY29uZmlnLmlzQ29tcGFjdEVXQ1JlbmRlcmVkKSB7XG4gICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgJG5hdmJlbHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmF2LWJlbHQnKTtcbiAgICAgICAgaWYgKCRuYXZiZWx0ID09PSB1bmRlZmluZWQgfHwgJG5hdmJlbHQgPT09IG51bGwpIHtcbiAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBFV0NDb21wYWN0Vmlld1dpZHRoID0gKGNvbmZpZy5pc1dpZGVyQ29tcGFjdEVXQ1JlbmRlcmVkICAmJiB2aWV3cG9ydFdpZHRoKCkgPj0gMTI4MCkgPyAxMzAgOiAxMDA7XG4gICAgICAgIHZhciBzY3JvbGxMZWZ0ID0gKHdpbmRvdy5wYWdlWE9mZnNldCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgID8gd2luZG93LnBhZ2VYT2Zmc2V0XG4gICAgICAgICAgOiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50IHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZSB8fCBkb2N1bWVudC5ib2R5KS5zY3JvbGxMZWZ0O1xuICAgICAgICB2YXIgc2Nyb2xsWEF4aXMgPSBNYXRoLmFicyhzY3JvbGxMZWZ0KTtcbiAgICAgICAgdmFyIHdpbmRvd1dpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoO1xuICAgICAgICB2YXIgbmF2YmVsdFdpZHRoID0gJG5hdmJlbHQub2Zmc2V0V2lkdGg7XG4gICAgICAgIHZhciBpc1BhcnRPZk5hdmJhck5vdFZpc2libGUgPSAobmF2YmVsdFdpZHRoICsgRVdDQ29tcGFjdFZpZXdXaWR0aCkgPiB3aW5kb3dXaWR0aDtcblxuICAgICAgICBpZiAoaXNQYXJ0T2ZOYXZiYXJOb3RWaXNpYmxlKSB7XG4gICAgICAgICAgcmV0dXJuIDAgLSAobmF2YmVsdFdpZHRoIC0gc2Nyb2xsWEF4aXMgLSB3aW5kb3dXaWR0aCArIEVXQ0NvbXBhY3RWaWV3V2lkdGgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZseW91dC5nZXRFV0NSaWdodE9mZnNldENzc1Byb3BlcnR5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZ2V0RVdDUmlnaHRPZmZzZXQoKSArICdweCc7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb25maWcuaXNDb21wYWN0RVdDUmVuZGVyZWQpIHtcbiAgICAgICAgcGVyc2lzdGVudENsYXNzT25Cb2R5ID0gJ25hdi1ld2MtcGVyc2lzdGVudC1ob3ZlciBuYXYtZXdjLWNvbXBhY3Qtdmlldyc7XG4gICAgICAgIGlmIChjb25maWcuaXNXaWRlckNvbXBhY3RFV0NSZW5kZXJlZCkgeyBwZXJzaXN0ZW50Q2xhc3NPbkJvZHkgKz0gJyBuYXYtZXdjLXdpZGVyLWNvbXBhY3Qtdmlldyc7IH1cbiAgICAgIH1cblxuICAgICAgZmx5b3V0LnNob3cgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaXNSVExFbmFibGVkXG4gICAgICAgICAgPyAoZXdjRmx5b3V0LnN0eWxlLmxlZnQgPSBmbHlvdXQuZ2V0RVdDUmlnaHRPZmZzZXRDc3NQcm9wZXJ0eSgpKVxuICAgICAgICAgIDogKGV3Y0ZseW91dC5zdHlsZS5yaWdodCA9IGZseW91dC5nZXRFV0NSaWdodE9mZnNldENzc1Byb3BlcnR5KCkpO1xuICAgICAgfTtcblxuICAgICAgdmFyIGlzSU9TRGV2aWNlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAoL2lQYWR8aVBob25lfGlQb2QvLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSB8fFxuICAgICAgICAgICAgICAgIChuYXZpZ2F0b3IucGxhdGZvcm0gPT09ICdNYWNJbnRlbCcgJiYgbmF2aWdhdG9yLm1heFRvdWNoUG9pbnRzID4gMSkpICYmXG4gICAgICAgICAgICAgICAgIXdpbmRvdy5NU1N0cmVhbTtcbiAgICAgIH1cblxuICAgICAgdmFyIGNoZWNrRm9yUGVyc2lzdGVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoIWhhc0F1aSkge1xuICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogZmFsc2UsIHJlYXNvbjogJ25vQXVpJyB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICghY29uZmlnLmVuYWJsZVBlcnNpc3RlbnQpIHtcbiAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IGZhbHNlLCByZWFzb246ICdjb25maWcnIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF2aWV3cG9ydFF1YWxpZnlGb3JQZXJzaXN0ZW50KCkpIHtcbiAgICAgICAgICByZXR1cm4geyByZXN1bHQ6IGZhbHNlLCByZWFzb246ICd2aWV3cG9ydCcgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNJT1NEZXZpY2UoKSkge1xuICAgICAgICAgIHJldHVybiB7IHJlc3VsdDogZmFsc2UsIHJlYXNvbjogJ2lPUycgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWNvbmZpZy5jYXJ0Q291bnQgPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiBmYWxzZSwgcmVhc29uOiAnZW1wdHljYXJ0JyB9O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgcmVzdWx0OiB0cnVlIH07XG4gICAgICB9O1xuXG4gICAgICBmbHlvdXQuYWJsZVRvUGVyc2lzdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY2hlY2tGb3JQZXJzaXN0ZW50KCkucmVzdWx0O1xuICAgICAgfTtcblxuICAgICAgdmFyIHBlcnNpc3RlbnRDbGFzc1JlZ0V4cCA9ICcoPzpefFxcXFxzKScgKyBwZXJzaXN0ZW50Q2xhc3NPbkJvZHkgKyAnKD8hXFxcXFMpJztcbiAgICAgIGZseW91dC5hcHBseVBhZ2VMYXlvdXRGb3JQZXJzaXN0ZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICghZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZS5tYXRjaCggbmV3IFJlZ0V4cChwZXJzaXN0ZW50Q2xhc3NSZWdFeHApICkpIHtcbiAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lICs9ICcgJyArIHBlcnNpc3RlbnRDbGFzc09uQm9keTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgZmx5b3V0LnVuYXBwbHlQYWdlTGF5b3V0Rm9yUGVyc2lzdGVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKCBuZXcgUmVnRXhwKHBlcnNpc3RlbnRDbGFzc1JlZ0V4cCwgJ2cnKSwgJycpO1xuICAgICAgfTtcblxuICAgICAgZmx5b3V0LnBlcnNpc3QgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZmx5b3V0LmFwcGx5UGFnZUxheW91dEZvclBlcnNpc3RlbnQoKTtcbiAgICAgICAgZmx5b3V0LnNob3coKTtcbiAgICAgICAgaWYgKGNvbmZpZy5pc0NvbXBhY3RFV0NSZW5kZXJlZCkge1xuICAgICAgICAgIGZseW91dC5hbGlnbigpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBmbHlvdXQudW5wZXJzaXN0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGZseW91dC51bmFwcGx5UGFnZUxheW91dEZvclBlcnNpc3RlbnQoKTtcbiAgICAgICAgZmx5b3V0LmhpZGUoKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciByZXNpemVDYWxsYmFjayA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoZmx5b3V0LmFibGVUb1BlcnNpc3QoKSkge1xuICAgICAgICAgIGZseW91dC5wZXJzaXN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgZmx5b3V0LnVucGVyc2lzdCgpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBmbHlvdXQuYmluZEV2ZW50cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAod2luZG93LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgcmVzaXplQ2FsbGJhY2ssIGZhbHNlKTtcbiAgICAgICAgICBpZiAoY29uZmlnLmlzQ29tcGFjdEVXQ1JlbmRlcmVkKSB7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZmx5b3V0LmFsaWduLCBmYWxzZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBmbHlvdXQudW5iaW5kRXZlbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZXNpemVDYWxsYmFjaywgZmFsc2UpO1xuICAgICAgICAgIGlmIChjb25maWcuaXNDb21wYWN0RVdDUmVuZGVyZWQpIHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmbHlvdXQuYWxpZ24sIGZhbHNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHZhciBwZXJzaXN0ZW50Q2hlY2sgPSBjaGVja0ZvclBlcnNpc3RlbnQoKTtcblxuICAgICAgaWYgKHBlcnNpc3RlbnRDaGVjay5yZXN1bHQpIHtcbiAgICAgICAgZmx5b3V0LnBlcnNpc3QoKTtcbiAgICAgICAgaWYgKHdpbmRvdy51ZSAmJiB1ZS50YWcpIHtcbiAgICAgICAgICB1ZS50YWcoJ2V3YzpwZXJzaXN0Jyk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh3aW5kb3cudWUgJiYgdWUudGFnKSB7XG4gICAgICAgICAgdWUudGFnKCdld2M6dW5wZXJzaXN0Jyk7XG4gICAgICAgICAgaWYgKHBlcnNpc3RlbnRDaGVjay5yZWFzb24gPT09ICdub0F1aScpIHtcbiAgICAgICAgICAgIHVlLnRhZygnZXdjOnVucGVyc2lzdDpub0F1aScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocGVyc2lzdGVudENoZWNrLnJlYXNvbiA9PT0gJ3ZpZXdwb3J0Jykge1xuICAgICAgICAgICAgdWUudGFnKCdld2M6dW5wZXJzaXN0OnZpZXdwb3J0Jyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChwZXJzaXN0ZW50Q2hlY2sucmVhc29uID09PSAnZW1wdHljYXJ0Jykge1xuICAgICAgICAgICAgdWUudGFnKCdld2M6dW5wZXJzaXN0OmVtcHR5Y2FydCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocGVyc2lzdGVudENoZWNrLnJlYXNvbiA9PT0gJ2lPUycpIHtcbiAgICAgICAgICAgIHVlLnRhZygnZXdjOnVucGVyc2lzdDppT1MnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHdpbmRvdy51ZSAmJiB1ZS50YWcpICB7XG4gICAgICAgIGlmIChmbHlvdXQuaGFzUXVhbGlmaWVkVmlld3BvcnRGb3JQZXJzaXN0ZW50KCkpIHtcbiAgICAgICAgICB1ZS50YWcoJ2V3YzpidmlldycpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHVlLnRhZygnZXdjOnN2aWV3Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZseW91dC5iaW5kRXZlbnRzKCk7XG5cbiAgICAgIHJldHVybiBmbHlvdXQ7XG4gICAgfSgpKTtcblxuICAgIHJldHVybiBjb25maWc7XG4gIH0oKSkpO1xuXG4gIGlmICh0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdWV0KCd4MicsICdld2MnLCB7d2I6IDF9KTtcbiAgICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS53aGVuKCduYXZDRicpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICAgICB1ZXQoJ2JiJywgJ2V3YycsIHt3YjogMX0pO1xuICAgIH0pO1xuICB9XG5cbiAgaWYgKHdpbmRvdy51ZSAmJiB1ZS50YWcpIHtcbiAgICB1ZS50YWcoJ2V3YycpO1xuICAgIHVlLnRhZygnZXdjOnVucmVjJyk7XG4gICAgdWUudGFnKCdld2M6Y2FydHNpemU6MCcpO1xuXG4gICAgaWYgKCB3aW5kb3cuUCAmJiB3aW5kb3cuUC5BVUlfQlVJTERfREFURSApIHtcbiAgICAgIHVlLnRhZygnZXdjOmF1aScpO1xuICAgIH0gZWxzZSB7XG4gICAgICB1ZS50YWcoJ2V3Yzpub0F1aScpO1xuICAgIH1cbiAgfVxufSgpKTtcbjwvc2NyaXB0PlxuICA8L2Rpdj5cblxuICBcbiAgXG5cbjwvaGVhZGVyPlxuXG5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0LnB1c2goe2tleTonTmF2QmFyJyxlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93Lm5hdm1ldC5tYWlufSk7PC9zY3JpcHQ+XG5cblxuPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gIGlmICh3aW5kb3cudWVfdDApIHtcbiAgICB3aW5kb3cubmF2bWV0LnB1c2goe2tleTpcIk5hdk1haW5QYWludEVuZFwiLGVuZDorbmV3IERhdGUoKSxiZWdpbjp3aW5kb3cudWVfdDB9KTtcbiAgICB3aW5kb3cubmF2bWV0LnB1c2goe2tleTpcIk5hdkZpcnN0UGFpbnRFbmRcIixlbmQ6K25ldyBEYXRlKCksYmVnaW46d2luZG93LnVlX3QwfSk7XG4gIH1cbjwvc2NyaXB0PlxuXG5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz5cbiAgICA8IS0tXG4gICAgXG4gICAgd2luZG93LiROYXYgJiYgJE5hdi53aGVuKFwiZGF0YVwiKS5ydW4oZnVuY3Rpb24oZGF0YSkgeyBkYXRhKHtcImZyZXNoVGltZW91dFwiOntcInRlbXBsYXRlXCI6e1wibmFtZVwiOlwiZmx5b3V0RXJyb3JcIixcImRhdGFcIjp7XCJlcnJvclwiOntcInRpdGxlXCI6XCI8c3R5bGU+I25hdi1mbHlvdXQtZnJlc2h7d2lkdGg6MjY5cHg7cGFkZGluZzowO30jbmF2LWZseW91dC1mcmVzaCAubmF2LWZseW91dC1jb250ZW50e3BhZGRpbmc6MDt9PC9zdHlsZT48YSBocmVmPScvYW1hem9uZnJlc2gnPjxpbWcgc3JjPSdodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvb21haGEvaW1hZ2VzL3lvZGEvZmx5b3V0XzcyZHBpLl9WMjcwMjU1OTg5Xy5wbmcnIC8+PC9hPlwifX19fSxcImNhcnRUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wiYnV0dG9uXCI6e1widGV4dFwiOlwiWW91ciBDYXJ0XCIsXCJ1cmxcIjpcIi9ncC9jYXJ0L3ZpZXcuaHRtbD9yZWZfPW5hdl9lcnJfY2FydF90aW1lb3V0XCJ9LFwidGl0bGVcIjpcIk9vcHMhXCIsXCJwYXJhZ3JhcGhcIjpcIlVuYWJsZSB0byByZXRyaWV2ZSB5b3VyIGNhcnQuXCJ9fX19LFwicHJpbWVUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1widGl0bGVcIjpcIjxhIGhyZWY9Jy9ncC9wcmltZSc+PGltZyBzcmM9J2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9wcmltZS9waXYvWW91clByaW1lUElWX2ZhbGxiYWNrX0NUQS5fVjMyNzM0Njk0M18uanBnJyAvPjwvYT5cIn19fX0sXCJld2NUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wiYnV0dG9uXCI6e1widGV4dFwiOlwiWW91ciBDYXJ0XCIsXCJ1cmxcIjpcIi9ncC9jYXJ0L3ZpZXcuaHRtbD9yZWZfPW5hdl9lcnJfZXdjX3RpbWVvdXRcIn0sXCJ0aXRsZVwiOlwiT29wcyFcIixcInBhcmFncmFwaFwiOlwiVGhlcmUncyBhIHByb2JsZW0gbG9hZGluZyB5b3VyIGNhcnQgcmlnaHQgbm93LlwifX19fSxcImVycm9yV2lzaGxpc3RcIjp7XCJ0ZW1wbGF0ZVwiOntcIm5hbWVcIjpcImZseW91dEVycm9yXCIsXCJkYXRhXCI6e1wiZXJyb3JcIjp7XCJidXR0b25cIjp7XCJ0ZXh0XCI6XCJZb3VyIFdpc2hsaXN0XCIsXCJ1cmxcIjpcIi9ncC9yZWdpc3RyeS93aXNobGlzdC8/cmVmXz1uYXZfZXJyX3dpc2hsaXN0XCJ9LFwidGl0bGVcIjpcIk9vcHMhXCIsXCJwYXJhZ3JhcGhcIjpcIlVuYWJsZSB0byByZXRyaWV2ZSB5b3VyIHdpc2hsaXN0XCJ9fX19LFwiZW1wdHlXaXNobGlzdFwiOntcInRlbXBsYXRlXCI6e1wibmFtZVwiOlwiZmx5b3V0RXJyb3JcIixcImRhdGFcIjp7XCJlcnJvclwiOntcImJ1dHRvblwiOntcInRleHRcIjpcIllvdXIgV2lzaGxpc3RcIixcInVybFwiOlwiL2dwL3JlZ2lzdHJ5L3dpc2hsaXN0Lz9yZWZfPW5hdl9lcnJfZW1wdHlfd2lzaGxpc3RcIn0sXCJ0aXRsZVwiOlwiT29wcyFcIixcInBhcmFncmFwaFwiOlwiWW91ciBsaXN0IGlzIGVtcHR5XCJ9fX19LFwieW91ckFjY291bnRDb250ZW50XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wiYnV0dG9uXCI6e1widGV4dFwiOlwiWW91ciBBY2NvdW50XCIsXCJ1cmxcIjpcIi9ncC9jc3MvaG9tZXBhZ2UuaHRtbD9yZWZfPW5hdl9lcnJfeW91cmFjY291bnRcIn0sXCJ0aXRsZVwiOlwiT29wcyFcIixcInBhcmFncmFwaFwiOlwiVW5hYmxlIHRvIHJldHJpZXZlIHlvdXIgYWNjb3VudFwifX19fSxcInNob3BBbGxUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wicGFyYWdyYXBoXCI6XCJVbmFibGUgdG8gcmV0cmlldmUgZGVwYXJ0bWVudHMsIHBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIn19fX0sXCJraW5kbGVUaW1lb3V0XCI6e1widGVtcGxhdGVcIjp7XCJuYW1lXCI6XCJmbHlvdXRFcnJvclwiLFwiZGF0YVwiOntcImVycm9yXCI6e1wicGFyYWdyYXBoXCI6XCJVbmFibGUgdG8gcmV0cmlldmUgbGlzdCwgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwifX19fX0pOyB9KTtcbndpbmRvdy4kTmF2ICYmICROYXYud2hlbihcInV0aWwudGVtcGxhdGVzXCIpLnJ1bihcIkZseW91dEVycm9yVGVtcGxhdGVcIiwgZnVuY3Rpb24odGVtcGxhdGVzKSB7XG4gICAgICB0ZW1wbGF0ZXMuYWRkKFwiZmx5b3V0RXJyb3JcIiwgXCI8IyBpZihlcnJvci50aXRsZSkgeyAjPjxzcGFuIGNsYXNzPSduYXYtdGl0bGUnPjwjPWVycm9yLnRpdGxlICM+PC9zcGFuPjwjIH0gIz48IyBpZihlcnJvci5wYXJhZ3JhcGgpIHsgIz48cCBjbGFzcz0nbmF2LXBhcmFncmFwaCc+PCM9ZXJyb3IucGFyYWdyYXBoICM+PC9wPjwjIH0gIz48IyBpZihlcnJvci5idXR0b24pIHsgIz48YSBocmVmPSc8Iz1lcnJvci5idXR0b24udXJsICM+JyBjbGFzcz0nbmF2LWFjdGlvbi1idXR0b24nID48c3BhbiBjbGFzcz0nbmF2LWFjdGlvbi1pbm5lcic+PCM9ZXJyb3IuYnV0dG9uLnRleHQgIz48L3NwYW4+PC9hPjwjIH0gIz5cIik7XG4gICAgfSk7XG5cbiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7XG4gICAgdWV0KCdiYicsICdpc3MtaW5pdC1wYycsIHt3YjogMX0pO1xuICB9XG4gIGlmICghd2luZG93LiRTZWFyY2hKUyAmJiB3aW5kb3cuJE5hdikge1xuICAgIHdpbmRvdy4kU2VhcmNoSlMgPSAkTmF2Lm1ha2UoJ3N4Jyk7XG4gIH1cblxuICB2YXIgb3B0cyA9IHtcbiAgICBob3N0OiBcImNvbXBsZXRpb24uYW1hem9uLmNvbS9zZWFyY2gvY29tcGxldGVcIlxuICAsIG1hcmtldElkOiBcIjFcIlxuICAsIG9iZnVzY2F0ZWRNYXJrZXRJZDogXCJBVFZQREtJS1gwREVSXCJcbiAgLCBzZWFyY2hBbGlhc2VzOiBbXCJhcHNcIixcImFtYXpvbi1jdXN0b20tcHJvZHVjdHNcIixcImFtYXpvbi1kZXZpY2VzXCIsXCJhbWF6b25iYXNpY3NcIixcImFtYXpvbmZyZXNoXCIsXCJhbWF6b24tcGhhcm1hY3lcIixcIndob2xlZm9vZHNcIixcImFsbHRoZWJlc3RwZXRzXCIsXCJiYXJ0ZWxsZHJ1Z3NcIixcImJyaXN0b2xmYXJtc1wiLFwiZnJlc2h0aHltZVwiLFwia2VnbmJvdHRsZVwiLFwibWlzc2lvbndpbmVzcGlyaXRzXCIsXCJwZXRmb29kZXhwcmVzc1wiLFwic291c2Fzd2luZWxpcXVvcnNcIixcInN1cmR5a3NsaXF1b3JjaGVlc2VzaG9wXCIsXCJ1bmlvbnNxdWFyZXdpbmVcIixcInZpbnRhZ2VncmFwZVwiLFwid2VzdHNpZGVtYXJrZXRcIixcInN0cmlwYm9va3NcIixcInBvcHVsYXJcIixcImFwcGFyZWxcIixcImVsZWN0cm9uaWNzXCIsXCJzcG9ydGluZ1wiLFwic3BvcnRzLWFuZC1maXRuZXNzXCIsXCJvdXRkb29yLXJlY3JlYXRpb25cIixcImZhbi1zaG9wXCIsXCJnYXJkZW5cIixcInZpZGVvZ2FtZXNcIixcInRveXMtYW5kLWdhbWVzXCIsXCJqZXdlbHJ5XCIsXCJkaWdpdGFsLXRleHRcIixcImRpZ2l0YWwtbXVzaWNcIixcInByaW1lLWRpZ2l0YWwtbXVzaWNcIixcIndhdGNoZXNcIixcImdyb2NlcnlcIixcImhwY1wiLFwiaW5zdGFudC12aWRlb1wiLFwiaGFuZG1hZGVcIixcImhhbmRtYWRlLWpld2VscnlcIixcImhhbmRtYWRlLWhvbWUtYW5kLWtpdGNoZW5cIixcInByaW1lLWluc3RhbnQtdmlkZW9cIixcInNob3AtaW5zdGFudC12aWRlb1wiLFwiYmFieS1wcm9kdWN0c1wiLFwib2ZmaWNlLXByb2R1Y3RzXCIsXCJzb2Z0d2FyZVwiLFwic21hcnQtaG9tZVwiLFwibWFnYXppbmVzXCIsXCJ0b29sc1wiLFwiYXV0b21vdGl2ZVwiLFwibWlzY1wiLFwiaW5kdXN0cmlhbFwiLFwibWlcIixcInBldC1zdXBwbGllc1wiLFwiZGlnaXRhbC1tdXNpYy10cmFja1wiLFwiZGlnaXRhbC1tdXNpYy1hbGJ1bVwiLFwibW9iaWxlXCIsXCJtb2JpbGUtYXBwc1wiLFwibW92aWVzLXR2XCIsXCJtdXNpYy1hcnRpc3RcIixcIm11c2ljLWFsYnVtXCIsXCJtdXNpYy1zb25nXCIsXCJzdHJpcGJvb2tzLXNwYW5pc2hcIixcImVsZWN0cm9uaWNzLWFjY2Vzc29yaWVzXCIsXCJwaG90b1wiLFwiYXVkaW8tdmlkZW9cIixcImNvbXB1dGVyc1wiLFwiZnVybml0dXJlXCIsXCJraXRjaGVuXCIsXCJhdWRpYmxlXCIsXCJhdWRpb2Jvb2tzXCIsXCJiZWF1dHlcIixcInNob2VzXCIsXCJhcnRzLWNyYWZ0c1wiLFwiYXBwbGlhbmNlc1wiLFwiZ2lmdC1jYXJkc1wiLFwicGV0c1wiLFwib3V0ZG9vclwiLFwibGF3bmdhcmRlblwiLFwiY29sbGVjdGlibGVzXCIsXCJyZXBsYWNlbWVudC1wYXJ0c1wiLFwiZmluYW5jaWFsXCIsXCJmaW5lLWFydFwiLFwiZmFzaGlvblwiLFwiZmFzaGlvbi13b21lbnNcIixcImZhc2hpb24td29tZW5zLWNsb3RoaW5nXCIsXCJmYXNoaW9uLXdvbWVucy1qZXdlbHJ5XCIsXCJmYXNoaW9uLXdvbWVucy1zaG9lc1wiLFwiZmFzaGlvbi13b21lbnMtd2F0Y2hlc1wiLFwiZmFzaGlvbi13b21lbnMtaGFuZGJhZ3NcIixcImZhc2hpb24tbWVuc1wiLFwiZmFzaGlvbi1tZW5zLWNsb3RoaW5nXCIsXCJmYXNoaW9uLW1lbnMtamV3ZWxyeVwiLFwiZmFzaGlvbi1tZW5zLXNob2VzXCIsXCJmYXNoaW9uLW1lbnMtd2F0Y2hlc1wiLFwiZmFzaGlvbi1naXJsc1wiLFwiZmFzaGlvbi1naXJscy1jbG90aGluZ1wiLFwiZmFzaGlvbi1naXJscy1qZXdlbHJ5XCIsXCJmYXNoaW9uLWdpcmxzLXNob2VzXCIsXCJmYXNoaW9uLWdpcmxzLXdhdGNoZXNcIixcImZhc2hpb24tYm95c1wiLFwiZmFzaGlvbi1ib3lzLWNsb3RoaW5nXCIsXCJmYXNoaW9uLWJveXMtamV3ZWxyeVwiLFwiZmFzaGlvbi1ib3lzLXNob2VzXCIsXCJmYXNoaW9uLWJveXMtd2F0Y2hlc1wiLFwiZmFzaGlvbi1iYWJ5XCIsXCJmYXNoaW9uLWJhYnktYm95c1wiLFwiZmFzaGlvbi1iYWJ5LWdpcmxzXCIsXCJmYXNoaW9uLWx1Z2dhZ2VcIixcIjNkLXByaW50aW5nXCIsXCJ0cmFkZWluLWFwc1wiLFwidG9kYXlzLWRlYWxzXCIsXCJsaXZlLWV4cGxvcmF0aW9uc1wiLFwibG9jYWwtc2VydmljZXNcIixcInZlaGljbGVzXCIsXCJ2aWRlby1zaG9ydHNcIixcIndhcmVob3VzZS1kZWFsc1wiLFwibHV4dXJ5LWJlYXV0eVwiLFwiYmFuam8tYXBwc1wiLFwiYmxhY2stZnJpZGF5XCIsXCJjeWJlci1tb25kYXlcIixcImFsZXhhLXNraWxsc1wiLFwic3Vic2NyaWJlLXdpdGgtYW1hem9uXCIsXCJjb3Vyc2VzXCIsXCJlZHUtYWx0LWNvbnRlbnRcIixcImFtYXpvbi1nbG9iYWwtc3RvcmVcIixcInByaW1lLXdhcmRyb2JlXCIsXCJ1bmRlci10ZW4tZG9sbGFyc1wiLFwidGVtcG9cIixcInNwZWNpYWx0eS1hcHMtc25zXCIsXCJsdXh1cnlcIl1cbiAgLCBmaWx0ZXJBbGlhc2VzOiBbXVxuICAsIHBhZ2VUeXBlOiBcIlNlYXJjaFwiXG4gICwgcmVxdWVzdElkOiBcIjFRNzBNNzhDQ1M4QVM5OVJNQ0E4XCJcbiAgLCBzZXNzaW9uSWQ6IFwiMTQ3LTg2OTM2NjctNTkwMTAzMVwiXG4gICwgbGFuZ3VhZ2U6IFwiZW5fVVNcIlxuICAsIGN1c3RvbWVySWQ6IFwiXCJcbiAgLCBiMmI6IDBcbiAgLCBmcmVzaDogMFxuICAsIGlzSnBPckNuOiAwXG4gICwgaXNVc2VBdWlJc3M6IDFcbn07XG5cbnZhciBpc3NPcHRzID0ge1xuICAgIGZhbGxiYWNrRmxhZzogMVxuICAsIGlzRGlnaXRhbEZlYXR1cmVzRW5hYmxlZDogMFxuICAsIGlzV2F5ZmluZGluZ0VuYWJsZWQ6IDFcbiAgLCBkcm9wZG93bjogXCJzZWxlY3Quc2VhcmNoU2VsZWN0XCJcbiAgLCBkZXBhcnRtZW50VGV4dDogXCJpbiB7ZGVwYXJ0bWVudH1cIlxuICAsIHN1Z2dlc3Rpb25UZXh0OiBcIlNlYXJjaCBzdWdnZXN0aW9uc1wiXG4gICwgcmVjZW50U2VhcmNoZXNUcmVhdG1lbnQ6IFwiQ1wiXG4gICwgYXV0aG9yU3VnZ2VzdGlvblRleHQ6IFwiRXhwbG9yZSBib29rcyBieSBYWEFVVEhYWFwiXG4gICwgdHJhbnNsYXRlZFN0cmluZ3NNYXA6IHtcInN4LXJlY2VudC1zZWFyY2hlc1wiOlwiUmVjZW50IHNlYXJjaGVzXCIsXCJzeC15b3VyLXJlY2VudC1zZWFyY2hcIjpcIkluc3BpcmVkIGJ5IHlvdXIgcmVjZW50IHNlYXJjaFwifVxuICAsIGJpYVRpdGxlVGV4dDogXCJcIlxuICAsIGJpYVB1cmNoYXNlZFRleHQ6IFwiXCJcbiAgLCBiaWFWaWV3QWxsVGV4dDogXCJcIlxuICAsIGJpYVZpZXdBbGxNYW5hZ2VUZXh0OiBcIlwiXG4gICwgYmlhQW5kVGV4dDogXCJcIlxuICAsIGJpYU1hbmFnZVRleHQ6IFwiXCJcbiAgLCBiaWFXZWJsYWJUcmVhdG1lbnQ6IFwiXCJcbiAgLCBpc3NOYXZDb25maWc6IHt9XG4gICwgbnA6IDBcbiAgLCBpc3NDb3JwdXM6IFtdXG4gICwgY2Y6IDFcbiAgLCByZW1vdmVEZWVwTm9kZUlTUzogXCJcIlxuICAsIHRyZW5kaW5nVHJlYXRtZW50OiBcIkNcIlxuICAsIHVzZUFQSVYyOiBcIlwiXG4gICwgb3BmU3dpdGNoOiBcIlwiXG4gICwgaXNJU1NEZXNrdG9wUmVmYWN0b3JFbmFibGVkOiBcIjFcIlxuICAsIHVzZVNlcnZpY2VIaWdobGlnaHRpbmc6IFwidHJ1ZVwiXG4gICwgaXNJbnRlcm5hbDogMFxuICAsIGlzQVBJQ2FjaGluZ0Rpc2FibGVkOiB0cnVlXG4gICwgaXNCcm93c2VOb2RlU2NvcGluZ0VuYWJsZWQ6IGZhbHNlXG4gICwgaXNTdG9yZWZyb250VGVtcGxhdGVFbmFibGVkOiBmYWxzZVxuICAsIGRpc2FibGVBdXRvY29tcGxldGVPbkZvY3VzOiBcIlwiXG59O1xuXG4gIGlmIChvcHRzLmlzVXNlQXVpSXNzID09PSAxICYmIHdpbmRvdy4kTmF2KSB7XG4gIHdpbmRvdy4kTmF2LndoZW4oJ3N4LmlzcycpLnJ1bignaXNzLW1hc29uLWluaXQnLCBmdW5jdGlvbihpc3Mpe1xuICAgIHZhciBpc3NJbml0T2JqID0gYnVpbGRJc3NJbml0T2JqZWN0KG9wdHMsIGlzc09wdHMsIHRydWUpO1xuXG4gICAgbmV3IGlzcy5Jc3NQYXJlbnRDb29yZGluYXRvcihpc3NJbml0T2JqKTtcblxuICAgICRTZWFyY2hKUy5kZWNsYXJlKCdjYW5DcmVhdGVBdXRvY29tcGxldGUnLCBpc3NJbml0T2JqKTtcbiAgfSk7XG59IGVsc2UgaWYgKHdpbmRvdy4kU2VhcmNoSlMpIHtcbiAgdmFyIGlzcztcblxuICAvLyBCRUdJTiBEZXByZWNhdGVkIGdsb2JhbHNcbiAgdmFyIGlzc0hvc3QgPSBvcHRzLmhvc3RcbiAgICAsIGlzc01rdGlkID0gb3B0cy5tYXJrZXRJZFxuICAgICwgaXNzU2VhcmNoQWxpYXNlcyA9IG9wdHMuc2VhcmNoQWxpYXNlc1xuICAgICwgdXBkYXRlSVNTQ29tcGxldGlvbiA9IGZ1bmN0aW9uKCkgeyBpc3MudXBkYXRlQXV0b0NvbXBsZXRpb24oKTsgfTtcbiAgLy8gRU5EIGRlcHJlY2F0ZWQgZ2xvYmFsc1xuXG5cbiAgJFNlYXJjaEpTLndoZW4oJ2pRdWVyeScsICdzZWFyY2gtanMtYXV0b2NvbXBsZXRlLWxpYicpLnJ1bignYXV0b2NvbXBsZXRlLWluaXQnLCBpbml0aWFsaXplQXV0b2NvbXBsZXRlKTtcbiAgJFNlYXJjaEpTLndoZW4oJ2NhbkNyZWF0ZUF1dG9jb21wbGV0ZScpLnJ1bignY3JlYXRlQXV0b2NvbXBsZXRlJywgY3JlYXRlQXV0b2NvbXBsZXRlKTtcblxufSAvLyBFTkQgY29uZGl0aW9uYWwgZm9yIHdpbmRvdy4kU2VhcmNoSlNcbiAgZnVuY3Rpb24gaW5pdGlhbGl6ZUF1dG9jb21wbGV0ZShqUXVlcnkpIHtcbiAgdmFyIGlzc0luaXRPYmogPSBidWlsZElzc0luaXRPYmplY3Qob3B0cywgaXNzT3B0cyk7XG4gICRTZWFyY2hKUy5kZWNsYXJlKFwiY2FuQ3JlYXRlQXV0b2NvbXBsZXRlXCIsIGlzc0luaXRPYmopO1xufSAvLyBFTkQgaW5pdGlhbGl6ZUF1dG9jb21wbGV0ZVxuICBmdW5jdGlvbiBpbml0U2VhcmNoQ3NsKHNlYXJjaENTTCwgaXNzSW5pdE9iamVjdCkge1xuICBzZWFyY2hDU0wuaW5pdChcbiAgICBvcHRzLnBhZ2VUeXBlLFxuICAgICh3aW5kb3cudWUgJiYgd2luZG93LnVlLnJpZCkgfHwgb3B0cy5yZXF1ZXN0SWRcbiAgKTtcbiAgJFNlYXJjaEpTLmRlY2xhcmUoXCJjYW5DcmVhdGVBdXRvY29tcGxldGVcIiwgaXNzSW5pdE9iamVjdCk7XG59IC8vIEVORCBpbml0U2VhcmNoQ3NsXG4gIGZ1bmN0aW9uIGNyZWF0ZUF1dG9jb21wbGV0ZShpc3NPYmplY3QpIHtcbiAgaXNzID0gbmV3IEF1dG9Db21wbGV0ZShpc3NPYmplY3QpO1xuXG4gICRTZWFyY2hKUy5wdWJsaXNoKFwic2VhcmNoLWpzLWF1dG9jb21wbGV0ZVwiLCBpc3MpO1xuXG4gIGxvZ01ldHJpY3MoKTtcbn0gLy8gRU5EIGNyZWF0ZUF1dG9jb21wbGV0ZVxuICBmdW5jdGlvbiBidWlsZElzc0luaXRPYmplY3Qob3B0cywgaXNzT3B0cywgaXNOZXdJc3MpIHtcbiAgICB2YXIgaXNzSW5pdE9iaiA9IHtcbiAgICAgICAgc3JjOiBvcHRzLmhvc3RcbiAgICAgICwgc2Vzc2lvbklkOiBvcHRzLnNlc3Npb25JZFxuICAgICAgLCByZXF1ZXN0SWQ6IG9wdHMucmVxdWVzdElkXG4gICAgICAsIG1rdDogb3B0cy5tYXJrZXRJZFxuICAgICAgLCBvYmZNa3Q6IG9wdHMub2JmdXNjYXRlZE1hcmtldElkXG4gICAgICAsIHBhZ2VUeXBlOiBvcHRzLnBhZ2VUeXBlXG4gICAgICAsIGxhbmd1YWdlOiBvcHRzLmxhbmd1YWdlXG4gICAgICAsIGN1c3RvbWVySWQ6IG9wdHMuY3VzdG9tZXJJZFxuICAgICAgLCBmcmVzaDogb3B0cy5mcmVzaFxuICAgICAgLCBiMmI6IG9wdHMuYjJiXG4gICAgICAsIGFsaWFzZXM6IG9wdHMuc2VhcmNoQWxpYXNlc1xuICAgICAgLCBmYjogaXNzT3B0cy5mYWxsYmFja0ZsYWdcbiAgICAgICwgaXNEaWdpdGFsRmVhdHVyZXNFbmFibGVkOiBpc3NPcHRzLmlzRGlnaXRhbEZlYXR1cmVzRW5hYmxlZFxuICAgICAgLCBpc1dheWZpbmRpbmdFbmFibGVkOiBpc3NPcHRzLmlzV2F5ZmluZGluZ0VuYWJsZWRcbiAgICAgICwgaXNzUHJpbWVFbGlnaWJsZTogaXNzT3B0cy5pc3NQcmltZUVsaWdpYmxlXG4gICAgICAsIGRlcHRUZXh0OiBpc3NPcHRzLmRlcGFydG1lbnRUZXh0XG4gICAgICAsIHN1Z1RleHQ6IGlzc09wdHMuc3VnZ2VzdGlvblRleHRcbiAgICAgICwgZmlsdGVyQWxpYXNlczogb3B0cy5maWx0ZXJBbGlhc2VzXG4gICAgICAsIGJpYVdpZGdldFVybDogb3B0cy5iaWFXaWRnZXRVcmxcbiAgICAgICwgcmVjZW50U2VhcmNoZXNUcmVhdG1lbnQ6IGlzc09wdHMucmVjZW50U2VhcmNoZXNUcmVhdG1lbnRcbiAgICAgICwgYXV0aG9yU3VnZ2VzdGlvblRleHQ6IGlzc09wdHMuYXV0aG9yU3VnZ2VzdGlvblRleHRcbiAgICAgICwgdHJhbnNsYXRlZFN0cmluZ3NNYXA6IGlzc09wdHMudHJhbnNsYXRlZFN0cmluZ3NNYXBcbiAgICAgICwgYmlhVGl0bGVUZXh0OiBcIlwiXG4gICAgICAsIGJpYVB1cmNoYXNlZFRleHQ6IFwiXCJcbiAgICAgICwgYmlhVmlld0FsbFRleHQ6IFwiXCJcbiAgICAgICwgYmlhVmlld0FsbE1hbmFnZVRleHQ6IFwiXCJcbiAgICAgICwgYmlhQW5kVGV4dDogXCJcIlxuICAgICAgLCBiaWFNYW5hZ2VUZXh0OiBcIlwiXG4gICAgICAsIGJpYVdlYmxhYlRyZWF0bWVudDogXCJcIlxuICAgICAgLCBpc3NOYXZDb25maWc6IGlzc09wdHMuaXNzTmF2Q29uZmlnXG4gICAgICAsIGNmOiBpc3NPcHRzLmNmXG4gICAgICAsIGltZTogb3B0cy5pc0pwT3JDblxuICAgICAgLCBta3RpZDogb3B0cy5tYXJrZXRJZFxuICAgICAgLCBxczogb3B0cy5pc0pwT3JDblxuICAgICAgLCBpc3NDb3JwdXM6IGlzc09wdHMuaXNzQ29ycHVzXG4gICAgICAsIGRlZXBOb2RlSVNTOiB7XG4gICAgICAgICAgc2VhcmNoQWxpYXNBY2Nlc3NvcjogZnVuY3Rpb24oJCkge1xuICAgICAgICAgICAgcmV0dXJuICh3aW5kb3cuU2VhcmNoUGFnZUFjY2VzcyAmJiB3aW5kb3cuU2VhcmNoUGFnZUFjY2Vzcy5zZWFyY2hBbGlhcygpKSB8fFxuICAgICAgICAgICAgICAgICAgICQoJ3NlbGVjdC5zZWFyY2hTZWxlY3QnKS5jaGlsZHJlbigpLmF0dHIoJ2RhdGEtcm9vdC1hbGlhcycpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc2VhcmNoQWxpYXNEaXNwbGF5TmFtZUFjY2Vzc29yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAod2luZG93LlNlYXJjaFBhZ2VBY2Nlc3MgJiYgd2luZG93LlNlYXJjaFBhZ2VBY2Nlc3Muc2VhcmNoQWxpYXNEaXNwbGF5TmFtZSgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICwgcmVtb3ZlRGVlcE5vZGVJU1M6IGlzc09wdHMucmVtb3ZlRGVlcE5vZGVJU1NcbiAgICAgICwgdHJlbmRpbmdUcmVhdG1lbnQ6IGlzc09wdHMudHJlbmRpbmdUcmVhdG1lbnRcbiAgICAgICwgdXNlQVBJVjI6IGlzc09wdHMudXNlQVBJVjJcbiAgICAgICwgb3BmU3dpdGNoOiBpc3NPcHRzLm9wZlN3aXRjaFxuICAgICAgLCBpc0lTU0Rlc2t0b3BSZWZhY3RvckVuYWJsZWQ6IGlzc09wdHMuaXNJU1NEZXNrdG9wUmVmYWN0b3JFbmFibGVkXG4gICAgICAsIHVzZVNlcnZpY2VIaWdobGlnaHRpbmc6IGlzc09wdHMudXNlU2VydmljZUhpZ2hsaWdodGluZ1xuICAgICAgLCBpc0ludGVybmFsOiBpc3NPcHRzLmlzSW50ZXJuYWxcbiAgICAgICwgaXNBUElDYWNoaW5nRGlzYWJsZWQ6IGlzc09wdHMuaXNBUElDYWNoaW5nRGlzYWJsZWRcbiAgICAgICwgaXNCcm93c2VOb2RlU2NvcGluZ0VuYWJsZWQ6IGlzc09wdHMuaXNCcm93c2VOb2RlU2NvcGluZ0VuYWJsZWRcbiAgICAgICwgaXNTdG9yZWZyb250VGVtcGxhdGVFbmFibGVkOiBpc3NPcHRzLmlzU3RvcmVmcm9udFRlbXBsYXRlRW5hYmxlZFxuICAgICAgLCBkaXNhYmxlQXV0b2NvbXBsZXRlT25Gb2N1czogaXNzT3B0cy5kaXNhYmxlQXV0b2NvbXBsZXRlT25Gb2N1c1xuICAgIH07XG4gIFxuICAgIC8vIElmIHdlIGFyZW4ndCB1c2luZyB0aGUgbmV3IElTUyB0aGVuIHdlIG5lZWQgdG8gYWRkIHRoZXNlIHByb3BlcnRpZXNcbiAgICBcbiAgICBpZiAoIWlzTmV3SXNzKSB7XG4gICAgICBpc3NJbml0T2JqLmRkID0gaXNzT3B0cy5kcm9wZG93bjsgLy8gVGhlIGVsZW1lbnQgd2l0aCBpZCBzZWFyY2hEcm9wZG93bkJveCBkb2Vzbid0IGV4aXN0IGluIEMuXG4gICAgICBpc3NJbml0T2JqLmltZVNwYWNpbmcgPSBpc3NPcHRzLmltZVNwYWNpbmc7XG4gICAgICBpc3NJbml0T2JqLmlzTmF2SW5saW5lID0gMTtcbiAgICAgIGlzc0luaXRPYmoudHJpZ2dlcklTU09uQ2xpY2sgPSAwO1xuICAgICAgaXNzSW5pdE9iai5zYyA9IDE7XG4gICAgICBpc3NJbml0T2JqLm5wID0gaXNzT3B0cy5ucDtcbiAgICB9XG4gIFxuICAgIHJldHVybiBpc3NJbml0T2JqO1xuICB9IC8vIEVORCBidWlsZElzc0luaXRPYmplY3RcbiAgZnVuY3Rpb24gbG9nTWV0cmljcygpIHtcbiAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHtcbiAgICAgIHVldCgnYmUnLCAnaXNzLWluaXQtcGMnLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgd2I6IDFcbiAgICAgICAgICB9KTtcbiAgICAgIHVleCgnbGQnLCAnaXNzLWluaXQtcGMnLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgICAgd2I6IDFcbiAgICAgICAgICB9KTtcbiAgfVxufSAvLyBFTkQgbG9nTWV0cmljc1xuICBcbiAgICBcbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLm5hdkRldmljZVR5cGUnLCdkZXNrdG9wJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLm5hdkRlYnVnSGlnaHJlcycsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5wYWdlVHlwZScsJ1NlYXJjaCcpO1xud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc3ViUGFnZVR5cGUnLCdMaXN0Jyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmR5bmFtaWNNZW51VXJsJywnXFx4MkZncFxceDJGbmF2aWdhdGlvblxceDJGYWpheFxceDJGZHluYW1pY1xceDJEbWVudS5odG1sJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmRpc21pc3NOb3RpZmljYXRpb25VcmwnLCdcXHgyRmdwXFx4MkZuYXZpZ2F0aW9uXFx4MkZhamF4XFx4MkZkaXNtaXNzbm90aWZpY2F0aW9uLmh0bWwnKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuZW5hYmxlRHluYW1pY01lbnVzJyx0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNJbnRlcm5hbCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc0JhY2t1cCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc1JlY29nbml6ZWQnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcudHJhbnNpZW50Rmx5b3V0VHJpZ2dlcicsJ1xceDIzbmF2XFx4MkR0cmFuc2llbnRcXHgyRGZseW91dFxceDJEdHJpZ2dlcicpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zdWJuYXZGbHlvdXRVcmwnLCdcXHgyRmdwXFx4MkZuYXZpZ2F0aW9uXFx4MkZhamF4XFx4MkZnZW5lcmljLmh0bWwnKTtcbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzU3VibmF2Rmx5b3V0TWlncmF0aW9uRW5hYmxlZCcsdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnJlY29yZEV2VXJsJywnXFx4MkZncFxceDJGbmF2aWdhdGlvblxceDJGYWpheFxceDJGcmVjb3JkZXZlbnQuaHRtbCcpO1xud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmVjb3JkRXZJbnRlcnZhbCcsMTUwMDApO1xud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc2Vzc2lvbklkJywnMTQ3XFx4MkQ4NjkzNjY3XFx4MkQ1OTAxMDMxJyk7XG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5yZXF1ZXN0SWQnLCcxUTcwTTc4Q0NTOEFTOTlSTUNBOCcpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5hbGV4YUxpc3RFbmFibGVkJyx0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmVhZHlPbkFURicsdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmR5bmFtaWNNZW51QXJncycse1wicmlkXCI6XCIxUTcwTTc4Q0NTOEFTOTlSTUNBOFwiLFwiaXNGdWxsV2lkdGhQcmltZVwiOjAsXCJpc1ByaW1lXCI6MCxcImR5bmFtaWNSZXF1ZXN0XCI6MSxcIndlYmxhYnNcIjpcIlwiLFwiaXNGcmVzaFJlZ2lvbkFuZEN1c3RvbWVyXCI6XCJcIixcInByaW1lTWVudVdpZHRoXCI6MzEwfSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmN1c3RvbWVyTmFtZScsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy55b3VyQWNjb3VudFByaW1lVVJMJyxudWxsKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcueW91ckFjY291bnRQcmltZUhvdmVyJyx0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc2VhcmNoQmFja1N0YXRlJyx7fSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnbmF2LmlubGluZScpO1xuXG4oZnVuY3Rpb24gKGkpIHtcbiAgaWYod2luZG93Ll9uYXZiYXJTcHJpdGVVcmwpIHtcbiAgICBpLm9ubG9hZCA9IGZ1bmN0aW9uKCkge3dpbmRvdy51ZXQgJiYgdWV0KCduZScpfTtcbiAgICBpLnNyYyA9IHdpbmRvdy5fbmF2YmFyU3ByaXRlVXJsO1xuICB9XG59KG5ldyBJbWFnZSgpKSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmF1dG9Gb2N1cycsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5yZXNwb25zaXZlVG91Y2hBZ2VudHMnLFtcImllVG91Y2hcIl0pO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5yZXNwb25zaXZlR1cnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGFnZUhpZGVFbmFibGVkJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNzbFRyaWdnZXJUeXBlJywnZmx5b3V0UHJveGltaXR5TGFyZ2UnKTtcbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNzbFRyaWdnZXJSZXRyeScsMCk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmRvdWJsZUNhcnQnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc2lnbkluT3ZlcnJpZGUnLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5zaWduSW5Ub29sdGlwJyx0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNQcmltZU1lbWJlcicsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5wYWNrYXJkR2xvd1Rvb2x0aXAnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucGFja2FyZEdsb3dGbHlvdXQnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmlnaHRNYXJnaW5BbGlnbkVuYWJsZWQnLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5mbHlvdXRBbmltYXRpb24nLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuY2FtcHVzQWN0aXZhdGlvbicsJ251bGwnKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucHJpbWVUb29sdGlwJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnByaW1lRGF5JyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmRpc2FibGVCdXlJdEFnYWluJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmVuYWJsZUNyb3NzU2hvcEJpYUZseW91dCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5wc2V1ZG9QcmltZUZpcnN0QnJvd3NlJyxudWxsKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuc2RhWW91ckFjY291bnQnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuY3NZb3VyQWNjb3VudCcse1widXJsXCI6XCIvZ3AveW91cmFjY291bnQvbmF2aWdhdGlvbi9zaWRlcGFuZWxcIn0pO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5jYXJ0Rmx5b3V0RGlzYWJsZWQnLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc1RhYmxldEJyb3dzZXInLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuSG1lbnVQcm94aW1pdHlBcmVhJyxbMjAwLDIwMCwyMDAsMjAwXSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLkhNZW51SXNQcm94aW1pdHknLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc1B1cmVBamF4QUxGJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmFjY291bnRMaXN0Rmx5b3V0UmVkZXNpZ24nLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcubmF2ZnJlc2gnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNGcmVzaFJlZ2lvbicsZmFsc2UpO1xuXG5pZiAod2luZG93LnVlICYmIHVlLnRhZykgeyB1ZS50YWcoJ25hdmJhcicpOyB9O1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5ibGFja2JlbHQnLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5iZWFjb25iZWx0Jyx0cnVlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuYWNjb3VudExpc3QnLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pUGFkVGFibGV0JyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNlYXJjaGFwaUVuZHBvaW50JyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnRpbWVsaW5lJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnRpbWVsaW5lQXNpblByaWNlRW5hYmxlZCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy50aW1lbGluZURlbGV0ZUVuYWJsZWQnLGZhbHNlKTtcblxuXG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmV4dGVuZGVkRmx5b3V0JyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmZseW91dENsb3NlRGVsYXknLDYwMCk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnBzc0ZsYWcnLDApO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc1ByaW1lVG9vbHRpcE1pZ3JhdGVkJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzRHluYW1pY1dpc2hMaXN0TWlncmF0aW9uRW5hYmxlZCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5oYXNoQ3VzdG9tZXJBbmRTZXNzaW9uSWQnLCdhMzZhZTRmZGY4MzQ5MGRiOTY2OWUyMDg3Y2I5NmQ0ZmNjZWM2ODMzJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzRXhwb3J0TW9kZScsdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmxhbmd1YWdlQ29kZScsJ2VuX1VTJyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmVudmlyb25tZW50VkZJJywnQW1hem9uTmF2aWdhdGlvbkNhcmRzXFx4MkZkZXZlbG9wbWVudFxceDQwQjYwNjg5MjA1MjJcXHgyREFMMl94ODZfNjQnKTtcblxuXG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzSE1lbnVCcm93c2VyQ2FjaGVEaXNhYmxlJyxmYWxzZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLnNpZ25JblVybFdpdGhSZWZUYWcnLCdodHRwc1xceDNBXFx4MkZcXHgyRnd3dy5hbWF6b24uY29tXFx4MkZhcFxceDJGc2lnbmluXFx4M0ZvcGVuaWQucGFwZS5tYXhfYXV0aF9hZ2VcXHgzRDBcXHgyNm9wZW5pZC5yZXR1cm5fdG9cXHgzRGh0dHBzXFx4MjUzQVxceDI1MkZcXHgyNTJGd3d3LmFtYXpvbi5jb21cXHgyNTJGc1xceDI1MkZcXHgyNTNGX2VuY29kaW5nXFx4MjUzRFVURjhcXHgyNTI2a1xceDI1M0RpcGhvbmVcXHgyNTI2cGFnZVxceDI1M0Q0XFx4MjUyNnFpZFxceDI1M0QxNjQxMzAzMzMzXFx4MjUyNnJlZlxceDI1M0Rzcl9wZ180XFx4MjUyNnNwcmVmaXhcXHgyNTNEaXBob25lXFx4MjUyNTJDYXBzXFx4MjUyNTJDMjYyXFx4MjUyNnJlZl9cXHgyNTNEbmF2U2lnbkluVXJsUmVmVGFnUGxhY2VIb2xkZXJcXHgyNm9wZW5pZC5pZGVudGl0eVxceDNEaHR0cFxceDI1M0FcXHgyNTJGXFx4MjUyRnNwZWNzLm9wZW5pZC5uZXRcXHgyNTJGYXV0aFxceDI1MkYyLjBcXHgyNTJGaWRlbnRpZmllcl9zZWxlY3RcXHgyNm9wZW5pZC5hc3NvY19oYW5kbGVcXHgzRHVzZmxleFxceDI2b3BlbmlkLm1vZGVcXHgzRGNoZWNraWRfc2V0dXBcXHgyNm9wZW5pZC5jbGFpbWVkX2lkXFx4M0RodHRwXFx4MjUzQVxceDI1MkZcXHgyNTJGc3BlY3Mub3BlbmlkLm5ldFxceDI1MkZhdXRoXFx4MjUyRjIuMFxceDI1MkZpZGVudGlmaWVyX3NlbGVjdFxceDI2b3BlbmlkLm5zXFx4M0RodHRwXFx4MjUzQVxceDI1MkZcXHgyNTJGc3BlY3Mub3BlbmlkLm5ldFxceDI1MkZhdXRoXFx4MjUyRjIuMFxceDI2Jyk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzU21pbGUnLGZhbHNlKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcucmVnaW9uYWxTdG9yZXMnLFtdKTtcblxud2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdjb25maWcuaXNBTEZSZWRlc2lnblBUMicsdHJ1ZSk7XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnLmlzTmF2QUxGUmVnaXN0cnlHaWZ0TGlzdCcsZmFsc2UpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5tYXJrZXRwbGFjZUlkJywnQVRWUERLSUtYMERFUicpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5leHBvcnRUcmFuc2l0aW9uU3RhdGUnLCdpbicpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5lbmFibGVBZWVYb3BGbHlvdXQnLHRydWUpO1xuXG53aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5pc1ByaW1lRmx5b3V0TWlncmF0aW9uRW5hYmxlZCcsZmFsc2UpO1xuXG5pZiAod2luZG93LlAgJiYgdHlwZW9mIHdpbmRvdy5QLmRlY2xhcmUgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2Ygd2luZG93LlAubm93ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgd2luZG93LlAubm93KCdwYWNrYXJkR2xvd0luZ3Jlc3NKc0VuYWJsZWQnKS5leGVjdXRlKGZ1bmN0aW9uKGdsb3dFbmFibGVkKSB7XG4gICAgaWYgKCFnbG93RW5hYmxlZCkge1xuICAgICAgd2luZG93LlAuZGVjbGFyZSgncGFja2FyZEdsb3dJbmdyZXNzSnNFbmFibGVkJywgdHJ1ZSk7XG4gICAgfVxuICB9KTtcbiAgd2luZG93LlAubm93KCdwYWNrYXJkR2xvd1N0b3JlTmFtZScpLmV4ZWN1dGUoZnVuY3Rpb24oc3RvcmVOYW1lKSB7XG4gICAgaWYgKCFzdG9yZU5hbWUpIHtcbiAgICAgIHdpbmRvdy5QLmRlY2xhcmUoJ3BhY2thcmRHbG93U3RvcmVOYW1lJywnZ2VuZXJpYycpO1xuICAgIH1cbiAgfSk7XG59XG5cbndpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnY29uZmlnQ29tcGxldGUnKTtcblxuICAgIC0tPlxuPC9zY3JpcHQ+XG5cblxuPGEgaWQ9XCJza2lwcGVkTGlua1wiIHRhYmluZGV4PVwiLTFcIj48L2E+XG5cbjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz53aW5kb3cubmF2bWV0Lk1haW5FbmQgPSBuZXcgRGF0ZSgpOzwvc2NyaXB0PlxuPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+XG4gICAgaWYgKHdpbmRvdy51ZV90MCkge1xuICAgICAgd2luZG93Lm5hdm1ldC5wdXNoKHtrZXk6XCJOYXZNYWluRW5kXCIsZW5kOituZXcgRGF0ZSgpLGJlZ2luOndpbmRvdy51ZV90MH0pO1xuICAgIH1cbjwvc2NyaXB0PlxuPCEtLSBzcDplbmQtZmVhdHVyZTpuYXZiYXIgLS0+XG48IS0tIHNwOmZlYXR1cmU6aG9zdC1hdGYgLS0+XG5cblxuXG5cbjxkaXYgaWQ9XCJzZWFyY2hcIj5cbiAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG48c2NyaXB0PlAuZGVjbGFyZSgnc1xcLWNsZWFuXFwtdXJsJywgXCJcXC9zP2s9aXBob25lXFx4MjZwYWdlPTRcXHgyNnFpZD0xNjQxMzAzMzMzXFx4MjZzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MlxceDI2cmVmPXNyX3BnXzRcIik7PC9zY3JpcHQ+XG48c2NyaXB0PlAuZGVjbGFyZSgnc1xcLWRldmljZVxcLWVudicsIFwiV0VCXCIpOzwvc2NyaXB0PlxuXG5cbjxzY3JpcHQ+UC5kZWNsYXJlKCdhYXBpXFwtdG9rZW5cXC1kY3AnLCBcIjFAZzRZR21NdzNUN3p4b0V4S0lacEtOT09iaTFBXFwvY1pcXC9aKzBNdjdqeFZiSE5kQUFBQUFRQUFBQUJoMjBMWmNtRjNBQUFBQUdmQTFINW5kOHhHRWNDMzJGaDFCQT09QE5GVDhJRVwiKTs8L3NjcmlwdD5cbjxzY3JpcHQ+UC5kZWNsYXJlKCdzXFwtc3dyc1xcLXZlcnNpb24nLCBcIkQzRTdEMzQyQkQ4MThCMTI5MThGMzlGNzU2N0Q1QjA2LEQ0MUQ4Q0Q5OEYwMEIyMDRFOTgwMDk5OEVDRjg0MjdFXCIpOzwvc2NyaXB0PlxuPHNjcmlwdD5QLmRlY2xhcmUoJ3NcXC1vcHRpbWl6ZWRcXC1wYWdpbmF0aW9uXFwtZW5hYmxlZCcsIHRydWUpOzwvc2NyaXB0PlxuPHNjcmlwdD5QLmRlY2xhcmUoJ3NcXC1vcHRpbWl6ZWRcXC1wYWdpbmF0aW9uXFwtY29uZmlnJywge1wicHJlZmV0Y2hUYXJnZXRJbmRleFwiOjIsXCJlbmFibGVkXCI6dHJ1ZX0pOzwvc2NyaXB0PlxuPHNjcmlwdD5QLmRlY2xhcmUoJ3NcXC1uYXZiYXJcXC1wcmVmZXRjaFxcLWNvbmZpZycsIHtcInBhc3RlRW5hYmxlZFwiOmZhbHNlLFwicGF1c2VFbmFibGVkXCI6ZmFsc2UsXCJwYXVzZVRpbWVvdXRcIjowLFwibWluS2V5d29yZExlblwiOjB9KTs8L3NjcmlwdD5cbjxzY3JpcHQ+UC5kZWNsYXJlKCdzXFwtYWpheFxcLWNhbGxzXFwtdmlhXFwtaHR0cFxcLXBvc3RcXC1lbmFibGVkJywgdHJ1ZSk7PC9zY3JpcHQ+XG48c2NyaXB0PlAuZGVjbGFyZSgnc1xcLWFqYXhcXC1jdXN0b21lclxcLWFjdGlvblxcLWZsYWdnaW5nXFwtZW5hYmxlZCcsIHRydWUpOzwvc2NyaXB0PlxuXG5cbjxzY3JpcHQ+UC5kZWNsYXJlKCdzXFwtbWV0YWRhdGEnLCB7XCJ0b3RhbFJlc3VsdENvdW50XCI6MTcwOCxcImFzaW5PblBhZ2VDb3VudFwiOjIwLFwic2VhcmNoQWxpYXNcIjpcImFwc1wiLFwia2V5d29yZHNcIjpcImlwaG9uZVwiLFwic3RvcmVcIjpcImdhdGV3YXlcIixcIm1lcmNoYW50SWRcIjpcIlwiLFwibWVyY2hhbnROYW1lXCI6XCJcIixcInBsYWNlaG9sZGVyVGV4dFwiOlwiXCIsXCJyaWRcIjpcIjFRNzBNNzhDQ1M4QVM5OVJNQ0E4XCIsXCJwYWdlXCI6NCxcInJlc2NvcGVQYXJhbWV0ZXJcIjpcIm5cIixcInJlc2NvcGVOb2RlXCI6XCJcIn0pOzwvc2NyaXB0PlxuXG5cblxuICAgIFxuXG4gICAgXG5cblxuXG48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1yZXN1bHQtaW5mby1iYXJcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+XG4gICAgXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG48ZGl2IGRhdGEtdXVpZD1cIjcwYWM5MjQxLTlmNjctNGRkNC1iNTA2LTI3ZGFkYzY0NmI1ZVwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJVUFBFUi1SRVNVTFRfSU5GT19CQVItMFwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9VVBQRVIgdGVtcGxhdGU9UkVTVUxUX0lORk9fQkFSIHdpZGdldElkPXJlc3VsdC1pbmZvLWJhclwiPlxuICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICAgICAgPGgxIGNsYXNzPVwiYS1zaXplLWJhc2Ugcy1kZXNrdG9wLXRvb2xiYXIgYS10ZXh0LW5vcm1hbFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInMtZGVza3RvcC13aWR0aC1tYXggc2ctcm93LWFsaWduLWl0ZW1zLWNlbnRlciBzZy1yb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNnLWNvbC0xNC1vZi0yMCBzZy1jb2wgcy1icmVhZGNydW1iIHNnLWNvbC0xMC1vZi0xNiBzZy1jb2wtNi1vZi0xMlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsIGEtc3BhY2luZy10b3Atc21hbGxcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBkaXI9XCJhdXRvXCI+NDktNjQgb2Ygb3ZlciAxLDAwMCByZXN1bHRzIGZvcjwvc3Bhbj48c3BhbiBkaXI9XCJhdXRvXCI+IDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtY29sb3Itc3RhdGUgYS10ZXh0LWJvbGRcIiBkaXI9XCJhdXRvXCI+JiMzNDtpcGhvbmUmIzM0Ozwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNnLWNvbC02LW9mLTIwIHNnLWNvbCBzZy1jb2wtNi1vZi0xNiBzZy1jb2wtNi1vZi0xMlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsIGEtc3BhY2luZy10b3Atc21hbGwgYS10ZXh0LXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48Zm9ybSBtZXRob2Q9XCJnZXRcIiBhY3Rpb249XCIvc1wiIGNsYXNzPVwiYW9rLWlubGluZS1ibG9jayBhLXNwYWNpbmctbm9uZVwiPlxuICAgIFxuICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJrXCIgdmFsdWU9XCJpcGhvbmVcIi8+XG4gICAgXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInBhZ2VcIiB2YWx1ZT1cIjRcIi8+XG4gICAgXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInFpZFwiIHZhbHVlPVwiMTY0MTc1OTQ0OVwiLz5cbiAgICBcbiAgICAgICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwic3ByZWZpeFwiIHZhbHVlPVwiaXBob25lLGFwcywyNjJcIi8+XG4gICAgXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInJlZlwiIHZhbHVlPVwic3JfcGdfNFwiLz5cbiAgICBcbiAgICA8c3BhbiBjbGFzcz1cImEtZHJvcGRvd24tY29udGFpbmVyXCI+PGxhYmVsIGZvcj1cInMtcmVzdWx0LXNvcnQtc2VsZWN0XCIgY2xhc3M9XCJhLW5hdGl2ZS1kcm9wZG93blwiPlNvcnQgYnk6PC9sYWJlbD48c2VsZWN0IG5hbWU9XCJzXCIgYXV0b2NvbXBsZXRlPVwib2ZmXCIgaWQ9XCJzLXJlc3VsdC1zb3J0LXNlbGVjdFwiIHRhYmluZGV4PVwiMFwiIGRhdGEtYWN0aW9uPVwiYS1kcm9wZG93bi1zZWxlY3RcIiBjbGFzcz1cImEtbmF0aXZlLWRyb3Bkb3duIGEtZGVjbGFyYXRpdmVcIj5cbiAgICAgICAgXG4gICAgICAgICAgICA8b3B0aW9uIGRhdGEtdXJsPVwiL3M/az1pcGhvbmUmYW1wO3M9cmVsZXZhbmNlYmxlbmRlciZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3Jfc3RfcmVsZXZhbmNlYmxlbmRlclwiIHZhbHVlPVwicmVsZXZhbmNlYmxlbmRlclwiIHNlbGVjdGVkPkZlYXR1cmVkPC9vcHRpb24+XG4gICAgICAgIFxuICAgICAgICAgICAgPG9wdGlvbiBkYXRhLXVybD1cIi9zP2s9aXBob25lJmFtcDtzPXByaWNlLWFzYy1yYW5rJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9zdF9wcmljZS1hc2MtcmFua1wiIHZhbHVlPVwicHJpY2UtYXNjLXJhbmtcIj5QcmljZTogTG93IHRvIEhpZ2g8L29wdGlvbj5cbiAgICAgICAgXG4gICAgICAgICAgICA8b3B0aW9uIGRhdGEtdXJsPVwiL3M/az1pcGhvbmUmYW1wO3M9cHJpY2UtZGVzYy1yYW5rJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9zdF9wcmljZS1kZXNjLXJhbmtcIiB2YWx1ZT1cInByaWNlLWRlc2MtcmFua1wiPlByaWNlOiBIaWdoIHRvIExvdzwvb3B0aW9uPlxuICAgICAgICBcbiAgICAgICAgICAgIDxvcHRpb24gZGF0YS11cmw9XCIvcz9rPWlwaG9uZSZhbXA7cz1yZXZpZXctcmFuayZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3Jfc3RfcmV2aWV3LXJhbmtcIiB2YWx1ZT1cInJldmlldy1yYW5rXCI+QXZnLiBDdXN0b21lciBSZXZpZXc8L29wdGlvbj5cbiAgICAgICAgXG4gICAgICAgICAgICA8b3B0aW9uIGRhdGEtdXJsPVwiL3M/az1pcGhvbmUmYW1wO3M9ZGF0ZS1kZXNjLXJhbmsmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX3N0X2RhdGUtZGVzYy1yYW5rXCIgdmFsdWU9XCJkYXRlLWRlc2MtcmFua1wiPk5ld2VzdCBBcnJpdmFsczwvb3B0aW9uPlxuICAgICAgICBcbiAgICA8L3NlbGVjdD48c3BhbiB0YWJpbmRleD1cIi0xXCIgYXJpYS1sYWJlbD1cIlNvcnQgYnk6XCIgY2xhc3M9XCJhLWJ1dHRvbiBhLWJ1dHRvbi1kcm9wZG93biBhLWJ1dHRvbi1zbWFsbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj48c3BhbiBjbGFzcz1cImEtYnV0dG9uLXRleHQgYS1kZWNsYXJhdGl2ZVwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtZHJvcGRvd24tYnV0dG9uXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtaW50ZXJhY3Rpb24tZXZlbnRzPVwiY2xpY2tcIiBkYXRhLWFjdGlvbj1cImEtZHJvcGRvd24tYnV0dG9uXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLWRyb3Bkb3duLWxhYmVsXCI+U29ydCBieTo8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLWRyb3Bkb3duLXByb21wdFwiPkZlYXR1cmVkPC9zcGFuPjwvc3Bhbj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tZHJvcGRvd25cIj48L2k+PC9zcGFuPjwvc3Bhbj48L3NwYW4+XG4gICAgPG5vc2NyaXB0PjxzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1idXR0b24tYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj48aW5wdXQgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dFwiIHR5cGU9XCJzdWJtaXRcIiB2YWx1ZT1cIkdvXCIvPjxzcGFuIGNsYXNzPVwiYS1idXR0b24tdGV4dFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPkdvPC9zcGFuPjwvc3Bhbj48L3NwYW4+PC9ub3NjcmlwdD5cbjwvZm9ybT5cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PjwvZGl2PlxuICAgIDwvZGl2PlxuICAgICAgICA8L2gxPlxuICAgIFxuICAgIFxuXG5cbjwvc3Bhbj5cblxuPC9kaXY+XG5cblxuICAgIFxuPC9zcGFuPlxuXG48ZGl2IGNsYXNzPVwicy1kZXNrdG9wLXdpZHRoLW1heCBzLWRlc2t0b3AtY29udGVudCBzLW9wcG9zaXRlLWRpciBzZy1yb3dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzLW1hdGNoaW5nLWRpciBzZy1jb2wtMTYtb2YtMjAgc2ctY29sIHNnLWNvbC04LW9mLTEyIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICAgICAgICA8ZGl2IGlkPVwicy1za2lwTGlua1RhcmdldEZvck1haW5TZWFyY2hSZXN1bHRzXCIgdGFiaW5kZXg9XCItMVwiPjwvZGl2PlxuXG4gICAgICAgICAgPHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtdG9wLXNsb3RcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICA8c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy10b3AtYmFubmVyXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgPC9zcGFuPlxuXG5cblxuICAgICAgICAgIDxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRzXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudCBzLWxhdGVuY3ktY2Ytc2VjdGlvblwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicy1yZXN1bHQtbGlzdCBzLXNlYXJjaC1yZXN1bHRzIHNnLXJvd1wiPlxuICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzLWJvcmRlci10b3Atb3ZlcmxhcCBhb2staGlkZGVuXCI+PC9kaXY+XG4gICAgICAgIFxuICAgIFxuXG5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicy1tYWluLXNsb3Qgcy1yZXN1bHQtbGlzdCBzLXNlYXJjaC1yZXN1bHRzIHNnLXJvd1wiPlxuICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG4gICAgXG5cblxuXG5cbjxpbWdcbiAgICBhbHQ9XCJcIlxuICAgIGNsYXNzPVwicy1wcmVmZXRjaC1pbWFnZVwiXG4gICAgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwTnhVSjhnLUwuX0FDX1VZMjE4Xy5qcGdcIlxuICAgIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxcE54VUo4Zy1MLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXBOeFVKOGctTC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxcE54VUo4Zy1MLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxcE54VUo4Zy1MLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwTnhVSjhnLUwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiXG4vPlxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG5cblxuPGltZ1xuICAgIGFsdD1cIlwiXG4gICAgY2xhc3M9XCJzLXByZWZldGNoLWltYWdlXCJcbiAgICBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVViVVdyN054TC5fQUNfVVkyMThfLmpwZ1wiXG4gICAgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFVYlVXcjdOeEwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxVWJVV3I3TnhMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFVYlVXcjdOeEwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFVYlVXcjdOeEwuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVViVVdyN054TC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCJcbi8+XG5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cblxuXG48aW1nXG4gICAgYWx0PVwiXCJcbiAgICBjbGFzcz1cInMtcHJlZmV0Y2gtaW1hZ2VcIlxuICAgIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxdDJpZi1XdDlTLl9BQ19VWTIxOF8uanBnXCJcbiAgICBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXQyaWYtV3Q5Uy5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF0MmlmLVd0OVMuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXQyaWYtV3Q5Uy5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXQyaWYtV3Q5Uy5fQUNfVVk0OTFfUUw2NV8uanBnIDIuMjUyMnhcIlxuLz5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuXG5cbjxpbWdcbiAgICBhbHQ9XCJcIlxuICAgIGNsYXNzPVwicy1wcmVmZXRjaC1pbWFnZVwiXG4gICAgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFaUXZLeEZlcEwuX0FDX1VZMjE4Xy5qcGdcIlxuICAgIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxWlF2S3hGZXBMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVpRdkt4RmVwTC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxWlF2S3hGZXBMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxWlF2S3hGZXBMLl9BQ19VWTUwMF9RTDY1Xy5qcGcgMi4yOTM1eFwiXG4vPlxuXG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG5cblxuPGltZ1xuICAgIGFsdD1cIlwiXG4gICAgY2xhc3M9XCJzLXByZWZldGNoLWltYWdlXCJcbiAgICBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MTBvaEZDTTgxTC5fQUNfVVkyMThfLmpwZ1wiXG4gICAgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjEwb2hGQ004MUwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxMG9oRkNNODFMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjEwb2hGQ004MUwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjEwb2hGQ004MUwuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MTBvaEZDTTgxTC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCJcbi8+XG5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cblxuXG48aW1nXG4gICAgYWx0PVwiXCJcbiAgICBjbGFzcz1cInMtcHJlZmV0Y2gtaW1hZ2VcIlxuICAgIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzMxa29DdjN1SHhMLl9BQ19VWTIxOF8uanBnXCJcbiAgICBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS8zMWtvQ3YzdUh4TC5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFrb0N2M3VIeEwuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS8zMWtvQ3YzdUh4TC5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS8zMWtvQ3YzdUh4TC5fQUNfVVk1MDBfUUw2NV8uanBnIDIuMjkzNXhcIlxuLz5cblxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDdLN0RQS1NEXCIgZGF0YS1pbmRleD1cIjZcIiBkYXRhLXV1aWQ9XCIzY2RkODU4YS1hZDY0LTQzMDUtODM1Yi00MWUzYjliMTYxZjNcIiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1zZWFyY2gtcmVzdWx0XCIgY2xhc3M9XCJzLXJlc3VsdC1pdGVtIHMtYXNpbiBzZy1jb2wtMC1vZi0xMiBzZy1jb2wtMTYtb2YtMjAgQWRIb2xkZXIgc2ctY29sIHMtd2lkZ2V0LXNwYWNpbmctc21hbGwgc2ctY29sLTEyLW9mLTE2XCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJNQUlOLVNFQVJDSF9SRVNVTFRTLTZcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNDlcIj5cbiAgICBcblxuXG48ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWltcHJlc3Npb24tbG9nZ2VyXCIgZGF0YS1jb21wb25lbnQtcHJvcHM9XCJ7JiMzNDtwZXJjZW50YWdlU2hvd25Ub0ZpcmUmIzM0OzomIzM0OzUwJiMzNDssJiMzNDtiYXRjaGFibGUmIzM0Ozp0cnVlLCYjMzQ7cmVxdWlyZWRFbGVtZW50U2VsZWN0b3ImIzM0OzomIzM0Oy5zLWltYWdlOnZpc2libGUmIzM0OywmIzM0O3VybCYjMzQ7OiYjMzQ7aHR0cHM6Ly91bmFnaS1uYS5hbWF6b24uY29tLzEvZXZlbnRzL2NvbS5hbWF6b24uZWVsLlNwb25zb3JlZFByb2R1Y3RzRXZlbnRUcmFja2luZy5wcm9kP3F1YWxpZmllcj0xNjQxNzU5NDQ5JmFtcDtpZD00NDE2ODgzNTU5MTY2NjUxJmFtcDt3aWRnZXROYW1lPXNwX2F0Zl9uZXh0JmFtcDthZElkPTIwMDA2MjY4NzIwNDQ4MSZhbXA7ZXZlbnRUeXBlPTEmYW1wO2FkSW5kZXg9MCYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICBcblxuXG48ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWltcHJlc3Npb24tY291bnRlclwiIGRhdGEtY29tcG9uZW50LXByb3BzPVwieyYjMzQ7cHJlc2VuY2VDb3VudGVyTmFtZSYjMzQ7OiYjMzQ7c3BfZGVsaXZlcmVkJiMzNDssJiMzNDt0ZXN0RWxlbWVudFNlbGVjdG9yJiMzNDs6JiMzNDsucy1pbWFnZSYjMzQ7LCYjMzQ7aGlkZGVuQ291bnRlck5hbWUmIzM0OzomIzM0O3NwX2hpZGRlbiYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnQgcy1mZWF0dXJlZC1yZXN1bHQtaXRlbSBcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2F0Zl9uZXh0X2Fwc19zcl9wZzRfMT9pZT1VVEY4JmFtcDthZElkPUEwMDYwNDk1MkRTR0QzNTJJOERTWSZhbXA7dXJsPSUyRlBob25lLUNhci1QZW5vbS1Ib2xkZXItU21hcnRwaG9uZXMlMkZkcCUyRkIwN0s3RFBLU0QlMkZyZWYlM0Rzcl8xXzQ5X3NzcGElM0ZrZXl3b3JkcyUzRGlwaG9uZSUyNnFpZCUzRDE2NDE3NTk0NDklMjZzcHJlZml4JTNEaXBob25lJTI1MkNhcHMlMjUyQzI2MiUyNnNyJTNEOC00OS1zcG9ucyUyNnBzYyUzRDEmYW1wO3F1YWxpZmllcj0xNjQxNzU5NDQ5JmFtcDtpZD00NDE2ODgzNTU5MTY2NjUxJmFtcDt3aWRnZXROYW1lPXNwX2F0Zl9uZXh0XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxcE54VUo4Zy1MLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwTnhVSjhnLUwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxcE54VUo4Zy1MLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwTnhVSjhnLUwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwTnhVSjhnLUwuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXBOeFVKOGctTC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCIgYWx0PVwiU3BvbnNvcmVkIEFkIC0gQ2FyIFBob25lIE1vdW50LCBNYWduZXRpYyBIb2xkZXIgZm9yIGlQaG9uZSBBY2Nlc3NvcmllcywgMiBBaXIgVmVudCBNYWduZXQgZm9yIFVuaXZlcnNhbCBDZWxsIFBob25lXCIgZGF0YS1pbWFnZS1pbmRleD1cIjQ5XCIgZGF0YS1pbWFnZS1sb2FkPVwiXCIgZGF0YS1pbWFnZS1sYXRlbmN5PVwicy1wcm9kdWN0LWltYWdlXCIgZGF0YS1pbWFnZS1zb3VyY2UtZGVuc2l0eT1cIjFcIi8+PC9kaXY+PC9hPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC04LW9mLTE2IHNnLWNvbC0xMi1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzLXRpdGxlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7ZGF0YVN0cmF0ZWd5JnF1b3Q7OiZxdW90O3ByZWxvYWQmcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcC1pbmZvLXBvcG92ZXItQjA3SzdEUEtTRCZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyVmVydGljYWwmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBzdHlsZT1cInRleHQtZGVjb3JhdGlvbjogbm9uZTtcIiBhcmlhLWxhYmVsPVwiVmlldyBTcG9uc29yZWQgaW5mb3JtYXRpb24gb3IgbGVhdmUgYWQgZmVlZGJhY2tcIiBjbGFzcz1cInMtbGFiZWwtcG9wb3ZlciBzLXNwb25zb3JlZC1sYWJlbC10ZXh0XCI+PHNwYW4gY2xhc3M9XCJzLWxhYmVsLXBvcG92ZXItZGVmYXVsdFwiPjxzcGFuIGNsYXNzPVwiYS1jb2xvci1zZWNvbmRhcnlcIj5TcG9uc29yZWQ8L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwicy1sYWJlbC1wb3BvdmVyLWhvdmVyXCI+PHNwYW4gY2xhc3M9XCJhLWNvbG9yLWJhc2VcIj5TcG9uc29yZWQ8L3NwYW4+PC9zcGFuPiA8c3BhbiBjbGFzcz1cImFvay1pbmxpbmUtYmxvY2sgcy1zcG9uc29yZWQtbGFiZWwtaW5mby1pY29uXCI+PC9zcGFuPjwvYT48L3NwYW4+PGRpdiBjbGFzcz1cImEtcG9wb3Zlci1wcmVsb2FkXCIgaWQ9XCJhLXBvcG92ZXItc3AtaW5mby1wb3BvdmVyLUIwN0s3RFBLU0RcIj48c3Bhbj5Zb3XigJlyZSBzZWVpbmcgdGhpcyBhZCBiYXNlZCBvbiB0aGUgcHJvZHVjdOKAmXMgcmVsZXZhbmNlIHRvIHlvdXIgc2VhcmNoIHF1ZXJ5Ljwvc3Bhbj48ZGl2IGNsYXNzPVwiYS1yb3dcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtc2FmZS1hamF4LW1vZGFsLXRyaWdnZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLXNhZmUtYWpheC1tb2RhbC10cmlnZ2VyXCIgZGF0YS1zLXNhZmUtYWpheC1tb2RhbC10cmlnZ2VyPVwieyZxdW90O2FqYXhVcmwmcXVvdDs6JnF1b3Q7L2FmL3NwLWxvb20vZmVlZGJhY2stZm9ybT9wbD0lN0IlMjJhZFBsYWNlbWVudE1ldGFEYXRhJTIyJTNBJTdCJTIyc2VhcmNoVGVybXMlMjIlM0ElMjJhWEJvYjI1bCUyMiUyQyUyMnBhZ2VUeXBlJTIyJTNBJTIyU2VhcmNoJTIyJTJDJTIyZmVlZGJhY2tUeXBlJTIyJTNBJTIyc3BvbnNvcmVkUHJvZHVjdHNMb29tJTIyJTJDJTIyc2xvdE5hbWUlMjIlM0ElMjJUT1AlMjIlN0QlMkMlMjJhZENyZWF0aXZlTWV0YURhdGElMjIlM0ElN0IlMjJhZFByb2dyYW1JZCUyMiUzQTEwMjQlMkMlMjJhZENyZWF0aXZlRGV0YWlscyUyMiUzQSU1QiU3QiUyMmFzaW4lMjIlM0ElMjJCMDdLN0RQS1NEJTIyJTJDJTIydGl0bGUlMjIlM0ElMjJDYXIrUGhvbmUrTW91bnQlMkMrTWFnbmV0aWMrSG9sZGVyK2ZvcitpUGhvbmUrQWNjZXNzb3JpZXMlMkMrMitBaXIrVmVudCtNYWduZXQrZm9yK1VuaXZlcnNhbCtDZWxsK1Bob25lJTIyJTJDJTIycHJpY2VJbmZvJTIyJTNBJTdCJTIyYW1vdW50JTIyJTNBMTUuOTglMkMlMjJjdXJyZW5jeUNvZGUlMjIlM0ElMjJVU0QlMjIlN0QlMkMlMjJza3UlMjIlM0ElMjJGUzQ3LUJsYWNrLWhhb3BpbmclMjIlMkMlMjJhZElkJTIyJTNBJTIyQTAwNjA0OTUyRFNHRDM1Mkk4RFNZJTIyJTJDJTIyY2FtcGFpZ25JZCUyMiUzQSUyMkEwNDMxNzc3M0pGSVhFN1lPMUpQNCUyMiU3RCU1RCU3RCU3RCZxdW90OywmcXVvdDtkYXRhU3RyYXRlZ3kmcXVvdDs6JnF1b3Q7YWpheCZxdW90OywmcXVvdDtoZWFkZXImcXVvdDs6JnF1b3Q7U2hhcmUgeW91ciBmZWVkYmFjayZxdW90O31cIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIiNcIj48c3Bhbj5MZWF2ZSBhZCBmZWVkYmFjazwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1wYV9zcF9hdGZfbmV4dF9hcHNfc3JfcGc0XzE/aWU9VVRGOCZhbXA7YWRJZD1BMDA2MDQ5NTJEU0dEMzUySThEU1kmYW1wO3VybD0lMkZQaG9uZS1DYXItUGVub20tSG9sZGVyLVNtYXJ0cGhvbmVzJTJGZHAlMkZCMDdLN0RQS1NEJTJGcmVmJTNEc3JfMV80OV9zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNDktc3BvbnMlMjZwc2MlM0QxJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9hdGZfbmV4dFwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkNhciBQaG9uZSBNb3VudCwgTWFnbmV0aWMgSG9sZGVyIGZvciBpUGhvbmUgQWNjZXNzb3JpZXMsIDIgQWlyIFZlbnQgTWFnbmV0IGZvciBVbml2ZXJzYWwgQ2VsbCBQaG9uZTwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNC41IG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA3SzdEUEtTRCZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNC01IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjUgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiMTEsOTQ5XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9cGFfc3BfYXRmX25leHRfYXBzX3NyX3BnNF8xP2llPVVURjgmYW1wO2FkSWQ9QTAwNjA0OTUyRFNHRDM1Mkk4RFNZJmFtcDt1cmw9JTJGUGhvbmUtQ2FyLVBlbm9tLUhvbGRlci1TbWFydHBob25lcyUyRmRwJTJGQjA3SzdEUEtTRCUyRnJlZiUzRHNyXzFfNDlfc3NwYSUzRmtleXdvcmRzJTNEaXBob25lJTI2cWlkJTNEMTY0MTc1OTQ0OSUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2c3IlM0Q4LTQ5LXNwb25zJTI2cHNjJTNEMSZhbXA7cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYXRmX25leHQjY3VzdG9tZXJSZXZpZXdzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPjExLDk0OTwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9cGFfc3BfYXRmX25leHRfYXBzX3NyX3BnNF8xP2llPVVURjgmYW1wO2FkSWQ9QTAwNjA0OTUyRFNHRDM1Mkk4RFNZJmFtcDt1cmw9JTJGUGhvbmUtQ2FyLVBlbm9tLUhvbGRlci1TbWFydHBob25lcyUyRmRwJTJGQjA3SzdEUEtTRCUyRnJlZiUzRHNyXzFfNDlfc3NwYSUzRmtleXdvcmRzJTNEaXBob25lJTI2cWlkJTNEMTY0MTc1OTQ0OSUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2c3IlM0Q4LTQ5LXNwb25zJTI2cHNjJTNEMSZhbXA7cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYXRmX25leHRcIj48c3BhbiBjbGFzcz1cImEtcHJpY2VcIiBkYXRhLWEtc2l6ZT1cImxcIiBkYXRhLWEtY29sb3I9XCJiYXNlXCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQxNS45ODwvc3Bhbj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj48c3BhbiBjbGFzcz1cImEtcHJpY2Utc3ltYm9sXCI+JDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2Utd2hvbGVcIj4xNTxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+OTg8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPC9hPiA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcy1hbGlnbi1jaGlsZHJlbi1jZW50ZXJcIj48c3BhbiBhcmlhLWxhYmVsPVwiR2V0IGl0IGFzIHNvb24gYXMgVGh1LCBKYW4gMTNcIj48c3Bhbj5HZXQgaXQgYXMgc29vbiBhcyA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPlRodSwgSmFuIDEzPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9kaXY+XG5cbjwvZGl2PlxuXG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDlLR1ZIUkNTXCIgZGF0YS1pbmRleD1cIjdcIiBkYXRhLXV1aWQ9XCI5NWMxNjk3My02Yzg4LTQwZTQtYTU3Yy1jYmFiNTNhMWQxNGNcIiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1zZWFyY2gtcmVzdWx0XCIgY2xhc3M9XCJzLXJlc3VsdC1pdGVtIHMtYXNpbiBzZy1jb2wtMC1vZi0xMiBzZy1jb2wtMTYtb2YtMjAgQWRIb2xkZXIgc2ctY29sIHMtd2lkZ2V0LXNwYWNpbmctc21hbGwgc2ctY29sLTEyLW9mLTE2XCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJNQUlOLVNFQVJDSF9SRVNVTFRTLTdcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNTBcIj5cbiAgICBcblxuXG48ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWltcHJlc3Npb24tbG9nZ2VyXCIgZGF0YS1jb21wb25lbnQtcHJvcHM9XCJ7JiMzNDtwZXJjZW50YWdlU2hvd25Ub0ZpcmUmIzM0OzomIzM0OzUwJiMzNDssJiMzNDtiYXRjaGFibGUmIzM0Ozp0cnVlLCYjMzQ7cmVxdWlyZWRFbGVtZW50U2VsZWN0b3ImIzM0OzomIzM0Oy5zLWltYWdlOnZpc2libGUmIzM0OywmIzM0O3VybCYjMzQ7OiYjMzQ7aHR0cHM6Ly91bmFnaS1uYS5hbWF6b24uY29tLzEvZXZlbnRzL2NvbS5hbWF6b24uZWVsLlNwb25zb3JlZFByb2R1Y3RzRXZlbnRUcmFja2luZy5wcm9kP3F1YWxpZmllcj0xNjQxNzU5NDQ5JmFtcDtpZD00NDE2ODgzNTU5MTY2NjUxJmFtcDt3aWRnZXROYW1lPXNwX2F0Zl9uZXh0JmFtcDthZElkPTIwMDAyODQ3NDYzMzA5OCZhbXA7ZXZlbnRUeXBlPTEmYW1wO2FkSW5kZXg9MSYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICBcblxuXG48ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWltcHJlc3Npb24tY291bnRlclwiIGRhdGEtY29tcG9uZW50LXByb3BzPVwieyYjMzQ7cHJlc2VuY2VDb3VudGVyTmFtZSYjMzQ7OiYjMzQ7c3BfZGVsaXZlcmVkJiMzNDssJiMzNDt0ZXN0RWxlbWVudFNlbGVjdG9yJiMzNDs6JiMzNDsucy1pbWFnZSYjMzQ7LCYjMzQ7aGlkZGVuQ291bnRlck5hbWUmIzM0OzomIzM0O3NwX2hpZGRlbiYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnQgcy1mZWF0dXJlZC1yZXN1bHQtaXRlbSBcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2F0Zl9uZXh0X2Fwc19zcl9wZzRfMT9pZT1VVEY4JmFtcDthZElkPUEwNDEyNzIxS0lHUlhOMTVMM0JNJmFtcDt1cmw9JTJGQ2hhcmdlci1MRE5JTy1DaGFyZ2luZy1Db21wYXRpYmxlLUluY2x1ZGVkJTJGZHAlMkZCMDlLR1ZIUkNTJTJGcmVmJTNEc3JfMV81MF9zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNTAtc3BvbnMlMjZwc2MlM0QxJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9hdGZfbmV4dFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVViVVdyN054TC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxVWJVV3I3TnhMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVViVVdyN054TC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxVWJVV3I3TnhMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxVWJVV3I3TnhMLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFVYlVXcjdOeEwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiIGFsdD1cIlNwb25zb3JlZCBBZCAtIFVTQiBDIFdhbGwgQ2hhcmdlciwgTEROSU8gMzJXIDMgUG9ydHMgQ2hhcmdpbmcgQmxvY2tzLCBQRCAyMFcgYW5kIFFDIDE4VyBGYXN0IENoYXJnZXIgQ29tcGF0aWJsZSB3aXRoIGlQaG9uLi4uXCIgZGF0YS1pbWFnZS1pbmRleD1cIjUwXCIgZGF0YS1pbWFnZS1sb2FkPVwiXCIgZGF0YS1pbWFnZS1sYXRlbmN5PVwicy1wcm9kdWN0LWltYWdlXCIgZGF0YS1pbWFnZS1zb3VyY2UtZGVuc2l0eT1cIjFcIi8+PC9kaXY+PC9hPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC04LW9mLTE2IHNnLWNvbC0xMi1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzLXRpdGxlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OiZxdW90O3RydWUmcXVvdDssJnF1b3Q7ZGF0YVN0cmF0ZWd5JnF1b3Q7OiZxdW90O3ByZWxvYWQmcXVvdDssJnF1b3Q7bmFtZSZxdW90OzomcXVvdDtzcC1pbmZvLXBvcG92ZXItQjA5S0dWSFJDUyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyVmVydGljYWwmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBzdHlsZT1cInRleHQtZGVjb3JhdGlvbjogbm9uZTtcIiBhcmlhLWxhYmVsPVwiVmlldyBTcG9uc29yZWQgaW5mb3JtYXRpb24gb3IgbGVhdmUgYWQgZmVlZGJhY2tcIiBjbGFzcz1cInMtbGFiZWwtcG9wb3ZlciBzLXNwb25zb3JlZC1sYWJlbC10ZXh0XCI+PHNwYW4gY2xhc3M9XCJzLWxhYmVsLXBvcG92ZXItZGVmYXVsdFwiPjxzcGFuIGNsYXNzPVwiYS1jb2xvci1zZWNvbmRhcnlcIj5TcG9uc29yZWQ8L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwicy1sYWJlbC1wb3BvdmVyLWhvdmVyXCI+PHNwYW4gY2xhc3M9XCJhLWNvbG9yLWJhc2VcIj5TcG9uc29yZWQ8L3NwYW4+PC9zcGFuPiA8c3BhbiBjbGFzcz1cImFvay1pbmxpbmUtYmxvY2sgcy1zcG9uc29yZWQtbGFiZWwtaW5mby1pY29uXCI+PC9zcGFuPjwvYT48L3NwYW4+PGRpdiBjbGFzcz1cImEtcG9wb3Zlci1wcmVsb2FkXCIgaWQ9XCJhLXBvcG92ZXItc3AtaW5mby1wb3BvdmVyLUIwOUtHVkhSQ1NcIj48c3Bhbj5Zb3XigJlyZSBzZWVpbmcgdGhpcyBhZCBiYXNlZCBvbiB0aGUgcHJvZHVjdOKAmXMgcmVsZXZhbmNlIHRvIHlvdXIgc2VhcmNoIHF1ZXJ5Ljwvc3Bhbj48ZGl2IGNsYXNzPVwiYS1yb3dcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtc2FmZS1hamF4LW1vZGFsLXRyaWdnZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLXNhZmUtYWpheC1tb2RhbC10cmlnZ2VyXCIgZGF0YS1zLXNhZmUtYWpheC1tb2RhbC10cmlnZ2VyPVwieyZxdW90O2FqYXhVcmwmcXVvdDs6JnF1b3Q7L2FmL3NwLWxvb20vZmVlZGJhY2stZm9ybT9wbD0lN0IlMjJhZFBsYWNlbWVudE1ldGFEYXRhJTIyJTNBJTdCJTIyc2VhcmNoVGVybXMlMjIlM0ElMjJhWEJvYjI1bCUyMiUyQyUyMnBhZ2VUeXBlJTIyJTNBJTIyU2VhcmNoJTIyJTJDJTIyZmVlZGJhY2tUeXBlJTIyJTNBJTIyc3BvbnNvcmVkUHJvZHVjdHNMb29tJTIyJTJDJTIyc2xvdE5hbWUlMjIlM0ElMjJUT1AlMjIlN0QlMkMlMjJhZENyZWF0aXZlTWV0YURhdGElMjIlM0ElN0IlMjJhZFByb2dyYW1JZCUyMiUzQTEwMjQlMkMlMjJhZENyZWF0aXZlRGV0YWlscyUyMiUzQSU1QiU3QiUyMmFzaW4lMjIlM0ElMjJCMDlLR1ZIUkNTJTIyJTJDJTIydGl0bGUlMjIlM0ElMjJVU0IrQytXYWxsK0NoYXJnZXIlMkMrTEROSU8rMzJXKzMrUG9ydHMrQ2hhcmdpbmcrQmxvY2tzJTJDK1BEKzIwVythbmQrUUMrMThXK0Zhc3QrQ2hhcmdlcitDb21wYXRpYmxlK3dpdCUyMiUyQyUyMnByaWNlSW5mbyUyMiUzQSU3QiUyMmFtb3VudCUyMiUzQTE1Ljk5JTJDJTIyY3VycmVuY3lDb2RlJTIyJTNBJTIyVVNEJTIyJTdEJTJDJTIyc2t1JTIyJTNBJTIyQTM1MTNRLVdCVVMlMjIlMkMlMjJhZElkJTIyJTNBJTIyQTA0MTI3MjFLSUdSWE4xNUwzQk0lMjIlMkMlMjJjYW1wYWlnbklkJTIyJTNBJTIyQTAzMjc4MjUyU1hESzdNVE9NV01KJTIyJTdEJTVEJTdEJTdEJnF1b3Q7LCZxdW90O2RhdGFTdHJhdGVneSZxdW90OzomcXVvdDthamF4JnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7fVwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGVcIiBocmVmPVwiI1wiPjxzcGFuPkxlYXZlIGFkIGZlZWRiYWNrPC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2F0Zl9uZXh0X2Fwc19zcl9wZzRfMT9pZT1VVEY4JmFtcDthZElkPUEwNDEyNzIxS0lHUlhOMTVMM0JNJmFtcDt1cmw9JTJGQ2hhcmdlci1MRE5JTy1DaGFyZ2luZy1Db21wYXRpYmxlLUluY2x1ZGVkJTJGZHAlMkZCMDlLR1ZIUkNTJTJGcmVmJTNEc3JfMV81MF9zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNTAtc3BvbnMlMjZwc2MlM0QxJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9hdGZfbmV4dFwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPlVTQiBDIFdhbGwgQ2hhcmdlciwgTEROSU8gMzJXIDMgUG9ydHMgQ2hhcmdpbmcgQmxvY2tzLCBQRCAyMFcgYW5kIFFDIDE4VyBGYXN0IENoYXJnZXIgQ29tcGF0aWJsZSB3aXRoIGlQaG9uZSAxMy8xMyBNaW5pLzEzIFByby8xMyBQcm8gTWF4LzEyLzExLCBpUGFkIE1pbmkvUHJvLFBpeGVsLCBHYWxheHksIEluY2x1ZGVkIDNGVCBVU0IgQyBDYWJsZTwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNS4wIG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA5S0dWSFJDUyZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNSBhb2stYWxpZ24tYm90dG9tXCI+PHNwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NS4wIG91dCBvZiA1IHN0YXJzPC9zcGFuPjwvaT48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPjwvaT48L2E+PC9zcGFuPiA8L3NwYW4+PHNwYW4gYXJpYS1sYWJlbD1cIjFcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1wYV9zcF9hdGZfbmV4dF9hcHNfc3JfcGc0XzE/aWU9VVRGOCZhbXA7YWRJZD1BMDQxMjcyMUtJR1JYTjE1TDNCTSZhbXA7dXJsPSUyRkNoYXJnZXItTEROSU8tQ2hhcmdpbmctQ29tcGF0aWJsZS1JbmNsdWRlZCUyRmRwJTJGQjA5S0dWSFJDUyUyRnJlZiUzRHNyXzFfNTBfc3NwYSUzRmtleXdvcmRzJTNEaXBob25lJTI2cWlkJTNEMTY0MTc1OTQ0OSUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2c3IlM0Q4LTUwLXNwb25zJTI2cHNjJTNEMSZhbXA7cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYXRmX25leHQjY3VzdG9tZXJSZXZpZXdzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPjE8L3NwYW4+IDwvYT4gPC9zcGFuPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1zbWFsbCBzLXByaWNlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIj48YSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2F0Zl9uZXh0X2Fwc19zcl9wZzRfMT9pZT1VVEY4JmFtcDthZElkPUEwNDEyNzIxS0lHUlhOMTVMM0JNJmFtcDt1cmw9JTJGQ2hhcmdlci1MRE5JTy1DaGFyZ2luZy1Db21wYXRpYmxlLUluY2x1ZGVkJTJGZHAlMkZCMDlLR1ZIUkNTJTJGcmVmJTNEc3JfMV81MF9zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNTAtc3BvbnMlMjZwc2MlM0QxJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9hdGZfbmV4dFwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZVwiIGRhdGEtYS1zaXplPVwibFwiIGRhdGEtYS1jb2xvcj1cImJhc2VcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDE1Ljk5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjE1PHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj45OTwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGwgYS1jb2xvci1zZWNvbmRhcnlcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1jb3Vwb24tY29tcG9uZW50XCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiIGRhdGEtY29tcG9uZW50LXByb3BzPVwieyZxdW90O2FzaW4mcXVvdDs6JnF1b3Q7QjA5S0dWSFJDUyZxdW90O31cIj48c3BhbiBjbGFzcz1cInMtY291cG9uLWNsaXBwZWQgYW9rLWhpZGRlblwiPjxzcGFuIGNsYXNzPVwiYS1jb2xvci1iYXNlXCI+MzAlIGNvdXBvbiBhcHBsaWVkIGF0IGNoZWNrb3V0PC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cInMtY291cG9uLXVuY2xpcHBlZFwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2Ugcy1oaWdobGlnaHRlZC10ZXh0LXBhZGRpbmcgYW9rLWlubGluZS1ibG9jayBzLWNvdXBvbi1oaWdobGlnaHQtY29sb3JcIj5TYXZlIDMwJTwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJhLWNvbG9yLWJhc2VcIj4gd2l0aCBjb3Vwb248L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBhcyBzb29uIGFzIEZyaSwgSmFuIDE0XCI+PHNwYW4+R2V0IGl0IGFzIHNvb24gYXMgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5GcmksIEphbiAxNDwvc3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtOC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj5cbjwvZGl2PlxuXG48L2Rpdj5cblxuPC9zcGFuPlxuXG48L2Rpdj48L2Rpdj5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cbjxkaXYgZGF0YS1hc2luPVwiQjA5MkxIRzIxR1wiIGRhdGEtaW5kZXg9XCI4XCIgZGF0YS11dWlkPVwiYjJhMzFlZTgtYmFmNS00ZTk2LTgyMTktODVkNDQ3OTkwYzAzXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy04XCIgY2xhc3M9XCJjZWx3aWRnZXQgc2xvdD1NQUlOIHRlbXBsYXRlPVNFQVJDSF9SRVNVTFRTIHdpZGdldElkPXNlYXJjaC1yZXN1bHRzXzUxXCI+XG4gICAgPGRpdiBjbGFzcz1cInMtaW5jbHVkZS1jb250ZW50LW1hcmdpbiBzLWxhdGVuY3ktY2Ytc2VjdGlvbiBzLWJvcmRlci1ib3R0b20gcy1ib3JkZXItdG9wXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvblwiPjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taWNybyBzLW1pbi1oZWlnaHQtc21hbGxcIj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtcHJvZHVjdC1pbWFnZVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uby1vdXRsaW5lXCIgaHJlZj1cIi9TYW1zdW5nLUE3Mi1BNzI1Ri1EUy1GYWN0b3J5LVVubG9ja2VkL2RwL0IwOTJMSEcyMUcvcmVmPXNyXzFfNTE/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNTFcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFvay1yZWxhdGl2ZSBzLWltYWdlLWZpeGVkLWhlaWdodFwiPjxpbWcgY2xhc3M9XCJzLWltYWdlXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF0MmlmLVd0OVMuX0FDX1VZMjE4Xy5qcGdcIiBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXQyaWYtV3Q5Uy5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDF0MmlmLVd0OVMuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXQyaWYtV3Q5Uy5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MXQyaWYtV3Q5Uy5fQUNfVVk0OTFfUUw2NV8uanBnIDIuMjUyMnhcIiBhbHQ9XCJTYW1zdW5nIEdhbGF4eSBBNzIgQTcyNUYtRFMgNEcgRHVhbCAyNTZHQiA4R0IgUkFNIEZhY3RvcnkgVW5sb2NrZWQgKEdTTSBPbmx5IHwgTm8gQ0RNQSAtIG5vdCBDb21wYXRpYmxlIHdpdGggVmVyaXpvbi9TcHJpbi4uLlwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI1MVwiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL1NhbXN1bmctQTcyLUE3MjVGLURTLUZhY3RvcnktVW5sb2NrZWQvZHAvQjA5MkxIRzIxRy9yZWY9c3JfMV81MT9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01MVwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPlNhbXN1bmcgR2FsYXh5IEE3MiBBNzI1Ri1EUyA0RyBEdWFsIDI1NkdCIDhHQiBSQU0gRmFjdG9yeSBVbmxvY2tlZCAoR1NNIE9ubHkgfCBObyBDRE1BIC0gbm90IENvbXBhdGlibGUgd2l0aCBWZXJpem9uL1NwcmludCkgSW50ZXJuYXRpb25hbCBWZXJzaW9uIC0gQXdlc29tZSBXaGl0ZTwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNC40IG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA5MkxIRzIxRyZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNC01IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjQgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiNFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGVcIiBocmVmPVwiL1NhbXN1bmctQTcyLUE3MjVGLURTLUZhY3RvcnktVW5sb2NrZWQvZHAvQjA5MkxIRzIxRy9yZWY9c3JfMV81MT9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01MSNjdXN0b21lclJldmlld3NcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+NDwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvU2Ftc3VuZy1BNzItQTcyNUYtRFMtRmFjdG9yeS1VbmxvY2tlZC9kcC9CMDkyTEhHMjFHL3JlZj1zcl8xXzUxP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTUxXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kNDk0LjAwPC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjQ5NDxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+MDA8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJhLXByaWNlIGEtdGV4dC1wcmljZVwiIGRhdGEtYS1zaXplPVwiYlwiIGRhdGEtYS1zdHJpa2U9XCJ0cnVlXCIgZGF0YS1hLWNvbG9yPVwic2Vjb25kYXJ5XCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQ1MzQuNTA8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JDUzNC41MDwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBhcyBzb29uIGFzIFRodSwgSmFuIDEzXCI+PHNwYW4+R2V0IGl0IGFzIHNvb24gYXMgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5UaHUsIEphbiAxMzwvc3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtOC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj5cbjwvc3Bhbj5cblxuPC9kaXY+PC9kaXY+XG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG48ZGl2IGRhdGEtYXNpbj1cIkIwNzMzWUZCTUpcIiBkYXRhLWluZGV4PVwiOVwiIGRhdGEtdXVpZD1cImRhYjViYmU3LWY4YjItNDA0ZC05MDY3LThkMmVmZWJiM2I1NVwiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gcy1hc2luIHNnLWNvbC0wLW9mLTEyIHNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgcy13aWRnZXQtc3BhY2luZy1zbWFsbCBzZy1jb2wtMTItb2YtMTZcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgXG5cblxuPHNwYW4gY2VsX3dpZGdldF9pZD1cIk1BSU4tU0VBUkNIX1JFU1VMVFMtOVwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c181MlwiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLUFULTMyR0ItUmVmdXJiaXNoZWQvZHAvQjA3MzNZRkJNSi9yZWY9c3JfMV81Mj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01MlwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVpRdkt4RmVwTC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxWlF2S3hGZXBMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVpRdkt4RmVwTC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxWlF2S3hGZXBMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxWlF2S3hGZXBMLl9BQ19VWTUwMF9RTDY1Xy5qcGcgMi4yOTM1eFwiIGFsdD1cIkFwcGxlIGlQaG9uZSA3LCAzMkdCLCBCbGFjayAtIEZvciBBVCZhbXA7VCAoUmVuZXdlZClcIiBkYXRhLWltYWdlLWluZGV4PVwiNTJcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtQVQtMzJHQi1SZWZ1cmJpc2hlZC9kcC9CMDczM1lGQk1KL3JlZj1zcl8xXzUyP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTUyXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItYmFzZSBhLXRleHQtbm9ybWFsXCI+QXBwbGUgaVBob25lIDcsIDMyR0IsIEJsYWNrIC0gRm9yIEFUJmFtcDtUIChSZW5ld2VkKTwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNC4zIG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA3MzNZRkJNSiZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNC01IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjMgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiOTA4XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLUFULTMyR0ItUmVmdXJiaXNoZWQvZHAvQjA3MzNZRkJNSi9yZWY9c3JfMV81Mj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01MiNjdXN0b21lclJldmlld3NcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+OTA4PC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtQVQtMzJHQi1SZWZ1cmJpc2hlZC9kcC9CMDczM1lGQk1KL3JlZj1zcl8xXzUyP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTUyXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kMTU3Ljc3PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjE1NzxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+Nzc8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPC9hPiA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcy1hbGlnbi1jaGlsZHJlbi1jZW50ZXJcIj48c3BhbiBhcmlhLWxhYmVsPVwiR2V0IGl0IFdlZCwgSmFuIDEyIC0gVGh1LCBKYW4gMTNcIj48c3Bhbj5HZXQgaXQgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5XZWQsIEphbiAxMjwvc3Bhbj48c3Bhbj4gLSA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPlRodSwgSmFuIDEzPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9zcGFuPlxuXG48L2Rpdj48L2Rpdj5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cbjxkaXYgZGF0YS1hc2luPVwiQjA4NVRGWU44MVwiIGRhdGEtaW5kZXg9XCIxMFwiIGRhdGEtdXVpZD1cIjAxOTI2NGFhLTA2NmEtNDNjOS1iMTk5LTk0YzNmM2I5YjgyN1wiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gcy1hc2luIHNnLWNvbC0wLW9mLTEyIHNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgcy13aWRnZXQtc3BhY2luZy1zbWFsbCBzZy1jb2wtMTItb2YtMTZcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgXG5cblxuPHNwYW4gY2VsX3dpZGdldF9pZD1cIk1BSU4tU0VBUkNIX1JFU1VMVFMtMTBcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNTNcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS02NEdCLU1pZG5pZ2h0LUdyZWVuL2RwL0IwODVURllOODEvcmVmPXNyXzFfNTM/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNTNcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFvay1yZWxhdGl2ZSBzLWltYWdlLWZpeGVkLWhlaWdodFwiPjxpbWcgY2xhc3M9XCJzLWltYWdlXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjEwb2hGQ004MUwuX0FDX1VZMjE4Xy5qcGdcIiBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MTBvaEZDTTgxTC5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjEwb2hGQ004MUwuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MTBvaEZDTTgxTC5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MTBvaEZDTTgxTC5fQUNfVVk1NDVfUUw2NV8uanBnIDIuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxMG9oRkNNODFMLl9BQ19VWTY1NF9RTDY1Xy5qcGcgM3hcIiBhbHQ9XCJBcHBsZSBpUGhvbmUgMTEgUHJvLCA2NEdCLCBNaWRuaWdodCBHcmVlbiAtIGZvciBCb29zdCBNb2JpbGUgKFJlbmV3ZWQpXCIgZGF0YS1pbWFnZS1pbmRleD1cIjUzXCIgZGF0YS1pbWFnZS1sb2FkPVwiXCIgZGF0YS1pbWFnZS1sYXRlbmN5PVwicy1wcm9kdWN0LWltYWdlXCIgZGF0YS1pbWFnZS1zb3VyY2UtZGVuc2l0eT1cIjFcIi8+PC9kaXY+PC9hPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC04LW9mLTE2IHNnLWNvbC0xMi1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzLXRpdGxlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxoMiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtc3BhY2luZy1ub25lIGEtY29sb3ItYmFzZSBzLWxpbmUtY2xhbXAtMlwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTY0R0ItTWlkbmlnaHQtR3JlZW4vZHAvQjA4NVRGWU44MS9yZWY9c3JfMV81Mz9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01M1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkFwcGxlIGlQaG9uZSAxMSBQcm8sIDY0R0IsIE1pZG5pZ2h0IEdyZWVuIC0gZm9yIEJvb3N0IE1vYmlsZSAoUmVuZXdlZCk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjQuMiBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwODVURllOODEmYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTQgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuMiBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIxN1wiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGVcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS02NEdCLU1pZG5pZ2h0LUdyZWVuL2RwL0IwODVURllOODEvcmVmPXNyXzFfNTM/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNTMjY3VzdG9tZXJSZXZpZXdzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPjE3PC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtbWluaSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1NaWRuaWdodC1HcmVlbi9kcC9CMDg1VEZZTjgxL3JlZj1zcl8xXzUzP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTUzXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kNTg5Ljk5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjU4OTxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+OTk8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJhLXByaWNlIGEtdGV4dC1wcmljZVwiIGRhdGEtYS1zaXplPVwiYlwiIGRhdGEtYS1zdHJpa2U9XCJ0cnVlXCIgZGF0YS1hLWNvbG9yPVwic2Vjb25kYXJ5XCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQ2MjkuOTk8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JDYyOS45OTwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBXZWQsIEphbiAxMiAtIEZyaSwgSmFuIDE0XCI+PHNwYW4+R2V0IGl0IDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+V2VkLCBKYW4gMTI8L3NwYW4+PHNwYW4+IC0gPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5GcmksIEphbiAxNDwvc3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtOC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj5cbjwvc3Bhbj5cblxuPC9kaXY+PC9kaXY+XG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG48ZGl2IGRhdGEtYXNpbj1cIkIwODVCQ0pKTVlcIiBkYXRhLWluZGV4PVwiMTFcIiBkYXRhLXV1aWQ9XCJkY2FjZDA0ZC02MTM2LTRiZTAtOGZiZC0yYTU1NTRiZThmZDVcIiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1zZWFyY2gtcmVzdWx0XCIgY2xhc3M9XCJzLXJlc3VsdC1pdGVtIHMtYXNpbiBzZy1jb2wtMC1vZi0xMiBzZy1jb2wtMTYtb2YtMjAgc2ctY29sIHMtd2lkZ2V0LXNwYWNpbmctc21hbGwgc2ctY29sLTEyLW9mLTE2XCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJNQUlOLVNFQVJDSF9SRVNVTFRTLTExXCIgY2xhc3M9XCJjZWx3aWRnZXQgc2xvdD1NQUlOIHRlbXBsYXRlPVNFQVJDSF9SRVNVTFRTIHdpZGdldElkPXNlYXJjaC1yZXN1bHRzXzU0XCI+XG4gICAgPGRpdiBjbGFzcz1cInMtaW5jbHVkZS1jb250ZW50LW1hcmdpbiBzLWxhdGVuY3ktY2Ytc2VjdGlvbiBzLWJvcmRlci1ib3R0b20gcy1ib3JkZXItdG9wXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvblwiPjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taWNybyBzLW1pbi1oZWlnaHQtc21hbGxcIj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtcHJvZHVjdC1pbWFnZVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uby1vdXRsaW5lXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1NaWRuaWdodC1HcmVlbi9kcC9CMDg1QkNKSk1ZL3JlZj1zcl8xXzU0P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU0XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzMxa29DdjN1SHhMLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFrb0N2M3VIeEwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzMxa29DdjN1SHhMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFrb0N2M3VIeEwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvMzFrb0N2M3VIeEwuX0FDX1VZNTAwX1FMNjVfLmpwZyAyLjI5MzV4XCIgYWx0PVwiQXBwbGUgaVBob25lIDExIFBybyBNYXgsIDY0R0IsIE1pZG5pZ2h0IEdyZWVuIC0gZm9yIEJvb3N0IE1vYmlsZSAoUmVuZXdlZClcIiBkYXRhLWltYWdlLWluZGV4PVwiNTRcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1NaWRuaWdodC1HcmVlbi9kcC9CMDg1QkNKSk1ZL3JlZj1zcl8xXzU0P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU0XCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItYmFzZSBhLXRleHQtbm9ybWFsXCI+QXBwbGUgaVBob25lIDExIFBybyBNYXgsIDY0R0IsIE1pZG5pZ2h0IEdyZWVuIC0gZm9yIEJvb3N0IE1vYmlsZSAoUmVuZXdlZCk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjMuNiBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwODVCQ0pKTVkmYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTMtNSBhb2stYWxpZ24tYm90dG9tXCI+PHNwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+My42IG91dCBvZiA1IHN0YXJzPC9zcGFuPjwvaT48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPjwvaT48L2E+PC9zcGFuPiA8L3NwYW4+PHNwYW4gYXJpYS1sYWJlbD1cIjRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1NaWRuaWdodC1HcmVlbi9kcC9CMDg1QkNKSk1ZL3JlZj1zcl8xXzU0P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU0I2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj40PC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1NaWRuaWdodC1HcmVlbi9kcC9CMDg1QkNKSk1ZL3JlZj1zcl8xXzU0P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU0XCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kNjc5Ljk5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjY3OTxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+OTk8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPC9hPiA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcy1hbGlnbi1jaGlsZHJlbi1jZW50ZXJcIj48c3BhbiBhcmlhLWxhYmVsPVwiR2V0IGl0IFdlZCwgSmFuIDEyIC0gRnJpLCBKYW4gMTRcIj48c3Bhbj5HZXQgaXQgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5XZWQsIEphbiAxMjwvc3Bhbj48c3Bhbj4gLSA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPkZyaSwgSmFuIDE0PC9zcGFuPjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnlcIj48c3BhbiBhcmlhLWxhYmVsPVwiT25seSA3IGxlZnQgaW4gc3RvY2sgLSBvcmRlciBzb29uLlwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1wcmljZVwiPk9ubHkgNyBsZWZ0IGluIHN0b2NrIC0gb3JkZXIgc29vbi48L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDlKRkoxUTVDXCIgZGF0YS1pbmRleD1cIjEyXCIgZGF0YS11dWlkPVwiNzU2YmY3YTItODk1OS00ZWEyLWFiNjYtMzdiMzM1NmE1N2ExXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0xMlwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c181NVwiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTEyLVByby0yNTZHQi9kcC9CMDlKRkoxUTVDL3JlZj1zcl8xXzU1P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU1XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxMVB2VFMwNXBMLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzExUHZUUzA1cEwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxMVB2VFMwNXBMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzExUHZUUzA1cEwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzExUHZUUzA1cEwuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MTFQdlRTMDVwTC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCIgYWx0PVwiQXBwbGUgaVBob25lIDEyIFBybywgMjU2R0IsIEdvbGQgLSBVbmxvY2tlZCAoUmVuZXdlZCBQcmVtaXVtKVwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI1NVwiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS0xMi1Qcm8tMjU2R0IvZHAvQjA5SkZKMVE1Qy9yZWY9c3JfMV81NT9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01NVwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkFwcGxlIGlQaG9uZSAxMiBQcm8sIDI1NkdCLCBHb2xkIC0gVW5sb2NrZWQgKFJlbmV3ZWQgUHJlbWl1bSk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjQuMCBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwOUpGSjFRNUMmYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTQgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuMCBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIxXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTEyLVByby0yNTZHQi9kcC9CMDlKRkoxUTVDL3JlZj1zcl8xXzU1P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU1I2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj4xPC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtMTItUHJvLTI1NkdCL2RwL0IwOUpGSjFRNUMvcmVmPXNyXzFfNTU/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNTVcIj48c3BhbiBjbGFzcz1cImEtcHJpY2VcIiBkYXRhLWEtc2l6ZT1cImxcIiBkYXRhLWEtY29sb3I9XCJiYXNlXCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQ5OTkuMDA8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXN5bWJvbFwiPiQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXdob2xlXCI+OTk5PHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj4wMDwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzLWFsaWduLWNoaWxkcmVuLWNlbnRlclwiPjxzcGFuIGFyaWEtbGFiZWw9XCJHZXQgaXQgYXMgc29vbiBhcyBUaHUsIEphbiAxM1wiPjxzcGFuPkdldCBpdCBhcyBzb29uIGFzIDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+VGh1LCBKYW4gMTM8L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDc4UDM4UjhMXCIgZGF0YS1pbmRleD1cIjEzXCIgZGF0YS11dWlkPVwiYTczMGZmZjYtOTNlOC00M2Y3LTg5MGEtNmQ4YTFlZjhiOGZjXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0xM1wiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c181NlwiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLWExOTA1LVVubG9ja2VkLVJlZnVyYmlzaGVkL2RwL0IwNzhQMzhSOEwvcmVmPXNyXzFfNTY/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNTZcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFvay1yZWxhdGl2ZSBzLWltYWdlLWZpeGVkLWhlaWdodFwiPjxpbWcgY2xhc3M9XCJzLWltYWdlXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFGN0E1cnN3SkwuX0FDX1VZMjE4Xy5qcGdcIiBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MUY3QTVyc3dKTC5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFGN0E1cnN3SkwuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MUY3QTVyc3dKTC5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MUY3QTVyc3dKTC5fQUNfVVk1NDVfUUw2NV8uanBnIDIuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxRjdBNXJzd0pMLl9BQ19VWTY1NF9RTDY1Xy5qcGcgM3hcIiBhbHQ9XCJBcHBsZSBpUGhvbmUgOCBhMTkwNSAyNTZHQiBHU00gVW5sb2NrZWQgKFJlbmV3ZWQpXCIgZGF0YS1pbWFnZS1pbmRleD1cIjU2XCIgZGF0YS1pbWFnZS1sb2FkPVwiXCIgZGF0YS1pbWFnZS1sYXRlbmN5PVwicy1wcm9kdWN0LWltYWdlXCIgZGF0YS1pbWFnZS1zb3VyY2UtZGVuc2l0eT1cIjFcIi8+PC9kaXY+PC9hPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC04LW9mLTE2IHNnLWNvbC0xMi1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzLXRpdGxlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxoMiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtc3BhY2luZy1ub25lIGEtY29sb3ItYmFzZSBzLWxpbmUtY2xhbXAtMlwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLWExOTA1LVVubG9ja2VkLVJlZnVyYmlzaGVkL2RwL0IwNzhQMzhSOEwvcmVmPXNyXzFfNTY/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNTZcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS1jb2xvci1iYXNlIGEtdGV4dC1ub3JtYWxcIj5BcHBsZSBpUGhvbmUgOCBhMTkwNSAyNTZHQiBHU00gVW5sb2NrZWQgKFJlbmV3ZWQpPC9zcGFuPiA8L2E+IDwvaDI+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1zbWFsbFwiPjxzcGFuIGFyaWEtbGFiZWw9XCI0LjMgb3V0IG9mIDUgc3RhcnNcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OmZhbHNlLCZxdW90O2Nsb3NlQnV0dG9uTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7cG9wb3ZlckxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L3Jldmlldy93aWRnZXRzL2F2ZXJhZ2UtY3VzdG9tZXItcmV2aWV3L3BvcG92ZXIvcmVmPWFjcl9zZWFyY2hfX3BvcG92ZXI/aWU9VVRGOCZhbXA7YXNpbj1CMDc4UDM4UjhMJmFtcDtyZWY9YWNyX3NlYXJjaF9fcG9wb3ZlciZhbXA7Y29udGV4dElkPXNlYXJjaCZxdW90O31cIj48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgcm9sZT1cImJ1dHRvblwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC00LTUgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuMyBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIxMDJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtYTE5MDUtVW5sb2NrZWQtUmVmdXJiaXNoZWQvZHAvQjA3OFAzOFI4TC9yZWY9c3JfMV81Nj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01NiNjdXN0b21lclJldmlld3NcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+MTAyPC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtYTE5MDUtVW5sb2NrZWQtUmVmdXJiaXNoZWQvZHAvQjA3OFAzOFI4TC9yZWY9c3JfMV81Nj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01NlwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZVwiIGRhdGEtYS1zaXplPVwibFwiIGRhdGEtYS1jb2xvcj1cImJhc2VcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDI5OS4wMDwvc3Bhbj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj48c3BhbiBjbGFzcz1cImEtcHJpY2Utc3ltYm9sXCI+JDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2Utd2hvbGVcIj4yOTk8c3BhbiBjbGFzcz1cImEtcHJpY2UtZGVjaW1hbFwiPi48L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1mcmFjdGlvblwiPjAwPC9zcGFuPjwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBhcyBzb29uIGFzIFRodSwgSmFuIDEzXCI+PHNwYW4+R2V0IGl0IGFzIHNvb24gYXMgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5UaHUsIEphbiAxMzwvc3Bhbj48L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+PHNwYW4gYXJpYS1sYWJlbD1cIk9ubHkgNiBsZWZ0IGluIHN0b2NrIC0gb3JkZXIgc29vbi5cIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItcHJpY2VcIj5Pbmx5IDYgbGVmdCBpbiBzdG9jayAtIG9yZGVyIHNvb24uPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWluaVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeVwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnlcIj5Nb3JlIEJ1eWluZyBDaG9pY2VzPC9zcGFuPjxici8+PHNwYW4gY2xhc3M9XCJhLWNvbG9yLWJhc2VcIj4kMjk3LjUwPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJzLXNob3ctYWxsLW9mZmVycy1kaXNwbGF5XCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtcy1zaG93LWFsbC1vZmZlcnMtZGlzcGxheVwiIGRhdGEtcy1zaG93LWFsbC1vZmZlcnMtZGlzcGxheT1cInsmcXVvdDthc3NldE1pc21hdGNoJnF1b3Q7OiZxdW90O0FiYW5kb24mcXVvdDssJnF1b3Q7ZmFsbGJhY2tVcmwmcXVvdDs6JnF1b3Q7L2dwL29mZmVyLWxpc3RpbmcvQjA3OFAzOFI4TC9yZWY9c3JfMV81Nl9vbHA/a2V5d29yZHM9aXBob25lJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NyPTgtNTYmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9hb2QvYWpheC9yZWY9c3JfMV81Nl9hb2Q/YXNpbj1CMDc4UDM4UjhMJmFtcDtwYz1zcCZhbXA7a2V5d29yZHM9aXBob25lJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NyPTgtNTYmYW1wO3JyaWQ9MVE3ME03OENDUzhBUzk5Uk1DQTgmcXVvdDt9XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvZ3Avb2ZmZXItbGlzdGluZy9CMDc4UDM4UjhML3JlZj1zcl8xXzU2X29scD9rZXl3b3Jkcz1pcGhvbmUmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3I9OC01NlwiPigyIG5ldyBvZmZlcnMpPC9hPjwvc3Bhbj4gPGRpdiBpZD1cImFsbC1vZmZlcnMtZGlzcGxheVwiIGNsYXNzPVwiYS1zZWN0aW9uIGFvay1oaWRkZW5cIj48ZGl2IGlkPVwiYWxsLW9mZmVycy1kaXNwbGF5LXNwaW5uZXJcIiBjbGFzcz1cImEtc3Bpbm5lci13cmFwcGVyIGFvay1oaWRkZW5cIj48c3BhbiBjbGFzcz1cImEtc3Bpbm5lciBhLXNwaW5uZXItbWVkaXVtXCI+PC9zcGFuPjwvZGl2PjwvZGl2PjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiY2xvc2UtYWxsLW9mZmVycy1kaXNwbGF5XCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtY2xvc2UtYWxsLW9mZmVycy1kaXNwbGF5XCIgZGF0YS1jbG9zZS1hbGwtb2ZmZXJzLWRpc3BsYXk9XCJ7fVwiPjxkaXYgaWQ9XCJhb2QtYmFja2dyb3VuZFwiIGNsYXNzPVwiYS1zZWN0aW9uIGFvay1oaWRkZW4gYW9kLWRhcmtlbi1iYWNrZ3JvdW5kXCI+PC9kaXY+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDlEVEhWM0RXXCIgZGF0YS1pbmRleD1cIjE0XCIgZGF0YS11dWlkPVwiNmI1ZDRhYjMtNjY1YS00Yjg4LTljYjMtOTFlODM2ZDk5NDNlXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0xNFwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c181N1wiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvaVBob25lLTE2R0ItVW5sb2NrZWQtU3BhY2UtR3JheS9kcC9CMDlEVEhWM0RXL3JlZj1zcl8xXzU3P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU3XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzgxS01qQk5JQWJMLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvODFLTWpCTklBYkwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzgxS01qQk5JQWJMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvODFLTWpCTklBYkwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvODFLTWpCTklBYkwuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS84MUtNakJOSUFiTC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCIgYWx0PVwiaVBob25lIFNFIDE2R0IgVW5sb2NrZWQsIFNwYWNlIEdyYXkgKEdlbiAxKVwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI1N1wiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2lQaG9uZS0xNkdCLVVubG9ja2VkLVNwYWNlLUdyYXkvZHAvQjA5RFRIVjNEVy9yZWY9c3JfMV81Nz9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01N1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPmlQaG9uZSBTRSAxNkdCIFVubG9ja2VkLCBTcGFjZSBHcmF5IChHZW4gMSk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjMuNCBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwOURUSFYzRFcmYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTMtNSBhb2stYWxpZ24tYm90dG9tXCI+PHNwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+My40IG91dCBvZiA1IHN0YXJzPC9zcGFuPjwvaT48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPjwvaT48L2E+PC9zcGFuPiA8L3NwYW4+PHNwYW4gYXJpYS1sYWJlbD1cIjQxXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvaVBob25lLTE2R0ItVW5sb2NrZWQtU3BhY2UtR3JheS9kcC9CMDlEVEhWM0RXL3JlZj1zcl8xXzU3P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU3I2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj40MTwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvaVBob25lLTE2R0ItVW5sb2NrZWQtU3BhY2UtR3JheS9kcC9CMDlEVEhWM0RXL3JlZj1zcl8xXzU3P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU3XCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kMTA5LjY5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjEwOTxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+Njk8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJhLXByaWNlIGEtdGV4dC1wcmljZVwiIGRhdGEtYS1zaXplPVwiYlwiIGRhdGEtYS1zdHJpa2U9XCJ0cnVlXCIgZGF0YS1hLWNvbG9yPVwic2Vjb25kYXJ5XCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQxMTkuMDA8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+JDExOS4wMDwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBhcyBzb29uIGFzIFR1ZSwgSmFuIDE4XCI+PHNwYW4+R2V0IGl0IGFzIHNvb24gYXMgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5UdWUsIEphbiAxODwvc3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pbmlcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnlcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+TW9yZSBCdXlpbmcgQ2hvaWNlczwvc3Bhbj48YnIvPjxzcGFuIGNsYXNzPVwiYS1jb2xvci1iYXNlXCI+JDk3LjAwPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJzLXNob3ctYWxsLW9mZmVycy1kaXNwbGF5XCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtcy1zaG93LWFsbC1vZmZlcnMtZGlzcGxheVwiIGRhdGEtcy1zaG93LWFsbC1vZmZlcnMtZGlzcGxheT1cInsmcXVvdDthc3NldE1pc21hdGNoJnF1b3Q7OiZxdW90O0FiYW5kb24mcXVvdDssJnF1b3Q7ZmFsbGJhY2tVcmwmcXVvdDs6JnF1b3Q7L2dwL29mZmVyLWxpc3RpbmcvQjA5RFRIVjNEVy9yZWY9c3JfMV81N19vbHA/a2V5d29yZHM9aXBob25lJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NyPTgtNTcmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9ncC9hb2QvYWpheC9yZWY9c3JfMV81N19hb2Q/YXNpbj1CMDlEVEhWM0RXJmFtcDtwYz1zcCZhbXA7a2V5d29yZHM9aXBob25lJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NyPTgtNTcmYW1wO3JyaWQ9MVE3ME03OENDUzhBUzk5Uk1DQTgmcXVvdDt9XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvZ3Avb2ZmZXItbGlzdGluZy9CMDlEVEhWM0RXL3JlZj1zcl8xXzU3X29scD9rZXl3b3Jkcz1pcGhvbmUmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3I9OC01N1wiPig1IHVzZWQgJmFtcDsgbmV3IG9mZmVycyk8L2E+PC9zcGFuPiA8ZGl2IGlkPVwiYWxsLW9mZmVycy1kaXNwbGF5XCIgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLWhpZGRlblwiPjxkaXYgaWQ9XCJhbGwtb2ZmZXJzLWRpc3BsYXktc3Bpbm5lclwiIGNsYXNzPVwiYS1zcGlubmVyLXdyYXBwZXIgYW9rLWhpZGRlblwiPjxzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj48L3NwYW4+PC9kaXY+PC9kaXY+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJjbG9zZS1hbGwtb2ZmZXJzLWRpc3BsYXlcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1jbG9zZS1hbGwtb2ZmZXJzLWRpc3BsYXlcIiBkYXRhLWNsb3NlLWFsbC1vZmZlcnMtZGlzcGxheT1cInt9XCI+PGRpdiBpZD1cImFvZC1iYWNrZ3JvdW5kXCIgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLWhpZGRlbiBhb2QtZGFya2VuLWJhY2tncm91bmRcIj48L2Rpdj48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtOC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj5cbjwvc3Bhbj5cblxuPC9kaXY+PC9kaXY+XG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG48ZGl2IGRhdGEtYXNpbj1cIkIwMU5DM0dHNllcIiBkYXRhLWluZGV4PVwiMTVcIiBkYXRhLXV1aWQ9XCIxZTJlZGM4OS1lMTI2LTQ3ZWMtOTVmMi01YjcwODEyMmQ1NWJcIiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1zZWFyY2gtcmVzdWx0XCIgY2xhc3M9XCJzLXJlc3VsdC1pdGVtIHMtYXNpbiBzZy1jb2wtMC1vZi0xMiBzZy1jb2wtMTYtb2YtMjAgc2ctY29sIHMtd2lkZ2V0LXNwYWNpbmctc21hbGwgc2ctY29sLTEyLW9mLTE2XCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJNQUlOLVNFQVJDSF9SRVNVTFRTLTE1XCIgY2xhc3M9XCJjZWx3aWRnZXQgc2xvdD1NQUlOIHRlbXBsYXRlPVNFQVJDSF9SRVNVTFRTIHdpZGdldElkPXNlYXJjaC1yZXN1bHRzXzU4XCI+XG4gICAgPGRpdiBjbGFzcz1cInMtaW5jbHVkZS1jb250ZW50LW1hcmdpbiBzLWxhdGVuY3ktY2Ytc2VjdGlvbiBzLWJvcmRlci1ib3R0b20gcy1ib3JkZXItdG9wXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvblwiPjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taWNybyBzLW1pbi1oZWlnaHQtc21hbGxcIj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtcHJvZHVjdC1pbWFnZVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uby1vdXRsaW5lXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtVW5sb2NrZWQtNS01LWluY2gtU21hcnRwaG9uZS9kcC9CMDFOQzNHRzZZL3JlZj1zcl8xXzU4P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU4XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxY0E3ZlBsZTZMLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFjQTdmUGxlNkwuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxY0E3ZlBsZTZMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFjQTdmUGxlNkwuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFjQTdmUGxlNkwuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MWNBN2ZQbGU2TC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCIgYWx0PVwiQXBwbGUgaVBob25lIDcgUGx1cyAzMkdCIChHU00gVW5sb2NrZWQpIDUuNS1pbmNoIDEyTVAgaU9TIFNtYXJ0cGhvbmUgLSBCbGFjayAoUmVuZXdlZClcIiBkYXRhLWltYWdlLWluZGV4PVwiNThcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtVW5sb2NrZWQtNS01LWluY2gtU21hcnRwaG9uZS9kcC9CMDFOQzNHRzZZL3JlZj1zcl8xXzU4P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU4XCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItYmFzZSBhLXRleHQtbm9ybWFsXCI+QXBwbGUgaVBob25lIDcgUGx1cyAzMkdCIChHU00gVW5sb2NrZWQpIDUuNS1pbmNoIDEyTVAgaU9TIFNtYXJ0cGhvbmUgLSBCbGFjayAoUmVuZXdlZCk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjQuMSBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwMU5DM0dHNlkmYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTQgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuMSBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIxNzRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtVW5sb2NrZWQtNS01LWluY2gtU21hcnRwaG9uZS9kcC9CMDFOQzNHRzZZL3JlZj1zcl8xXzU4P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU4I2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj4xNzQ8L3NwYW4+IDwvYT4gPC9zcGFuPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1zbWFsbCBzLXByaWNlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIj48YSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1VbmxvY2tlZC01LTUtaW5jaC1TbWFydHBob25lL2RwL0IwMU5DM0dHNlkvcmVmPXNyXzFfNTg/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNThcIj48c3BhbiBjbGFzcz1cImEtcHJpY2VcIiBkYXRhLWEtc2l6ZT1cImxcIiBkYXRhLWEtY29sb3I9XCJiYXNlXCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQyNDguMDA8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXN5bWJvbFwiPiQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXdob2xlXCI+MjQ4PHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj4wMDwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzLWFsaWduLWNoaWxkcmVuLWNlbnRlclwiPjxzcGFuIGFyaWEtbGFiZWw9XCJHZXQgaXQgV2VkLCBKYW4gMTIgLSBUaHUsIEphbiAxM1wiPjxzcGFuPkdldCBpdCA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPldlZCwgSmFuIDEyPC9zcGFuPjxzcGFuPiAtIDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+VGh1LCBKYW4gMTM8L3NwYW4+PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeVwiPjxzcGFuIGFyaWEtbGFiZWw9XCJPbmx5IDQgbGVmdCBpbiBzdG9jayAtIG9yZGVyIHNvb24uXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+T25seSA0IGxlZnQgaW4gc3RvY2sgLSBvcmRlciBzb29uLjwvc3Bhbj48L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pbmlcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnlcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+TW9yZSBCdXlpbmcgQ2hvaWNlczwvc3Bhbj48YnIvPjxzcGFuIGNsYXNzPVwiYS1jb2xvci1iYXNlXCI+JDI0Ny45OTwvc3Bhbj48c3BhbiBjbGFzcz1cImEtbGV0dGVyLXNwYWNlXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1zaG93LWFsbC1vZmZlcnMtZGlzcGxheVwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtc2hvdy1hbGwtb2ZmZXJzLWRpc3BsYXlcIiBkYXRhLXMtc2hvdy1hbGwtb2ZmZXJzLWRpc3BsYXk9XCJ7JnF1b3Q7YXNzZXRNaXNtYXRjaCZxdW90OzomcXVvdDtBYmFuZG9uJnF1b3Q7LCZxdW90O2ZhbGxiYWNrVXJsJnF1b3Q7OiZxdW90Oy9ncC9vZmZlci1saXN0aW5nL0IwMU5DM0dHNlkvcmVmPXNyXzFfNThfb2xwP2tleXdvcmRzPWlwaG9uZSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcj04LTU4JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvZ3AvYW9kL2FqYXgvcmVmPXNyXzFfNThfYW9kP2FzaW49QjAxTkMzR0c2WSZhbXA7cGM9c3AmYW1wO2tleXdvcmRzPWlwaG9uZSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcj04LTU4JmFtcDtycmlkPTFRNzBNNzhDQ1M4QVM5OVJNQ0E4JnF1b3Q7fVwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGVcIiBocmVmPVwiL2dwL29mZmVyLWxpc3RpbmcvQjAxTkMzR0c2WS9yZWY9c3JfMV81OF9vbHA/a2V5d29yZHM9aXBob25lJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NyPTgtNThcIj4oNCBuZXcgb2ZmZXJzKTwvYT48L3NwYW4+IDxkaXYgaWQ9XCJhbGwtb2ZmZXJzLWRpc3BsYXlcIiBjbGFzcz1cImEtc2VjdGlvbiBhb2staGlkZGVuXCI+PGRpdiBpZD1cImFsbC1vZmZlcnMtZGlzcGxheS1zcGlubmVyXCIgY2xhc3M9XCJhLXNwaW5uZXItd3JhcHBlciBhb2staGlkZGVuXCI+PHNwYW4gY2xhc3M9XCJhLXNwaW5uZXIgYS1zcGlubmVyLW1lZGl1bVwiPjwvc3Bhbj48L2Rpdj48L2Rpdj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImNsb3NlLWFsbC1vZmZlcnMtZGlzcGxheVwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWNsb3NlLWFsbC1vZmZlcnMtZGlzcGxheVwiIGRhdGEtY2xvc2UtYWxsLW9mZmVycy1kaXNwbGF5PVwie31cIj48ZGl2IGlkPVwiYW9kLWJhY2tncm91bmRcIiBjbGFzcz1cImEtc2VjdGlvbiBhb2staGlkZGVuIGFvZC1kYXJrZW4tYmFja2dyb3VuZFwiPjwvZGl2Pjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9zcGFuPlxuXG48L2Rpdj48L2Rpdj5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cbjxkaXYgZGF0YS1hc2luPVwiQjA5Rzk4OFhMRFwiIGRhdGEtaW5kZXg9XCIxNlwiIGRhdGEtdXVpZD1cIjNhNmZlMWE2LTUwNWQtNDU5MC1hNDkzLWQwODYyYmY4NjI0NVwiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gcy1hc2luIHNnLWNvbC0wLW9mLTEyIHNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgcy13aWRnZXQtc3BhY2luZy1zbWFsbCBzZy1jb2wtMTItb2YtMTZcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgXG5cblxuPHNwYW4gY2VsX3dpZGdldF9pZD1cIk1BSU4tU0VBUkNIX1JFU1VMVFMtMTZcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNTlcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1HcmFwaGl0ZS1DYXJyaWVyLVN1YnNjcmlwdGlvbi9kcC9CMDlHOTg4WExEL3JlZj1zcl8xXzU5P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU5XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxSUpCc0htOTdMLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFJSkJzSG05N0wuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxSUpCc0htOTdMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFJSkJzSG05N0wuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFJSkJzSG05N0wuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MUlKQnNIbTk3TC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCIgYWx0PVwiQXBwbGUgaVBob25lIDEzIFBybyBNYXggKDI1NkdCLCBHcmFwaGl0ZSkgW0xvY2tlZF0gKyBDYXJyaWVyIFN1YnNjcmlwdGlvblwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI1OVwiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1HcmFwaGl0ZS1DYXJyaWVyLVN1YnNjcmlwdGlvbi9kcC9CMDlHOTg4WExEL3JlZj1zcl8xXzU5P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU5XCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItYmFzZSBhLXRleHQtbm9ybWFsXCI+QXBwbGUgaVBob25lIDEzIFBybyBNYXggKDI1NkdCLCBHcmFwaGl0ZSkgW0xvY2tlZF0gKyBDYXJyaWVyIFN1YnNjcmlwdGlvbjwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNC41IG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA5Rzk4OFhMRCZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNC01IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjUgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiODZcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtR3JhcGhpdGUtQ2Fycmllci1TdWJzY3JpcHRpb24vZHAvQjA5Rzk4OFhMRC9yZWY9c3JfMV81OT9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC01OSNjdXN0b21lclJldmlld3NcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+ODY8L3NwYW4+IDwvYT4gPC9zcGFuPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1zbWFsbCBzLXByaWNlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIj48YSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1HcmFwaGl0ZS1DYXJyaWVyLVN1YnNjcmlwdGlvbi9kcC9CMDlHOTg4WExEL3JlZj1zcl8xXzU5P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTU5XCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kMSwxOTkuMDA8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXN5bWJvbFwiPiQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXdob2xlXCI+MSwxOTk8c3BhbiBjbGFzcz1cImEtcHJpY2UtZGVjaW1hbFwiPi48L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1mcmFjdGlvblwiPjAwPC9zcGFuPjwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBhcyBzb29uIGFzIFRodSwgSmFuIDEzXCI+PHNwYW4+R2V0IGl0IGFzIHNvb24gYXMgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5UaHUsIEphbiAxMzwvc3Bhbj48L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+PHNwYW4gYXJpYS1sYWJlbD1cIk9ubHkgMTUgbGVmdCBpbiBzdG9jayAtIG9yZGVyIHNvb24uXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXByaWNlXCI+T25seSAxNSBsZWZ0IGluIHN0b2NrIC0gb3JkZXIgc29vbi48L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDg1VDRZTjdZXCIgZGF0YS1pbmRleD1cIjE3XCIgZGF0YS11dWlkPVwiODI0NmFkZWYtZmFmNC00MzcxLTg1NjktMDAxZjEwODhlMmIyXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0xN1wiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c182MFwiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLVByby02NEdCLUdvbGQvZHAvQjA4NVQ0WU43WS9yZWY9c3JfMV82MD9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02MFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXVNa3AzQ2c2TC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxdU1rcDNDZzZMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXVNa3AzQ2c2TC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxdU1rcDNDZzZMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxdU1rcDNDZzZMLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTF1TWtwM0NnNkwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiIGFsdD1cIkFwcGxlIGlQaG9uZSAxMSBQcm8sIDY0R0IsIEdvbGQgLSBmb3IgVC1Nb2JpbGUgKFJlbmV3ZWQpXCIgZGF0YS1pbWFnZS1pbmRleD1cIjYwXCIgZGF0YS1pbWFnZS1sb2FkPVwiXCIgZGF0YS1pbWFnZS1sYXRlbmN5PVwicy1wcm9kdWN0LWltYWdlXCIgZGF0YS1pbWFnZS1zb3VyY2UtZGVuc2l0eT1cIjFcIi8+PC9kaXY+PC9hPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC04LW9mLTE2IHNnLWNvbC0xMi1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzLXRpdGxlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxoMiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtc3BhY2luZy1ub25lIGEtY29sb3ItYmFzZSBzLWxpbmUtY2xhbXAtMlwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLVByby02NEdCLUdvbGQvZHAvQjA4NVQ0WU43WS9yZWY9c3JfMV82MD9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02MFwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkFwcGxlIGlQaG9uZSAxMSBQcm8sIDY0R0IsIEdvbGQgLSBmb3IgVC1Nb2JpbGUgKFJlbmV3ZWQpPC9zcGFuPiA8L2E+IDwvaDI+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLVByby02NEdCLUdvbGQvZHAvQjA4NVQ0WU43WS9yZWY9c3JfMV82MD9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02MFwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZVwiIGRhdGEtYS1zaXplPVwibFwiIGRhdGEtYS1jb2xvcj1cImJhc2VcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDU5OS45OTwvc3Bhbj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj48c3BhbiBjbGFzcz1cImEtcHJpY2Utc3ltYm9sXCI+JDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2Utd2hvbGVcIj41OTk8c3BhbiBjbGFzcz1cImEtcHJpY2UtZGVjaW1hbFwiPi48L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1mcmFjdGlvblwiPjk5PC9zcGFuPjwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBXZWQsIEphbiAxMiAtIEZyaSwgSmFuIDE0XCI+PHNwYW4+R2V0IGl0IDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+V2VkLCBKYW4gMTI8L3NwYW4+PHNwYW4+IC0gPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5GcmksIEphbiAxNDwvc3Bhbj48L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+PHNwYW4gYXJpYS1sYWJlbD1cIk9ubHkgNiBsZWZ0IGluIHN0b2NrIC0gb3JkZXIgc29vbi5cIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItcHJpY2VcIj5Pbmx5IDYgbGVmdCBpbiBzdG9jayAtIG9yZGVyIHNvb24uPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9zcGFuPlxuXG48L2Rpdj48L2Rpdj5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cbjxkaXYgZGF0YS1hc2luPVwiQjA3UlY0OFJSMVwiIGRhdGEtaW5kZXg9XCIxOFwiIGRhdGEtdXVpZD1cIjE3YzY2ZGZkLWUxZGItNGE1Yi05MTg0LWY1ODA1ODk0YWU1MFwiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gcy1hc2luIHNnLWNvbC0wLW9mLTEyIHNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgcy13aWRnZXQtc3BhY2luZy1zbWFsbCBzZy1jb2wtMTItb2YtMTZcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgXG5cblxuPHNwYW4gY2VsX3dpZGdldF9pZD1cIk1BSU4tU0VBUkNIX1JFU1VMVFMtMThcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNjFcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS02NEdCLVNpbHZlci1ULU1vYmlsZS9kcC9CMDdSVjQ4UlIxL3JlZj1zcl8xXzYxP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTYxXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhb2stcmVsYXRpdmUgcy1pbWFnZS1maXhlZC1oZWlnaHRcIj48aW1nIGNsYXNzPVwicy1pbWFnZVwiIHNyYz1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxb3N0Z0xhVWNMLl9BQ19VWTIxOF8uanBnXCIgc3Jjc2V0PVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFvc3RnTGFVY0wuX0FDX1VZMjE4Xy5qcGcgMXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxb3N0Z0xhVWNMLl9BQ19VWTMyN19RTDY1Xy5qcGcgMS41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFvc3RnTGFVY0wuX0FDX1VZNDM2X1FMNjVfLmpwZyAyeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFvc3RnTGFVY0wuX0FDX1VZNTQ1X1FMNjVfLmpwZyAyLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MW9zdGdMYVVjTC5fQUNfVVk2NTRfUUw2NV8uanBnIDN4XCIgYWx0PVwiQXBwbGUgaVBob25lIFgsIDY0R0IsIFNpbHZlciAtIEZvciBULU1vYmlsZSAoUmVuZXdlZClcIiBkYXRhLWltYWdlLWluZGV4PVwiNjFcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1TaWx2ZXItVC1Nb2JpbGUvZHAvQjA3UlY0OFJSMS9yZWY9c3JfMV82MT9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02MVwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkFwcGxlIGlQaG9uZSBYLCA2NEdCLCBTaWx2ZXIgLSBGb3IgVC1Nb2JpbGUgKFJlbmV3ZWQpPC9zcGFuPiA8L2E+IDwvaDI+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1zbWFsbFwiPjxzcGFuIGFyaWEtbGFiZWw9XCI0LjIgb3V0IG9mIDUgc3RhcnNcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OmZhbHNlLCZxdW90O2Nsb3NlQnV0dG9uTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7cG9wb3ZlckxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L3Jldmlldy93aWRnZXRzL2F2ZXJhZ2UtY3VzdG9tZXItcmV2aWV3L3BvcG92ZXIvcmVmPWFjcl9zZWFyY2hfX3BvcG92ZXI/aWU9VVRGOCZhbXA7YXNpbj1CMDdSVjQ4UlIxJmFtcDtyZWY9YWNyX3NlYXJjaF9fcG9wb3ZlciZhbXA7Y29udGV4dElkPXNlYXJjaCZxdW90O31cIj48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgcm9sZT1cImJ1dHRvblwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC00IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjIgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiMjI3XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTY0R0ItU2lsdmVyLVQtTW9iaWxlL2RwL0IwN1JWNDhSUjEvcmVmPXNyXzFfNjE/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjEjY3VzdG9tZXJSZXZpZXdzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPjIyNzwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTY0R0ItU2lsdmVyLVQtTW9iaWxlL2RwL0IwN1JWNDhSUjEvcmVmPXNyXzFfNjE/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjFcIj48c3BhbiBjbGFzcz1cImEtcHJpY2VcIiBkYXRhLWEtc2l6ZT1cImxcIiBkYXRhLWEtY29sb3I9XCJiYXNlXCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQzMTYuMzk8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXN5bWJvbFwiPiQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXdob2xlXCI+MzE2PHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj4zOTwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzLWFsaWduLWNoaWxkcmVuLWNlbnRlclwiPjxzcGFuIGFyaWEtbGFiZWw9XCJHZXQgaXQgYXMgc29vbiBhcyBXZWQsIEphbiAxMlwiPjxzcGFuPkdldCBpdCBhcyBzb29uIGFzIDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+V2VkLCBKYW4gMTI8L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taW5pXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeVwiPk1vcmUgQnV5aW5nIENob2ljZXM8L3NwYW4+PGJyLz48c3BhbiBjbGFzcz1cImEtY29sb3ItYmFzZVwiPiQzMTQuMDA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtc2hvdy1hbGwtb2ZmZXJzLWRpc3BsYXlcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLXNob3ctYWxsLW9mZmVycy1kaXNwbGF5XCIgZGF0YS1zLXNob3ctYWxsLW9mZmVycy1kaXNwbGF5PVwieyZxdW90O2Fzc2V0TWlzbWF0Y2gmcXVvdDs6JnF1b3Q7QWJhbmRvbiZxdW90OywmcXVvdDtmYWxsYmFja1VybCZxdW90OzomcXVvdDsvZ3Avb2ZmZXItbGlzdGluZy9CMDdSVjQ4UlIxL3JlZj1zcl8xXzYxX29scD9rZXl3b3Jkcz1pcGhvbmUmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3I9OC02MSZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L2dwL2FvZC9hamF4L3JlZj1zcl8xXzYxX2FvZD9hc2luPUIwN1JWNDhSUjEmYW1wO3BjPXNwJmFtcDtrZXl3b3Jkcz1pcGhvbmUmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3I9OC02MSZhbXA7cnJpZD0xUTcwTTc4Q0NTOEFTOTlSTUNBOCZxdW90O31cIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9ncC9vZmZlci1saXN0aW5nL0IwN1JWNDhSUjEvcmVmPXNyXzFfNjFfb2xwP2tleXdvcmRzPWlwaG9uZSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcj04LTYxXCI+KDcgbmV3IG9mZmVycyk8L2E+PC9zcGFuPiA8ZGl2IGlkPVwiYWxsLW9mZmVycy1kaXNwbGF5XCIgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLWhpZGRlblwiPjxkaXYgaWQ9XCJhbGwtb2ZmZXJzLWRpc3BsYXktc3Bpbm5lclwiIGNsYXNzPVwiYS1zcGlubmVyLXdyYXBwZXIgYW9rLWhpZGRlblwiPjxzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj48L3NwYW4+PC9kaXY+PC9kaXY+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJjbG9zZS1hbGwtb2ZmZXJzLWRpc3BsYXlcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1jbG9zZS1hbGwtb2ZmZXJzLWRpc3BsYXlcIiBkYXRhLWNsb3NlLWFsbC1vZmZlcnMtZGlzcGxheT1cInt9XCI+PGRpdiBpZD1cImFvZC1iYWNrZ3JvdW5kXCIgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLWhpZGRlbiBhb2QtZGFya2VuLWJhY2tncm91bmRcIj48L2Rpdj48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtOC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj5cbjwvc3Bhbj5cblxuPC9kaXY+PC9kaXY+XG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG48ZGl2IGRhdGEtYXNpbj1cIkIwMU41U0NRMkFcIiBkYXRhLWluZGV4PVwiMTlcIiBkYXRhLXV1aWQ9XCI3ODU4M2FiMi05ZTkyLTQzZjktOWE5MS1jNTIxYmI1NzU3YzBcIiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1zZWFyY2gtcmVzdWx0XCIgY2xhc3M9XCJzLXJlc3VsdC1pdGVtIHMtYXNpbiBzZy1jb2wtMC1vZi0xMiBzZy1jb2wtMTYtb2YtMjAgc2ctY29sIHMtd2lkZ2V0LXNwYWNpbmctc21hbGwgc2ctY29sLTEyLW9mLTE2XCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJNQUlOLVNFQVJDSF9SRVNVTFRTLTE5XCIgY2xhc3M9XCJjZWx3aWRnZXQgc2xvdD1NQUlOIHRlbXBsYXRlPVNFQVJDSF9SRVNVTFRTIHdpZGdldElkPXNlYXJjaC1yZXN1bHRzXzYyXCI+XG4gICAgPGRpdiBjbGFzcz1cInMtaW5jbHVkZS1jb250ZW50LW1hcmdpbiBzLWxhdGVuY3ktY2Ytc2VjdGlvbiBzLWJvcmRlci1ib3R0b20gcy1ib3JkZXItdG9wXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvblwiPjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1taWNybyBzLW1pbi1oZWlnaHQtc21hbGxcIj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtcHJvZHVjdC1pbWFnZVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uby1vdXRsaW5lXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtVmVyaXpvbi1VbmxvY2tlZC1SZW5ld2VkL2RwL0IwMU41U0NRMkEvcmVmPXNyXzFfNjI/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFvay1yZWxhdGl2ZSBzLWltYWdlLWZpeGVkLWhlaWdodFwiPjxpbWcgY2xhc3M9XCJzLWltYWdlXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvODErMnlVcHNTdkwuX0FDX1VZMjE4Xy5qcGdcIiBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS84MSsyeVVwc1N2TC5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvODErMnlVcHNTdkwuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS84MSsyeVVwc1N2TC5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS84MSsyeVVwc1N2TC5fQUNfVVk1NDVfUUw2NV8uanBnIDIuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzgxKzJ5VXBzU3ZMLl9BQ19VWTY1NF9RTDY1Xy5qcGcgM3hcIiBhbHQ9XCJBcHBsZSBpUGhvbmUgNyBhMTY2MCAzMkdCIFNpbHZlciBWZXJpem9uIFVubG9ja2VkIChSZW5ld2VkKVwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI2MlwiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1WZXJpem9uLVVubG9ja2VkLVJlbmV3ZWQvZHAvQjAxTjVTQ1EyQS9yZWY9c3JfMV82Mj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02MlwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkFwcGxlIGlQaG9uZSA3IGExNjYwIDMyR0IgU2lsdmVyIFZlcml6b24gVW5sb2NrZWQgKFJlbmV3ZWQpPC9zcGFuPiA8L2E+IDwvaDI+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1zbWFsbFwiPjxzcGFuIGFyaWEtbGFiZWw9XCI0LjIgb3V0IG9mIDUgc3RhcnNcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OmZhbHNlLCZxdW90O2Nsb3NlQnV0dG9uTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7cG9wb3ZlckxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L3Jldmlldy93aWRnZXRzL2F2ZXJhZ2UtY3VzdG9tZXItcmV2aWV3L3BvcG92ZXIvcmVmPWFjcl9zZWFyY2hfX3BvcG92ZXI/aWU9VVRGOCZhbXA7YXNpbj1CMDFONVNDUTJBJmFtcDtyZWY9YWNyX3NlYXJjaF9fcG9wb3ZlciZhbXA7Y29udGV4dElkPXNlYXJjaCZxdW90O31cIj48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgcm9sZT1cImJ1dHRvblwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC00IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjIgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiNjk3XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLVZlcml6b24tVW5sb2NrZWQtUmVuZXdlZC9kcC9CMDFONVNDUTJBL3JlZj1zcl8xXzYyP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTYyI2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj42OTc8L3NwYW4+IDwvYT4gPC9zcGFuPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1zbWFsbCBzLXByaWNlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIj48YSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1WZXJpem9uLVVubG9ja2VkLVJlbmV3ZWQvZHAvQjAxTjVTQ1EyQS9yZWY9c3JfMV82Mj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02MlwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZVwiIGRhdGEtYS1zaXplPVwibFwiIGRhdGEtYS1jb2xvcj1cImJhc2VcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDE2OS45Nzwvc3Bhbj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj48c3BhbiBjbGFzcz1cImEtcHJpY2Utc3ltYm9sXCI+JDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2Utd2hvbGVcIj4xNjk8c3BhbiBjbGFzcz1cImEtcHJpY2UtZGVjaW1hbFwiPi48L3NwYW4+PC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1mcmFjdGlvblwiPjk3PC9zcGFuPjwvc3Bhbj48L3NwYW4+IDwvYT4gPC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5IHMtYWxpZ24tY2hpbGRyZW4tY2VudGVyXCI+PHNwYW4gYXJpYS1sYWJlbD1cIkdldCBpdCBhcyBzb29uIGFzIFdlZCwgSmFuIDEyXCI+PHNwYW4+R2V0IGl0IGFzIHNvb24gYXMgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5XZWQsIEphbiAxMjwvc3Bhbj48L3NwYW4+PC9kaXY+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3Itc2Vjb25kYXJ5XCI+PHNwYW4gYXJpYS1sYWJlbD1cIk9ubHkgNyBsZWZ0IGluIHN0b2NrIC0gb3JkZXIgc29vbi5cIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItcHJpY2VcIj5Pbmx5IDcgbGVmdCBpbiBzdG9jayAtIG9yZGVyIHNvb24uPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9zcGFuPlxuXG48L2Rpdj48L2Rpdj5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cbjxkaXYgZGF0YS1hc2luPVwiQjA3VDRTTVNOTFwiIGRhdGEtaW5kZXg9XCIyMFwiIGRhdGEtdXVpZD1cIjg4ZTY4M2MwLWI4YjktNGFmOC1hNmMxLTA4YWRhNzJiYjQxZlwiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gcy1hc2luIHNnLWNvbC0wLW9mLTEyIHNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgcy13aWRnZXQtc3BhY2luZy1zbWFsbCBzZy1jb2wtMTItb2YtMTZcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgXG5cblxuPHNwYW4gY2VsX3dpZGdldF9pZD1cIk1BSU4tU0VBUkNIX1JFU1VMVFMtMjBcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNjNcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS1YUi0xMjhHQi1SZWQvZHAvQjA3VDRTTVNOTC9yZWY9c3JfMV82Mz9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02M1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MUZXeXpRRThZTC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxRld5elFFOFlMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MUZXeXpRRThZTC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxRld5elFFOFlMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxRld5elFFOFlMLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFGV3l6UUU4WUwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiIGFsdD1cIkFwcGxlIGlQaG9uZSBYUiwgMTI4R0IsIFJlZCAtIEZvciBTcHJpbnQgKFJlbmV3ZWQpXCIgZGF0YS1pbWFnZS1pbmRleD1cIjYzXCIgZGF0YS1pbWFnZS1sb2FkPVwiXCIgZGF0YS1pbWFnZS1sYXRlbmN5PVwicy1wcm9kdWN0LWltYWdlXCIgZGF0YS1pbWFnZS1zb3VyY2UtZGVuc2l0eT1cIjFcIi8+PC9kaXY+PC9hPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC04LW9mLTE2IHNnLWNvbC0xMi1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBzLXRpdGxlLWluc3RydWN0aW9ucy1zdHlsZVwiPjxoMiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtc3BhY2luZy1ub25lIGEtY29sb3ItYmFzZSBzLWxpbmUtY2xhbXAtMlwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLVhSLTEyOEdCLVJlZC9kcC9CMDdUNFNNU05ML3JlZj1zcl8xXzYzP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTYzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItYmFzZSBhLXRleHQtbm9ybWFsXCI+QXBwbGUgaVBob25lIFhSLCAxMjhHQiwgUmVkIC0gRm9yIFNwcmludCAoUmVuZXdlZCk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjUuMCBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwN1Q0U01TTkwmYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTUgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjUuMCBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIyXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLVhSLTEyOEdCLVJlZC9kcC9CMDdUNFNNU05ML3JlZj1zcl8xXzYzP2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTYzI2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj4yPC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtWFItMTI4R0ItUmVkL2RwL0IwN1Q0U01TTkwvcmVmPXNyXzFfNjM/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjNcIj48c3BhbiBjbGFzcz1cImEtcHJpY2VcIiBkYXRhLWEtc2l6ZT1cImxcIiBkYXRhLWEtY29sb3I9XCJiYXNlXCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQzNjcuODM8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXN5bWJvbFwiPiQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXdob2xlXCI+MzY3PHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj44Mzwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8c3BhbiBjbGFzcz1cImEtcHJpY2UgYS10ZXh0LXByaWNlXCIgZGF0YS1hLXNpemU9XCJiXCIgZGF0YS1hLXN0cmlrZT1cInRydWVcIiBkYXRhLWEtY29sb3I9XCJzZWNvbmRhcnlcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDM4OS45ODwvc3Bhbj48c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4kMzg5Ljk4PC9zcGFuPjwvc3Bhbj4gPC9hPiA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcy1hbGlnbi1jaGlsZHJlbi1jZW50ZXJcIj48c3BhbiBhcmlhLWxhYmVsPVwiR2V0IGl0IGFzIHNvb24gYXMgV2VkLCBKYW4gMTJcIj48c3Bhbj5HZXQgaXQgYXMgc29vbiBhcyA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPldlZCwgSmFuIDEyPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9zcGFuPlxuXG48L2Rpdj48L2Rpdj5cblxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcblxuICAgIFxuXG5cbjxkaXYgZGF0YS1hc2luPVwiQjA3WFBHWU1MUFwiIGRhdGEtaW5kZXg9XCIyMVwiIGRhdGEtdXVpZD1cImFjNzBiNzM5LTdiMWQtNDkyYS1hNzNkLWE5MmJhN2Y3ZjBiOVwiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNlYXJjaC1yZXN1bHRcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gcy1hc2luIHNnLWNvbC0wLW9mLTEyIHNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgcy13aWRnZXQtc3BhY2luZy1zbWFsbCBzZy1jb2wtMTItb2YtMTZcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgXG5cblxuPHNwYW4gY2VsX3dpZGdldF9pZD1cIk1BSU4tU0VBUkNIX1JFU1VMVFMtMjFcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9U0VBUkNIX1JFU1VMVFMgd2lkZ2V0SWQ9c2VhcmNoLXJlc3VsdHNfNjRcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS02NEdCLVNwYWNlLUdyYXkvZHAvQjA3WFBHWU1MUC9yZWY9c3JfMV82ND9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02NFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MW1yMHdBK3JCTC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxbXIwd0ErckJMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS80MW1yMHdBK3JCTC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxbXIwd0ErckJMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzQxbXIwd0ErckJMLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFtcjB3QStyQkwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiIGFsdD1cIkFwcGxlIGlQaG9uZSBYUywgNjRHQiwgU3BhY2UgR3JheSAtIEZvciBULU1vYmlsZSAoUmVuZXdlZClcIiBkYXRhLWltYWdlLWluZGV4PVwiNjRcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1TcGFjZS1HcmF5L2RwL0IwN1hQR1lNTFAvcmVmPXNyXzFfNjQ/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjRcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS1jb2xvci1iYXNlIGEtdGV4dC1ub3JtYWxcIj5BcHBsZSBpUGhvbmUgWFMsIDY0R0IsIFNwYWNlIEdyYXkgLSBGb3IgVC1Nb2JpbGUgKFJlbmV3ZWQpPC9zcGFuPiA8L2E+IDwvaDI+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1zbWFsbFwiPjxzcGFuIGFyaWEtbGFiZWw9XCI0LjIgb3V0IG9mIDUgc3RhcnNcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OmZhbHNlLCZxdW90O2Nsb3NlQnV0dG9uTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7cG9wb3ZlckxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L3Jldmlldy93aWRnZXRzL2F2ZXJhZ2UtY3VzdG9tZXItcmV2aWV3L3BvcG92ZXIvcmVmPWFjcl9zZWFyY2hfX3BvcG92ZXI/aWU9VVRGOCZhbXA7YXNpbj1CMDdYUEdZTUxQJmFtcDtyZWY9YWNyX3NlYXJjaF9fcG9wb3ZlciZhbXA7Y29udGV4dElkPXNlYXJjaCZxdW90O31cIj48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgcm9sZT1cImJ1dHRvblwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC00IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjIgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiMjRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1TcGFjZS1HcmF5L2RwL0IwN1hQR1lNTFAvcmVmPXNyXzFfNjQ/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjQjY3VzdG9tZXJSZXZpZXdzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPjI0PC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtNjRHQi1TcGFjZS1HcmF5L2RwL0IwN1hQR1lNTFAvcmVmPXNyXzFfNjQ/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjRcIj48c3BhbiBjbGFzcz1cImEtcHJpY2VcIiBkYXRhLWEtc2l6ZT1cImxcIiBkYXRhLWEtY29sb3I9XCJiYXNlXCI+PHNwYW4gY2xhc3M9XCJhLW9mZnNjcmVlblwiPiQzNDkuOTc8L3NwYW4+PHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXN5bWJvbFwiPiQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLXdob2xlXCI+MzQ5PHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj45Nzwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzLWFsaWduLWNoaWxkcmVuLWNlbnRlclwiPjxzcGFuIGFyaWEtbGFiZWw9XCJHZXQgaXQgYXMgc29vbiBhcyBXZWQsIEphbiAxMlwiPjxzcGFuPkdldCBpdCBhcyBzb29uIGFzIDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+V2VkLCBKYW4gMTI8L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDdXSEpEWFdZXCIgZGF0YS1pbmRleD1cIjIyXCIgZGF0YS11dWlkPVwiY2UyNjUxZDAtOTBmZC00YjAyLTkyZTctNjIxMWUxMjk0Y2QwXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0yMlwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c182NVwiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLU1heC01MTJHQi1TaWx2ZXIvZHAvQjA3V0hKRFhXWS9yZWY9c3JfMV82NT9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02NVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVU3eUk2STY0TC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxVTd5STZJNjRMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MVU3eUk2STY0TC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxVTd5STZJNjRMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxVTd5STZJNjRMLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFVN3lJNkk2NEwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiIGFsdD1cIkFwcGxlIGlQaG9uZSBYcyBNYXgsIDUxMkdCLCBTaWx2ZXIgLSBmb3IgVmVyaXpvbiAoUmVuZXdlZClcIiBkYXRhLWltYWdlLWluZGV4PVwiNjVcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGgyIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1zcGFjaW5nLW5vbmUgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtTWF4LTUxMkdCLVNpbHZlci9kcC9CMDdXSEpEWFdZL3JlZj1zcl8xXzY1P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTY1XCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtbWVkaXVtIGEtY29sb3ItYmFzZSBhLXRleHQtbm9ybWFsXCI+QXBwbGUgaVBob25lIFhzIE1heCwgNTEyR0IsIFNpbHZlciAtIGZvciBWZXJpem9uIChSZW5ld2VkKTwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNS4wIG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA3V0hKRFhXWSZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNSBhb2stYWxpZ24tYm90dG9tXCI+PHNwYW4gY2xhc3M9XCJhLWljb24tYWx0XCI+NS4wIG91dCBvZiA1IHN0YXJzPC9zcGFuPjwvaT48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tcG9wb3ZlclwiPjwvaT48L2E+PC9zcGFuPiA8L3NwYW4+PHNwYW4gYXJpYS1sYWJlbD1cIjNcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtTWF4LTUxMkdCLVNpbHZlci9kcC9CMDdXSEpEWFdZL3JlZj1zcl8xXzY1P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTY1I2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj4zPC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9BcHBsZS1pUGhvbmUtTWF4LTUxMkdCLVNpbHZlci9kcC9CMDdXSEpEWFdZL3JlZj1zcl8xXzY1P2tleXdvcmRzPWlwaG9uZSZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtzcj04LTY1XCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kNTk5Ljk5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjU5OTxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+OTk8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPC9hPiA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcy1hbGlnbi1jaGlsZHJlbi1jZW50ZXJcIj48c3BhbiBhcmlhLWxhYmVsPVwiR2V0IGl0IFdlZCwgSmFuIDEyIC0gRnJpLCBKYW4gMTRcIj48c3Bhbj5HZXQgaXQgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5XZWQsIEphbiAxMjwvc3Bhbj48c3Bhbj4gLSA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPkZyaSwgSmFuIDE0PC9zcGFuPjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnlcIj48c3BhbiBhcmlhLWxhYmVsPVwiT25seSAzIGxlZnQgaW4gc3RvY2sgLSBvcmRlciBzb29uLlwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1wcmljZVwiPk9ubHkgMyBsZWZ0IGluIHN0b2NrIC0gb3JkZXIgc29vbi48L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDlKRlE5RzVaXCIgZGF0YS1pbmRleD1cIjIzXCIgZGF0YS11dWlkPVwiZDg0ZDcwZmQtYTkzNy00MTkyLWEzYWEtMmMwYjFmNWZmYjhjXCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0yM1wiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c182NlwiPlxuICAgIDxkaXYgY2xhc3M9XCJzLWluY2x1ZGUtY29udGVudC1tYXJnaW4gcy1sYXRlbmN5LWNmLXNlY3Rpb24gcy1ib3JkZXItYm90dG9tIHMtYm9yZGVyLXRvcFwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb25cIj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbWljcm8gcy1taW4taGVpZ2h0LXNtYWxsXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXByb2R1Y3QtaW1hZ2VcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbm8tb3V0bGluZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTEyLVByby1NYXgvZHAvQjA5SkZROUc1Wi9yZWY9c3JfMV82Nj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02NlwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYW9rLXJlbGF0aXZlIHMtaW1hZ2UtZml4ZWQtaGVpZ2h0XCI+PGltZyBjbGFzcz1cInMtaW1hZ2VcIiBzcmM9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MWwzK1ZHZmoyTC5fQUNfVVkyMThfLmpwZ1wiIHNyY3NldD1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxbDMrVkdmajJMLl9BQ19VWTIxOF8uanBnIDF4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS82MWwzK1ZHZmoyTC5fQUNfVVkzMjdfUUw2NV8uanBnIDEuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxbDMrVkdmajJMLl9BQ19VWTQzNl9RTDY1Xy5qcGcgMngsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzYxbDMrVkdmajJMLl9BQ19VWTU0NV9RTDY1Xy5qcGcgMi41eCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFsMytWR2ZqMkwuX0FDX1VZNjU0X1FMNjVfLmpwZyAzeFwiIGFsdD1cIkFwcGxlIGlQaG9uZSAxMiBQcm8gTWF4LCA1MTJHQiwgR3JhcGhpdGUgLSBVbmxvY2tlZCAoUmVuZXdlZCBQcmVtaXVtKVwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI2NlwiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL0FwcGxlLWlQaG9uZS0xMi1Qcm8tTWF4L2RwL0IwOUpGUTlHNVovcmVmPXNyXzFfNjY/a2V5d29yZHM9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3NyPTgtNjZcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS1jb2xvci1iYXNlIGEtdGV4dC1ub3JtYWxcIj5BcHBsZSBpUGhvbmUgMTIgUHJvIE1heCwgNTEyR0IsIEdyYXBoaXRlIC0gVW5sb2NrZWQgKFJlbmV3ZWQgUHJlbWl1bSk8L3NwYW4+IDwvYT4gPC9oMj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLXNtYWxsXCI+PHNwYW4gYXJpYS1sYWJlbD1cIjUuMCBvdXQgb2YgNSBzdGFyc1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6ZmFsc2UsJnF1b3Q7Y2xvc2VCdXR0b25MYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlckJvdHRvbSZxdW90OywmcXVvdDtwb3BvdmVyTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3VybCZxdW90OzomcXVvdDsvcmV2aWV3L3dpZGdldHMvYXZlcmFnZS1jdXN0b21lci1yZXZpZXcvcG9wb3Zlci9yZWY9YWNyX3NlYXJjaF9fcG9wb3Zlcj9pZT1VVEY4JmFtcDthc2luPUIwOUpGUTlHNVomYW1wO3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyJmFtcDtjb250ZXh0SWQ9c2VhcmNoJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgY2xhc3M9XCJhLXBvcG92ZXItdHJpZ2dlciBhLWRlY2xhcmF0aXZlXCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItc21hbGwgYS1zdGFyLXNtYWxsLTUgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjUuMCBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIyXCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTEyLVByby1NYXgvZHAvQjA5SkZROUc1Wi9yZWY9c3JfMV82Nj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02NiNjdXN0b21lclJldmlld3NcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlXCI+Mjwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvQXBwbGUtaVBob25lLTEyLVByby1NYXgvZHAvQjA5SkZROUc1Wi9yZWY9c3JfMV82Nj9rZXl3b3Jkcz1pcGhvbmUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7c3I9OC02NlwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZVwiIGRhdGEtYS1zaXplPVwibFwiIGRhdGEtYS1jb2xvcj1cImJhc2VcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDEsMzAyLjE5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjEsMzAyPHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj4xOTwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzLWFsaWduLWNoaWxkcmVuLWNlbnRlclwiPjxzcGFuIGFyaWEtbGFiZWw9XCJHZXQgaXQgYXMgc29vbiBhcyBUaHUsIEphbiAxM1wiPjxzcGFuPkdldCBpdCBhcyBzb29uIGFzIDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+VGh1LCBKYW4gMTM8L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDhQUDRYNTg0XCIgZGF0YS1pbmRleD1cIjI0XCIgZGF0YS11dWlkPVwiMTRmNTQxNGMtZjliNC00ZDA3LThlNzItNWI2ZmRhMGJmOGY0XCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIEFkSG9sZGVyIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0yNFwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c182N1wiPlxuICAgIFxuXG5cbjxkaXYgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtaW1wcmVzc2lvbi1sb2dnZXJcIiBkYXRhLWNvbXBvbmVudC1wcm9wcz1cInsmIzM0O3BlcmNlbnRhZ2VTaG93blRvRmlyZSYjMzQ7OiYjMzQ7NTAmIzM0OywmIzM0O2JhdGNoYWJsZSYjMzQ7OnRydWUsJiMzNDtyZXF1aXJlZEVsZW1lbnRTZWxlY3RvciYjMzQ7OiYjMzQ7LnMtaW1hZ2U6dmlzaWJsZSYjMzQ7LCYjMzQ7dXJsJiMzNDs6JiMzNDtodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5lZWwuU3BvbnNvcmVkUHJvZHVjdHNFdmVudFRyYWNraW5nLnByb2Q/cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYnRmJmFtcDthZElkPTIwMDA3Njk0MDc0MDk2MSZhbXA7ZXZlbnRUeXBlPTEmYW1wO2FkSW5kZXg9MiYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICBcblxuXG48ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWltcHJlc3Npb24tY291bnRlclwiIGRhdGEtY29tcG9uZW50LXByb3BzPVwieyYjMzQ7cHJlc2VuY2VDb3VudGVyTmFtZSYjMzQ7OiYjMzQ7c3BfZGVsaXZlcmVkJiMzNDssJiMzNDt0ZXN0RWxlbWVudFNlbGVjdG9yJiMzNDs6JiMzNDsucy1pbWFnZSYjMzQ7LCYjMzQ7aGlkZGVuQ291bnRlck5hbWUmIzM0OzomIzM0O3NwX2hpZGRlbiYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnQgcy1mZWF0dXJlZC1yZXN1bHQtaXRlbSBcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2J0Zl9hcHNfc3JfcGc0XzE/aWU9VVRGOCZhbXA7YWRJZD1BMTA0MTg2MzJSNjRVMjFGS0gzQ0wmYW1wO3VybD0lMkZBcHBsZS1pUGhvbmUtTWluaS0xMjhHQi1Qcm9kdWN0JTJGZHAlMkZCMDhQUDRYNTg0JTJGcmVmJTNEc3JfMV82N19zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNjctc3BvbnMlMjZwc2MlM0QxJTI2c21pZCUzREExS1dKVlM1N05YMDNJJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9idGZcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFvay1yZWxhdGl2ZSBzLWltYWdlLWZpeGVkLWhlaWdodFwiPjxpbWcgY2xhc3M9XCJzLWltYWdlXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFRcDF6ZU5NQ0wuX0FDX1VZMjE4Xy5qcGdcIiBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVFwMXplTk1DTC5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNzFRcDF6ZU5NQ0wuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVFwMXplTk1DTC5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS83MVFwMXplTk1DTC5fQUNfVVk1NDVfUUw2NV8uanBnIDIuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzcxUXAxemVOTUNMLl9BQ19VWTY1NF9RTDY1Xy5qcGcgM3hcIiBhbHQ9XCJTcG9uc29yZWQgQWQgLSBBcHBsZSBpUGhvbmUgMTIgTWluaSwgMTI4R0IsIChQcm9kdWN0KVJlZCAtIEZ1bGx5IFVubG9ja2VkIChSZW5ld2VkKVwiIGRhdGEtaW1hZ2UtaW5kZXg9XCI2N1wiIGRhdGEtaW1hZ2UtbG9hZD1cIlwiIGRhdGEtaW1hZ2UtbGF0ZW5jeT1cInMtcHJvZHVjdC1pbWFnZVwiIGRhdGEtaW1hZ2Utc291cmNlLWRlbnNpdHk9XCIxXCIvPjwvZGl2PjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtOC1vZi0xNiBzZy1jb2wtMTItb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy10aXRsZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzomcXVvdDt0cnVlJnF1b3Q7LCZxdW90O2RhdGFTdHJhdGVneSZxdW90OzomcXVvdDtwcmVsb2FkJnF1b3Q7LCZxdW90O25hbWUmcXVvdDs6JnF1b3Q7c3AtaW5mby1wb3BvdmVyLUIwOFBQNFg1ODQmcXVvdDssJnF1b3Q7cG9zaXRpb24mcXVvdDs6JnF1b3Q7dHJpZ2dlclZlcnRpY2FsJnF1b3Q7fVwiPjxhIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiByb2xlPVwiYnV0dG9uXCIgc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246IG5vbmU7XCIgYXJpYS1sYWJlbD1cIlZpZXcgU3BvbnNvcmVkIGluZm9ybWF0aW9uIG9yIGxlYXZlIGFkIGZlZWRiYWNrXCIgY2xhc3M9XCJzLWxhYmVsLXBvcG92ZXIgcy1zcG9uc29yZWQtbGFiZWwtdGV4dFwiPjxzcGFuIGNsYXNzPVwicy1sYWJlbC1wb3BvdmVyLWRlZmF1bHRcIj48c3BhbiBjbGFzcz1cImEtY29sb3Itc2Vjb25kYXJ5XCI+U3BvbnNvcmVkPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cInMtbGFiZWwtcG9wb3Zlci1ob3ZlclwiPjxzcGFuIGNsYXNzPVwiYS1jb2xvci1iYXNlXCI+U3BvbnNvcmVkPC9zcGFuPjwvc3Bhbj4gPHNwYW4gY2xhc3M9XCJhb2staW5saW5lLWJsb2NrIHMtc3BvbnNvcmVkLWxhYmVsLWluZm8taWNvblwiPjwvc3Bhbj48L2E+PC9zcGFuPjxkaXYgY2xhc3M9XCJhLXBvcG92ZXItcHJlbG9hZFwiIGlkPVwiYS1wb3BvdmVyLXNwLWluZm8tcG9wb3Zlci1CMDhQUDRYNTg0XCI+PHNwYW4+WW914oCZcmUgc2VlaW5nIHRoaXMgYWQgYmFzZWQgb24gdGhlIHByb2R1Y3TigJlzIHJlbGV2YW5jZSB0byB5b3VyIHNlYXJjaCBxdWVyeS48L3NwYW4+PGRpdiBjbGFzcz1cImEtcm93XCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJzLXNhZmUtYWpheC1tb2RhbC10cmlnZ2VyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtcy1zYWZlLWFqYXgtbW9kYWwtdHJpZ2dlclwiIGRhdGEtcy1zYWZlLWFqYXgtbW9kYWwtdHJpZ2dlcj1cInsmcXVvdDthamF4VXJsJnF1b3Q7OiZxdW90Oy9hZi9zcC1sb29tL2ZlZWRiYWNrLWZvcm0/cGw9JTdCJTIyYWRQbGFjZW1lbnRNZXRhRGF0YSUyMiUzQSU3QiUyMnNlYXJjaFRlcm1zJTIyJTNBJTIyYVhCb2IyNWwlMjIlMkMlMjJwYWdlVHlwZSUyMiUzQSUyMlNlYXJjaCUyMiUyQyUyMmZlZWRiYWNrVHlwZSUyMiUzQSUyMnNwb25zb3JlZFByb2R1Y3RzTG9vbSUyMiUyQyUyMnNsb3ROYW1lJTIyJTNBJTIyQk9QJTIyJTdEJTJDJTIyYWRDcmVhdGl2ZU1ldGFEYXRhJTIyJTNBJTdCJTIyYWRQcm9ncmFtSWQlMjIlM0ExMDI0JTJDJTIyYWRDcmVhdGl2ZURldGFpbHMlMjIlM0ElNUIlN0IlMjJhc2luJTIyJTNBJTIyQjA4UFA0WDU4NCUyMiUyQyUyMnRpdGxlJTIyJTNBJTIyQXBwbGUraVBob25lKzEyK01pbmklMkMrMTI4R0IlMkMrJTI4UHJvZHVjdCUyOVJlZCstK0Z1bGx5K1VubG9ja2VkKyUyOFJlbmV3ZWQlMjklMjIlMkMlMjJwcmljZUluZm8lMjIlM0ElN0IlMjJhbW91bnQlMjIlM0E1OTIuMTUlMkMlMjJjdXJyZW5jeUNvZGUlMjIlM0ElMjJVU0QlMjIlN0QlMkMlMjJza3UlMjIlM0ElMjJDRTMzNjMyQyUyNFBPMDAwMDEwNTAwNSUyNDEyTUlOSS0xMjhHQi1SRC1IUyUyMiUyQyUyMmFkSWQlMjIlM0ElMjJBMTA0MTg2MzJSNjRVMjFGS0gzQ0wlMjIlMkMlMjJjYW1wYWlnbklkJTIyJTNBJTIyQTA5NDU3MjFGNFNHSDIzNVdJT00lMjIlN0QlNUQlN0QlN0QmcXVvdDssJnF1b3Q7ZGF0YVN0cmF0ZWd5JnF1b3Q7OiZxdW90O2FqYXgmcXVvdDssJnF1b3Q7aGVhZGVyJnF1b3Q7OiZxdW90O1NoYXJlIHlvdXIgZmVlZGJhY2smcXVvdDt9XCI+PGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZVwiIGhyZWY9XCIjXCI+PHNwYW4+TGVhdmUgYWQgZmVlZGJhY2s8L3NwYW4+IDwvYT4gPC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxoMiBjbGFzcz1cImEtc2l6ZS1taW5pIGEtc3BhY2luZy1ub25lIGEtY29sb3ItYmFzZSBzLWxpbmUtY2xhbXAtMlwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9cGFfc3BfYnRmX2Fwc19zcl9wZzRfMT9pZT1VVEY4JmFtcDthZElkPUExMDQxODYzMlI2NFUyMUZLSDNDTCZhbXA7dXJsPSUyRkFwcGxlLWlQaG9uZS1NaW5pLTEyOEdCLVByb2R1Y3QlMkZkcCUyRkIwOFBQNFg1ODQlMkZyZWYlM0Rzcl8xXzY3X3NzcGElM0ZrZXl3b3JkcyUzRGlwaG9uZSUyNnFpZCUzRDE2NDE3NTk0NDklMjZzcHJlZml4JTNEaXBob25lJTI1MkNhcHMlMjUyQzI2MiUyNnNyJTNEOC02Ny1zcG9ucyUyNnBzYyUzRDElMjZzbWlkJTNEQTFLV0pWUzU3TlgwM0kmYW1wO3F1YWxpZmllcj0xNjQxNzU5NDQ5JmFtcDtpZD00NDE2ODgzNTU5MTY2NjUxJmFtcDt3aWRnZXROYW1lPXNwX2J0ZlwiPjxzcGFuIGNsYXNzPVwiYS1zaXplLW1lZGl1bSBhLWNvbG9yLWJhc2UgYS10ZXh0LW5vcm1hbFwiPkFwcGxlIGlQaG9uZSAxMiBNaW5pLCAxMjhHQiwgKFByb2R1Y3QpUmVkIC0gRnVsbHkgVW5sb2NrZWQgKFJlbmV3ZWQpPC9zcGFuPiA8L2E+IDwvaDI+PC9kaXY+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLW1pY3JvXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1zbWFsbFwiPjxzcGFuIGFyaWEtbGFiZWw9XCI0LjQgb3V0IG9mIDUgc3RhcnNcIj48c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cImEtcG9wb3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLWEtcG9wb3ZlclwiIGRhdGEtYS1wb3BvdmVyPVwieyZxdW90O2Nsb3NlQnV0dG9uJnF1b3Q7OmZhbHNlLCZxdW90O2Nsb3NlQnV0dG9uTGFiZWwmcXVvdDs6JnF1b3Q7JnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJCb3R0b20mcXVvdDssJnF1b3Q7cG9wb3ZlckxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDt1cmwmcXVvdDs6JnF1b3Q7L3Jldmlldy93aWRnZXRzL2F2ZXJhZ2UtY3VzdG9tZXItcmV2aWV3L3BvcG92ZXIvcmVmPWFjcl9zZWFyY2hfX3BvcG92ZXI/aWU9VVRGOCZhbXA7YXNpbj1CMDhQUDRYNTg0JmFtcDtyZWY9YWNyX3NlYXJjaF9fcG9wb3ZlciZhbXA7Y29udGV4dElkPXNlYXJjaCZxdW90O31cIj48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgcm9sZT1cImJ1dHRvblwiIGNsYXNzPVwiYS1wb3BvdmVyLXRyaWdnZXIgYS1kZWNsYXJhdGl2ZVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLXNtYWxsIGEtc3Rhci1zbWFsbC00LTUgYW9rLWFsaWduLWJvdHRvbVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjQuNCBvdXQgb2YgNSBzdGFyczwvc3Bhbj48L2k+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXBvcG92ZXJcIj48L2k+PC9hPjwvc3Bhbj4gPC9zcGFuPjxzcGFuIGFyaWEtbGFiZWw9XCIxLDEzNVwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGVcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2J0Zl9hcHNfc3JfcGc0XzE/aWU9VVRGOCZhbXA7YWRJZD1BMTA0MTg2MzJSNjRVMjFGS0gzQ0wmYW1wO3VybD0lMkZBcHBsZS1pUGhvbmUtTWluaS0xMjhHQi1Qcm9kdWN0JTJGZHAlMkZCMDhQUDRYNTg0JTJGcmVmJTNEc3JfMV82N19zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNjctc3BvbnMlMjZwc2MlM0QxJTI2c21pZCUzREExS1dKVlM1N05YMDNJJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9idGYjY3VzdG9tZXJSZXZpZXdzXCI+PHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZVwiPjEsMTM1PC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctcm93XCI+PGRpdiBjbGFzcz1cInNnLWNvbCBzZy1jb2wtNC1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wtNC1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3Atc21hbGwgcy1wcmljZS1pbnN0cnVjdGlvbnMtc3R5bGVcIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCI+PGEgY2xhc3M9XCJhLXNpemUtYmFzZSBhLWxpbmstbm9ybWFsIHMtbGluay1zdHlsZSBhLXRleHQtbm9ybWFsXCIgaHJlZj1cIi9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1wYV9zcF9idGZfYXBzX3NyX3BnNF8xP2llPVVURjgmYW1wO2FkSWQ9QTEwNDE4NjMyUjY0VTIxRktIM0NMJmFtcDt1cmw9JTJGQXBwbGUtaVBob25lLU1pbmktMTI4R0ItUHJvZHVjdCUyRmRwJTJGQjA4UFA0WDU4NCUyRnJlZiUzRHNyXzFfNjdfc3NwYSUzRmtleXdvcmRzJTNEaXBob25lJTI2cWlkJTNEMTY0MTc1OTQ0OSUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2c3IlM0Q4LTY3LXNwb25zJTI2cHNjJTNEMSUyNnNtaWQlM0RBMUtXSlZTNTdOWDAzSSZhbXA7cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYnRmXCI+PHNwYW4gY2xhc3M9XCJhLXByaWNlXCIgZGF0YS1hLXNpemU9XCJsXCIgZGF0YS1hLWNvbG9yPVwiYmFzZVwiPjxzcGFuIGNsYXNzPVwiYS1vZmZzY3JlZW5cIj4kNTkyLjE1PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjU5MjxzcGFuIGNsYXNzPVwiYS1wcmljZS1kZWNpbWFsXCI+Ljwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXByaWNlLWZyYWN0aW9uXCI+MTU8L3NwYW4+PC9zcGFuPjwvc3Bhbj4gPC9hPiA8L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtc3BhY2luZy10b3AtbWljcm9cIj48ZGl2IGNsYXNzPVwiYS1yb3cgYS1zaXplLWJhc2UgYS1jb2xvci1zZWNvbmRhcnkgcy1hbGlnbi1jaGlsZHJlbi1jZW50ZXJcIj48c3BhbiBhcmlhLWxhYmVsPVwiR2V0IGl0IEZyaSwgSmFuIDE0IC0gVGh1LCBKYW4gMjBcIj48c3Bhbj5HZXQgaXQgPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS10ZXh0LWJvbGRcIj5GcmksIEphbiAxNDwvc3Bhbj48c3Bhbj4gLSA8L3NwYW4+PHNwYW4gY2xhc3M9XCJhLXRleHQtYm9sZFwiPlRodSwgSmFuIDIwPC9zcGFuPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC04LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PlxuPC9kaXY+XG5cbjwvZGl2PlxuXG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuPGRpdiBkYXRhLWFzaW49XCJCMDhIUUQ5VFRQXCIgZGF0YS1pbmRleD1cIjI1XCIgZGF0YS11dWlkPVwiNWFjZDljYTctZjA3Zi00ZWNhLTk5ZTgtMTlmYzY1ZWZiYmU5XCIgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtc2VhcmNoLXJlc3VsdFwiIGNsYXNzPVwicy1yZXN1bHQtaXRlbSBzLWFzaW4gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIEFkSG9sZGVyIHNnLWNvbCBzLXdpZGdldC1zcGFjaW5nLXNtYWxsIHNnLWNvbC0xMi1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1TRUFSQ0hfUkVTVUxUUy0yNVwiIGNsYXNzPVwiY2Vsd2lkZ2V0IHNsb3Q9TUFJTiB0ZW1wbGF0ZT1TRUFSQ0hfUkVTVUxUUyB3aWRnZXRJZD1zZWFyY2gtcmVzdWx0c182OFwiPlxuICAgIFxuXG5cbjxkaXYgZGF0YS1jb21wb25lbnQtdHlwZT1cInMtaW1wcmVzc2lvbi1sb2dnZXJcIiBkYXRhLWNvbXBvbmVudC1wcm9wcz1cInsmIzM0O3BlcmNlbnRhZ2VTaG93blRvRmlyZSYjMzQ7OiYjMzQ7NTAmIzM0OywmIzM0O2JhdGNoYWJsZSYjMzQ7OnRydWUsJiMzNDtyZXF1aXJlZEVsZW1lbnRTZWxlY3RvciYjMzQ7OiYjMzQ7LnMtaW1hZ2U6dmlzaWJsZSYjMzQ7LCYjMzQ7dXJsJiMzNDs6JiMzNDtodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5lZWwuU3BvbnNvcmVkUHJvZHVjdHNFdmVudFRyYWNraW5nLnByb2Q/cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYnRmJmFtcDthZElkPTIwMDA0NTU2NjQxNzU0MSZhbXA7ZXZlbnRUeXBlPTEmYW1wO2FkSW5kZXg9MyYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICBcblxuXG48ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWltcHJlc3Npb24tY291bnRlclwiIGRhdGEtY29tcG9uZW50LXByb3BzPVwieyYjMzQ7cHJlc2VuY2VDb3VudGVyTmFtZSYjMzQ7OiYjMzQ7c3BfZGVsaXZlcmVkJiMzNDssJiMzNDt0ZXN0RWxlbWVudFNlbGVjdG9yJiMzNDs6JiMzNDsucy1pbWFnZSYjMzQ7LCYjMzQ7aGlkZGVuQ291bnRlck5hbWUmIzM0OzomIzM0O3NwX2hpZGRlbiYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnQgcy1mZWF0dXJlZC1yZXN1bHQtaXRlbSBcIj5cbiAgICA8ZGl2IGNsYXNzPVwicy1pbmNsdWRlLWNvbnRlbnQtbWFyZ2luIHMtbGF0ZW5jeS1jZi1zZWN0aW9uIHMtYm9yZGVyLWJvdHRvbSBzLWJvcmRlci10b3BcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1pY3JvIHMtbWluLWhlaWdodC1zbWFsbFwiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1yb3dcIj48ZGl2IGNsYXNzPVwic2ctY29sIHNnLWNvbC00LW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wcm9kdWN0LWltYWdlXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5vLW91dGxpbmVcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2J0Zl9hcHNfc3JfcGc0XzE/aWU9VVRGOCZhbXA7YWRJZD1BMDE1NjQwMjI3WDBPT0ZUWE1VQjAmYW1wO3VybD0lMkZDaGFyZ2VyLUVHT1dBWS0zLVBvcnQtQWRhcHRlci1Db21wYXRpYmxlJTJGZHAlMkZCMDhIUUQ5VFRQJTJGcmVmJTNEc3JfMV82OF9zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNjgtc3BvbnMlMjZwc2MlM0QxJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9idGZcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGFvay1yZWxhdGl2ZSBzLWltYWdlLWZpeGVkLWhlaWdodFwiPjxpbWcgY2xhc3M9XCJzLWltYWdlXCIgc3JjPVwiaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwczh0T2E4ZEwuX0FDX1VZMjE4Xy5qcGdcIiBzcmNzZXQ9XCJodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXBzOHRPYThkTC5fQUNfVVkyMThfLmpwZyAxeCwgaHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNTFwczh0T2E4ZEwuX0FDX1VZMzI3X1FMNjVfLmpwZyAxLjV4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXBzOHRPYThkTC5fQUNfVVk0MzZfUUw2NV8uanBnIDJ4LCBodHRwczovL20ubWVkaWEtYW1hem9uLmNvbS9pbWFnZXMvSS81MXBzOHRPYThkTC5fQUNfVVk1NDVfUUw2NV8uanBnIDIuNXgsIGh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9JLzUxcHM4dE9hOGRMLl9BQ19VWTY1NF9RTDY1Xy5qcGcgM3hcIiBhbHQ9XCJTcG9uc29yZWQgQWQgLSBVU0IgQyBDYXIgQ2hhcmdlciwgRSBFR09XQVkgNjBXIDMtUG9ydCBUeXBlIEMgQ2FyIEFkYXB0ZXIgUG93ZXIgU3VwcGx5IHdpdGggNDVXIFBEIFBvcnQgJmFtcDsgMiBVU0IgQSBQb3J0cyBDb20uLi5cIiBkYXRhLWltYWdlLWluZGV4PVwiNjhcIiBkYXRhLWltYWdlLWxvYWQ9XCJcIiBkYXRhLWltYWdlLWxhdGVuY3k9XCJzLXByb2R1Y3QtaW1hZ2VcIiBkYXRhLWltYWdlLXNvdXJjZS1kZW5zaXR5PVwiMVwiLz48L2Rpdj48L2E+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTgtb2YtMTYgc2ctY29sLTEyLW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGl0bGUtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwiYS1wb3BvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1wb3BvdmVyXCIgZGF0YS1hLXBvcG92ZXI9XCJ7JnF1b3Q7Y2xvc2VCdXR0b24mcXVvdDs6JnF1b3Q7dHJ1ZSZxdW90OywmcXVvdDtkYXRhU3RyYXRlZ3kmcXVvdDs6JnF1b3Q7cHJlbG9hZCZxdW90OywmcXVvdDtuYW1lJnF1b3Q7OiZxdW90O3NwLWluZm8tcG9wb3Zlci1CMDhIUUQ5VFRQJnF1b3Q7LCZxdW90O3Bvc2l0aW9uJnF1b3Q7OiZxdW90O3RyaWdnZXJWZXJ0aWNhbCZxdW90O31cIj48YSBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgcm9sZT1cImJ1dHRvblwiIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOiBub25lO1wiIGFyaWEtbGFiZWw9XCJWaWV3IFNwb25zb3JlZCBpbmZvcm1hdGlvbiBvciBsZWF2ZSBhZCBmZWVkYmFja1wiIGNsYXNzPVwicy1sYWJlbC1wb3BvdmVyIHMtc3BvbnNvcmVkLWxhYmVsLXRleHRcIj48c3BhbiBjbGFzcz1cInMtbGFiZWwtcG9wb3Zlci1kZWZhdWx0XCI+PHNwYW4gY2xhc3M9XCJhLWNvbG9yLXNlY29uZGFyeVwiPlNwb25zb3JlZDwvc3Bhbj48L3NwYW4+PHNwYW4gY2xhc3M9XCJzLWxhYmVsLXBvcG92ZXItaG92ZXJcIj48c3BhbiBjbGFzcz1cImEtY29sb3ItYmFzZVwiPlNwb25zb3JlZDwvc3Bhbj48L3NwYW4+IDxzcGFuIGNsYXNzPVwiYW9rLWlubGluZS1ibG9jayBzLXNwb25zb3JlZC1sYWJlbC1pbmZvLWljb25cIj48L3NwYW4+PC9hPjwvc3Bhbj48ZGl2IGNsYXNzPVwiYS1wb3BvdmVyLXByZWxvYWRcIiBpZD1cImEtcG9wb3Zlci1zcC1pbmZvLXBvcG92ZXItQjA4SFFEOVRUUFwiPjxzcGFuPllvdeKAmXJlIHNlZWluZyB0aGlzIGFkIGJhc2VkIG9uIHRoZSBwcm9kdWN04oCZcyByZWxldmFuY2UgdG8geW91ciBzZWFyY2ggcXVlcnkuPC9zcGFuPjxkaXYgY2xhc3M9XCJhLXJvd1wiPjxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1zYWZlLWFqYXgtbW9kYWwtdHJpZ2dlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtc2FmZS1hamF4LW1vZGFsLXRyaWdnZXJcIiBkYXRhLXMtc2FmZS1hamF4LW1vZGFsLXRyaWdnZXI9XCJ7JnF1b3Q7YWpheFVybCZxdW90OzomcXVvdDsvYWYvc3AtbG9vbS9mZWVkYmFjay1mb3JtP3BsPSU3QiUyMmFkUGxhY2VtZW50TWV0YURhdGElMjIlM0ElN0IlMjJzZWFyY2hUZXJtcyUyMiUzQSUyMmFYQm9iMjVsJTIyJTJDJTIycGFnZVR5cGUlMjIlM0ElMjJTZWFyY2glMjIlMkMlMjJmZWVkYmFja1R5cGUlMjIlM0ElMjJzcG9uc29yZWRQcm9kdWN0c0xvb20lMjIlMkMlMjJzbG90TmFtZSUyMiUzQSUyMkJPUCUyMiU3RCUyQyUyMmFkQ3JlYXRpdmVNZXRhRGF0YSUyMiUzQSU3QiUyMmFkUHJvZ3JhbUlkJTIyJTNBMTAyNCUyQyUyMmFkQ3JlYXRpdmVEZXRhaWxzJTIyJTNBJTVCJTdCJTIyYXNpbiUyMiUzQSUyMkIwOEhRRDlUVFAlMjIlMkMlMjJ0aXRsZSUyMiUzQSUyMlVTQitDK0NhcitDaGFyZ2VyJTJDK0UrRUdPV0FZKzYwVyszLVBvcnQrVHlwZStDK0NhcitBZGFwdGVyK1Bvd2VyK1N1cHBseSt3aXRoKzQ1VytQRCtQb3J0KyUyNisyK1VTQitBK1BvJTIyJTJDJTIycHJpY2VJbmZvJTIyJTNBJTdCJTIyYW1vdW50JTIyJTNBMjEuOTklMkMlMjJjdXJyZW5jeUNvZGUlMjIlM0ElMjJVU0QlMjIlN0QlMkMlMjJza3UlMjIlM0ElMjJBTS02MFctMUMyQS1XSCUyMiUyQyUyMmFkSWQlMjIlM0ElMjJBMDE1NjQwMjI3WDBPT0ZUWE1VQjAlMjIlMkMlMjJjYW1wYWlnbklkJTIyJTNBJTIyQTAyMzA1MjQzRjhKTzgyR1JVRzZEJTIyJTdEJTVEJTdEJTdEJnF1b3Q7LCZxdW90O2RhdGFTdHJhdGVneSZxdW90OzomcXVvdDthamF4JnF1b3Q7LCZxdW90O2hlYWRlciZxdW90OzomcXVvdDtTaGFyZSB5b3VyIGZlZWRiYWNrJnF1b3Q7fVwiPjxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGVcIiBocmVmPVwiI1wiPjxzcGFuPkxlYXZlIGFkIGZlZWRiYWNrPC9zcGFuPiA8L2E+IDwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48aDIgY2xhc3M9XCJhLXNpemUtbWluaSBhLXNwYWNpbmctbm9uZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlIGEtdGV4dC1ub3JtYWxcIiBocmVmPVwiL2dwL3NscmVkaXJlY3QvcGljYXNzb1JlZGlyZWN0Lmh0bWwvcmVmPXBhX3NwX2J0Zl9hcHNfc3JfcGc0XzE/aWU9VVRGOCZhbXA7YWRJZD1BMDE1NjQwMjI3WDBPT0ZUWE1VQjAmYW1wO3VybD0lMkZDaGFyZ2VyLUVHT1dBWS0zLVBvcnQtQWRhcHRlci1Db21wYXRpYmxlJTJGZHAlMkZCMDhIUUQ5VFRQJTJGcmVmJTNEc3JfMV82OF9zc3BhJTNGa2V5d29yZHMlM0RpcGhvbmUlMjZxaWQlM0QxNjQxNzU5NDQ5JTI2c3ByZWZpeCUzRGlwaG9uZSUyNTJDYXBzJTI1MkMyNjIlMjZzciUzRDgtNjgtc3BvbnMlMjZwc2MlM0QxJmFtcDtxdWFsaWZpZXI9MTY0MTc1OTQ0OSZhbXA7aWQ9NDQxNjg4MzU1OTE2NjY1MSZhbXA7d2lkZ2V0TmFtZT1zcF9idGZcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0gYS1jb2xvci1iYXNlIGEtdGV4dC1ub3JtYWxcIj5VU0IgQyBDYXIgQ2hhcmdlciwgRSBFR09XQVkgNjBXIDMtUG9ydCBUeXBlIEMgQ2FyIEFkYXB0ZXIgUG93ZXIgU3VwcGx5IHdpdGggNDVXIFBEIFBvcnQgJmFtcDsgMiBVU0IgQSBQb3J0cyBDb21wYXRpYmxlIHdpdGggTWFjIEJvb2sgUHJvL0FpciAyMDE4IGlQYWQgUHJvIGlQaG9uZSBYcy9NYXgvWFIvWC84IFMxMC9TOSBhbmQgTW9yZTwvc3Bhbj4gPC9hPiA8L2gyPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtc21hbGxcIj48c3BhbiBhcmlhLWxhYmVsPVwiNC40IG91dCBvZiA1IHN0YXJzXCI+PHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJhLXBvcG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLXBvcG92ZXJcIiBkYXRhLWEtcG9wb3Zlcj1cInsmcXVvdDtjbG9zZUJ1dHRvbiZxdW90OzpmYWxzZSwmcXVvdDtjbG9zZUJ1dHRvbkxhYmVsJnF1b3Q7OiZxdW90OyZxdW90OywmcXVvdDtwb3NpdGlvbiZxdW90OzomcXVvdDt0cmlnZ2VyQm90dG9tJnF1b3Q7LCZxdW90O3BvcG92ZXJMYWJlbCZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7dXJsJnF1b3Q7OiZxdW90Oy9yZXZpZXcvd2lkZ2V0cy9hdmVyYWdlLWN1c3RvbWVyLXJldmlldy9wb3BvdmVyL3JlZj1hY3Jfc2VhcmNoX19wb3BvdmVyP2llPVVURjgmYW1wO2FzaW49QjA4SFFEOVRUUCZhbXA7cmVmPWFjcl9zZWFyY2hfX3BvcG92ZXImYW1wO2NvbnRleHRJZD1zZWFyY2gmcXVvdDt9XCI+PGEgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIHJvbGU9XCJidXR0b25cIiBjbGFzcz1cImEtcG9wb3Zlci10cmlnZ2VyIGEtZGVjbGFyYXRpdmVcIj48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tc3Rhci1zbWFsbCBhLXN0YXItc21hbGwtNC01IGFvay1hbGlnbi1ib3R0b21cIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40LjQgb3V0IG9mIDUgc3RhcnM8L3NwYW4+PC9pPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1wb3BvdmVyXCI+PC9pPjwvYT48L3NwYW4+IDwvc3Bhbj48c3BhbiBhcmlhLWxhYmVsPVwiNzRcIj48YSBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1saW5rLXN0eWxlXCIgaHJlZj1cIi9ncC9zbHJlZGlyZWN0L3BpY2Fzc29SZWRpcmVjdC5odG1sL3JlZj1wYV9zcF9idGZfYXBzX3NyX3BnNF8xP2llPVVURjgmYW1wO2FkSWQ9QTAxNTY0MDIyN1gwT09GVFhNVUIwJmFtcDt1cmw9JTJGQ2hhcmdlci1FR09XQVktMy1Qb3J0LUFkYXB0ZXItQ29tcGF0aWJsZSUyRmRwJTJGQjA4SFFEOVRUUCUyRnJlZiUzRHNyXzFfNjhfc3NwYSUzRmtleXdvcmRzJTNEaXBob25lJTI2cWlkJTNEMTY0MTc1OTQ0OSUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2c3IlM0Q4LTY4LXNwb25zJTI2cHNjJTNEMSZhbXA7cXVhbGlmaWVyPTE2NDE3NTk0NDkmYW1wO2lkPTQ0MTY4ODM1NTkxNjY2NTEmYW1wO3dpZGdldE5hbWU9c3BfYnRmI2N1c3RvbWVyUmV2aWV3c1wiPjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2VcIj43NDwvc3Bhbj4gPC9hPiA8L3NwYW4+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cInNnLXJvd1wiPjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTQtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZSBhLXNwYWNpbmctdG9wLXNtYWxsIHMtcHJpY2UtaW5zdHJ1Y3Rpb25zLXN0eWxlXCI+PGRpdiBjbGFzcz1cImEtcm93IGEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiPjxhIGNsYXNzPVwiYS1zaXplLW1pbmkgYS1saW5rLW5vcm1hbCBzLWxpbmstc3R5bGUgYS10ZXh0LW5vcm1hbFwiIGhyZWY9XCIvZ3Avc2xyZWRpcmVjdC9waWNhc3NvUmVkaXJlY3QuaHRtbC9yZWY9cGFfc3BfYnRmX2Fwc19zcl9wZzRfMT9pZT1VVEY4JmFtcDthZElkPUEwMTU2NDAyMjdYME9PRlRYTVVCMCZhbXA7dXJsPSUyRkNoYXJnZXItRUdPV0FZLTMtUG9ydC1BZGFwdGVyLUNvbXBhdGlibGUlMkZkcCUyRkIwOEhRRDlUVFAlMkZyZWYlM0Rzcl8xXzY4X3NzcGElM0ZrZXl3b3JkcyUzRGlwaG9uZSUyNnFpZCUzRDE2NDE3NTk0NDklMjZzcHJlZml4JTNEaXBob25lJTI1MkNhcHMlMjUyQzI2MiUyNnNyJTNEOC02OC1zcG9ucyUyNnBzYyUzRDEmYW1wO3F1YWxpZmllcj0xNjQxNzU5NDQ5JmFtcDtpZD00NDE2ODgzNTU5MTY2NjUxJmFtcDt3aWRnZXROYW1lPXNwX2J0ZlwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZVwiIGRhdGEtYS1zaXplPVwibFwiIGRhdGEtYS1jb2xvcj1cImJhc2VcIj48c3BhbiBjbGFzcz1cImEtb2Zmc2NyZWVuXCI+JDIxLjk5PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiYS1wcmljZS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiYS1wcmljZS13aG9sZVwiPjIxPHNwYW4gY2xhc3M9XCJhLXByaWNlLWRlY2ltYWxcIj4uPC9zcGFuPjwvc3Bhbj48c3BhbiBjbGFzcz1cImEtcHJpY2UtZnJhY3Rpb25cIj45OTwvc3Bhbj48L3NwYW4+PC9zcGFuPiA8L2E+IDwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgYS1zcGFjaW5nLXRvcC1taWNyb1wiPjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNpemUtYmFzZSBhLWNvbG9yLXNlY29uZGFyeSBzLWFsaWduLWNoaWxkcmVuLWNlbnRlclwiPjxzcGFuIGFyaWEtbGFiZWw9XCJHZXQgaXQgYXMgc29vbiBhcyBUaHUsIEphbiAxM1wiPjxzcGFuPkdldCBpdCBhcyBzb29uIGFzIDwvc3Bhbj48c3BhbiBjbGFzcz1cImEtdGV4dC1ib2xkXCI+VGh1LCBKYW4gMTM8L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJzZy1jb2wgc2ctY29sLTQtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sLTgtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+XG48L2Rpdj5cblxuPC9kaXY+XG5cbjwvc3Bhbj5cblxuPC9kaXY+PC9kaXY+XG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG48ZGl2IGRhdGEtYXNpbj1cIlwiIGRhdGEtaW5kZXg9XCIyNlwiIGRhdGEtdXVpZD1cIjY4ODM0MTYxLTViNTEtNDY3Mi05NTdlLWMxMzc1MzdkNjAxMFwiIGRhdGEtY29tcG9uZW50LXR5cGU9XCJcIiBjbGFzcz1cInMtcmVzdWx0LWl0ZW0gc2ctY29sLTAtb2YtMTIgc2ctY29sLTE2LW9mLTIwIHMtd2lkZ2V0IHNnLWNvbCBzZy1jb2wtMTItb2YtMTYgcy13aWRnZXQtc3BhY2luZy1sYXJnZVwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1URVhUX1JFRk9STVVMQVRJT04tMjZcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PU1BSU4gdGVtcGxhdGU9VEVYVF9SRUZPUk1VTEFUSU9OIHBkX3JkX3c9MVl5MUIgd2lkZ2V0PWxvb20tZGVza3RvcC1ib3R0b20tc2xvdF9yc3BzLXJlbGF0ZWQtc2VhcmNoZXMgcGZfcmRfcD00ZmEwZTk3YS0xM2E0LTQ5MWItYTEyNy0xMzNhNTU0YjRkYTMgcGZfcmRfcj0xUTcwTTc4Q0NTOEFTOTlSTUNBOCBwZF9yZF9yPTg4NTY4MDViLTk3MzItNDE4MS1iYWY3LTYxMzU2MWRkNmVkYSBwZF9yZF93Zz1iTGg2ZCB3aWRnZXRJZD1sb29tLWRlc2t0b3AtYm90dG9tLXNsb3RfcnNwcy1yZWxhdGVkLXNlYXJjaGVzXCI+XG4gICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIDxkaXYgY2xhc3M9XCJzZy1yb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNnLWNvbC0xNi1vZi0yMCBzZy1jb2wgc2ctY29sLTgtb2YtMTIgc2ctY29sLTEyLW9mLTE2XCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgICAgICAgICAgXG4gICAgICAgICAgICA8ZGl2IGFyaWEtbGFiZWw9XCJSZWxhdGVkIHNlYXJjaGVzIGluIGlwaG9uZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtdGV4dC11cHBlcmNhc2VcIj48c3BhbiBjbGFzcz1cImEtc2l6ZS1tZWRpdW0tcGx1cyBhLWNvbG9yLWJhc2VcIj5SZWxhdGVkIHNlYXJjaGVzPC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj48L2Rpdj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNnLXJvd1wiPlxuICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJ0ZXh0LXJlZm9ybXVsYXRpb24td2lkZ2V0XCIgZGF0YS1jb21wb25lbnQtcHJvcHM9XCJ7JiMzNDtuYW1lJiMzNDs6JiMzNDtsb29tLWRlc2t0b3AtYm90dG9tLXNsb3RfcnNwcy1yZWxhdGVkLXNlYXJjaGVzJiMzNDt9XCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPlxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZy1jb2wtMy1vZi0xMiBzZy1jb2wtNC1vZi0xNiBzZy1jb2wgc2ctY29sLTUtb2YtMjBcIj48ZGl2IGNsYXNzPVwic2ctY29sLWlubmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtYm94LWdyb3VwIGEtc3BhY2luZy1sYXJnZSB0ZXh0cmVmLWJveC1ncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1ib3ggYS1maXJzdCB0ZXh0cmVmLWJvcmRlciB0ZXh0cmVmLWJveC1maXJzdFwiPjxkaXYgY2xhc3M9XCJhLWJveC1pbm5lciBhLXBhZGRpbmctbWluaVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsXCIgaHJlZj1cIi9zLz9rPWlwaG9uZSsxMSZhbXA7cmVmPXN1Z3NyXzBfMTYmYW1wO3BkX3JkX3c9MVl5MUImYW1wO3BmX3JkX3A9NGZhMGU5N2EtMTNhNC00OTFiLWExMjctMTMzYTU1NGI0ZGEzJmFtcDtwZl9yZF9yPTFRNzBNNzhDQ1M4QVM5OVJNQ0E4JmFtcDtwZF9yZF9yPTg4NTY4MDViLTk3MzItNDE4MS1iYWY3LTYxMzU2MWRkNmVkYSZhbXA7cGRfcmRfd2c9YkxoNmQmYW1wO3FpZD0xNjQxNzU5NDQ5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtcm93IGEtZ3JpZC12ZXJ0aWNhbC1hbGlnbiBhLWdyaWQtY2VudGVyIGEtd3Mtcm93XCIgc3R5bGU9XCJoZWlnaHQ6NTJweDtcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjIgYS10ZXh0LWNlbnRlciBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXNlYXJjaCBhb2stYWxpZ24tY2VudGVyIHRleHRyZWYtaWNvbi1vcGFjaXR5XCIgcm9sZT1cInByZXNlbnRhdGlvblwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4xMCBhLXNwYWNpbmctbm9uZSBhLXNwYW4tbGFzdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcGhvbmUgMTFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWJveCBhLWxhc3QgdGV4dHJlZi1ib3JkZXIgdGV4dHJlZi1ib3gtbGFzdFwiPjxkaXYgY2xhc3M9XCJhLWJveC1pbm5lciBhLXBhZGRpbmctbWluaVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvcy8/az1pcGhvbmUreHImYW1wO3JlZj1zdWdzcl8zXzEwJmFtcDtwZF9yZF93PTFZeTFCJmFtcDtwZl9yZF9wPTRmYTBlOTdhLTEzYTQtNDkxYi1hMTI3LTEzM2E1NTRiNGRhMyZhbXA7cGZfcmRfcj0xUTcwTTc4Q0NTOEFTOTlSTUNBOCZhbXA7cGRfcmRfcj04ODU2ODA1Yi05NzMyLTQxODEtYmFmNy02MTM1NjFkZDZlZGEmYW1wO3BkX3JkX3dnPWJMaDZkJmFtcDtxaWQ9MTY0MTc1OTQ0OVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1yb3cgYS1ncmlkLXZlcnRpY2FsLWFsaWduIGEtZ3JpZC1jZW50ZXIgYS13cy1yb3dcIiBzdHlsZT1cImhlaWdodDo1MnB4O1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjIgYS10ZXh0LWNlbnRlciBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zZWFyY2ggYW9rLWFsaWduLWNlbnRlciB0ZXh0cmVmLWljb24tb3BhY2l0eVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4xMCBhLXNwYWNpbmctbm9uZSBhLXNwYW4tbGFzdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlwaG9uZSB4clxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2ctY29sLTMtb2YtMTIgc2ctY29sLTQtb2YtMTYgc2ctY29sIHNnLWNvbC01LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWJveC1ncm91cCBhLXNwYWNpbmctbGFyZ2UgdGV4dHJlZi1ib3gtZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtYm94IGEtZmlyc3QgdGV4dHJlZi1ib3JkZXIgdGV4dHJlZi1ib3gtZmlyc3RcIj48ZGl2IGNsYXNzPVwiYS1ib3gtaW5uZXIgYS1wYWRkaW5nLW1pbmlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvcy8/az1pcGhvbmUrdW5sb2NrZWQmYW1wO3JlZj1zdWdzcl8xXzE1JmFtcDtwZF9yZF93PTFZeTFCJmFtcDtwZl9yZF9wPTRmYTBlOTdhLTEzYTQtNDkxYi1hMTI3LTEzM2E1NTRiNGRhMyZhbXA7cGZfcmRfcj0xUTcwTTc4Q0NTOEFTOTlSTUNBOCZhbXA7cGRfcmRfcj04ODU2ODA1Yi05NzMyLTQxODEtYmFmNy02MTM1NjFkZDZlZGEmYW1wO3BkX3JkX3dnPWJMaDZkJmFtcDtxaWQ9MTY0MTc1OTQ0OVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXJvdyBhLWdyaWQtdmVydGljYWwtYWxpZ24gYS1ncmlkLWNlbnRlciBhLXdzLXJvd1wiIHN0eWxlPVwiaGVpZ2h0OjUycHg7XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4yIGEtdGV4dC1jZW50ZXIgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zZWFyY2ggYW9rLWFsaWduLWNlbnRlciB0ZXh0cmVmLWljb24tb3BhY2l0eVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTAgYS1zcGFjaW5nLW5vbmUgYS1zcGFuLWxhc3RcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXBob25lIHVubG9ja2VkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1ib3ggYS1sYXN0IHRleHRyZWYtYm9yZGVyIHRleHRyZWYtYm94LWxhc3RcIj48ZGl2IGNsYXNzPVwiYS1ib3gtaW5uZXIgYS1wYWRkaW5nLW1pbmlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL3MvP2s9cGhvbmUmYW1wO3JlZj1zdWdzcl80XzYmYW1wO3BkX3JkX3c9MVl5MUImYW1wO3BmX3JkX3A9NGZhMGU5N2EtMTNhNC00OTFiLWExMjctMTMzYTU1NGI0ZGEzJmFtcDtwZl9yZF9yPTFRNzBNNzhDQ1M4QVM5OVJNQ0E4JmFtcDtwZF9yZF9yPTg4NTY4MDViLTk3MzItNDE4MS1iYWY3LTYxMzU2MWRkNmVkYSZhbXA7cGRfcmRfd2c9YkxoNmQmYW1wO3FpZD0xNjQxNzU5NDQ5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXJvdyBhLWdyaWQtdmVydGljYWwtYWxpZ24gYS1ncmlkLWNlbnRlciBhLXdzLXJvd1wiIHN0eWxlPVwiaGVpZ2h0OjUycHg7XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMiBhLXRleHQtY2VudGVyIGEtc3BhY2luZy1ub25lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXNlYXJjaCBhb2stYWxpZ24tY2VudGVyIHRleHRyZWYtaWNvbi1vcGFjaXR5XCIgcm9sZT1cInByZXNlbnRhdGlvblwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjEwIGEtc3BhY2luZy1ub25lIGEtc3Bhbi1sYXN0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1saW5lLWNsYW1wLTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInNnLWNvbC0zLW9mLTEyIHNnLWNvbC00LW9mLTE2IHNnLWNvbCBzZy1jb2wtNS1vZi0yMFwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1ib3gtZ3JvdXAgYS1zcGFjaW5nLWxhcmdlIHRleHRyZWYtYm94LWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWJveCBhLWZpcnN0IHRleHRyZWYtYm9yZGVyIHRleHRyZWYtYm94LWZpcnN0XCI+PGRpdiBjbGFzcz1cImEtYm94LWlubmVyIGEtcGFkZGluZy1taW5pXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz1cImEtbGluay1ub3JtYWxcIiBocmVmPVwiL3MvP2s9aXBob25lK3gmYW1wO3JlZj1zdWdzcl8yXzEyJmFtcDtwZF9yZF93PTFZeTFCJmFtcDtwZl9yZF9wPTRmYTBlOTdhLTEzYTQtNDkxYi1hMTI3LTEzM2E1NTRiNGRhMyZhbXA7cGZfcmRfcj0xUTcwTTc4Q0NTOEFTOTlSTUNBOCZhbXA7cGRfcmRfcj04ODU2ODA1Yi05NzMyLTQxODEtYmFmNy02MTM1NjFkZDZlZGEmYW1wO3BkX3JkX3dnPWJMaDZkJmFtcDtxaWQ9MTY0MTc1OTQ0OVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXJvdyBhLWdyaWQtdmVydGljYWwtYWxpZ24gYS1ncmlkLWNlbnRlciBhLXdzLXJvd1wiIHN0eWxlPVwiaGVpZ2h0OjUycHg7XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4yIGEtdGV4dC1jZW50ZXIgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zZWFyY2ggYW9rLWFsaWduLWNlbnRlciB0ZXh0cmVmLWljb24tb3BhY2l0eVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1jb2x1bW4gYS1zcGFuMTAgYS1zcGFjaW5nLW5vbmUgYS1zcGFuLWxhc3RcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXBob25lIHhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWJveCBhLWxhc3QgdGV4dHJlZi1ib3JkZXIgdGV4dHJlZi1ib3gtbGFzdFwiPjxkaXYgY2xhc3M9XCJhLWJveC1pbm5lciBhLXBhZGRpbmctbWluaVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwiYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvcy8/az1pcGFkJmFtcDtyZWY9c3Vnc3JfNV81JmFtcDtwZF9yZF93PTFZeTFCJmFtcDtwZl9yZF9wPTRmYTBlOTdhLTEzYTQtNDkxYi1hMTI3LTEzM2E1NTRiNGRhMyZhbXA7cGZfcmRfcj0xUTcwTTc4Q0NTOEFTOTlSTUNBOCZhbXA7cGRfcmRfcj04ODU2ODA1Yi05NzMyLTQxODEtYmFmNy02MTM1NjFkZDZlZGEmYW1wO3BkX3JkX3dnPWJMaDZkJmFtcDtxaWQ9MTY0MTc1OTQ0OVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1yb3cgYS1ncmlkLXZlcnRpY2FsLWFsaWduIGEtZ3JpZC1jZW50ZXIgYS13cy1yb3dcIiBzdHlsZT1cImhlaWdodDo1MnB4O1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtY29sdW1uIGEtc3BhbjIgYS10ZXh0LWNlbnRlciBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zZWFyY2ggYW9rLWFsaWduLWNlbnRlciB0ZXh0cmVmLWljb24tb3BhY2l0eVwiIHJvbGU9XCJwcmVzZW50YXRpb25cIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLWNvbHVtbiBhLXNwYW4xMCBhLXNwYWNpbmctbm9uZSBhLXNwYW4tbGFzdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtbGluZS1jbGFtcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlwYWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj48L2Rpdj5cbiAgICA8L2Rpdj5cblxuXG48L3NwYW4+XG5cbjwvZGl2PjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG4gICAgXG5cblxuXG48ZGl2IGRhdGEtYXNpbj1cIlwiIGRhdGEtaW5kZXg9XCIyN1wiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIHMtcmVzdWx0LWl0ZW0gcy1mbGV4LWZ1bGwtd2lkdGggcy13aWRnZXQgcy13aWRnZXQtc3BhY2luZy1sYXJnZVwiPlxuICBcblxuXG48c3BhbiBjZWxfd2lkZ2V0X2lkPVwiTUFJTi1QQUdJTkFUSU9OLTI3XCIgY2xhc3M9XCJjZWx3aWRnZXQgc2xvdD1NQUlOIHRlbXBsYXRlPVBBR0lOQVRJT04gd2lkZ2V0SWQ9cGFnaW5hdGlvbi1idXR0b25cIj5cbiAgICBcblxuXG5cblxuXG48ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lIGEtcGFkZGluZy1iYXNlXCI+XG4gICAgPGRpdiBjbGFzcz1cImEtdGV4dC1jZW50ZXJcIiByb2xlPVwibmF2aWdhdGlvblwiPjx1bCBjbGFzcz1cImEtcGFnaW5hdGlvblwiPjxsaT48YSBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3BhZ2U9MyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfcGdfNFwiPuKGkDxzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPjwvc3Bhbj5QcmV2aW91czwvYT48L2xpPlxuICAgICAgICBcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cImEtbm9ybWFsXCI+PGEgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9wZ18xXCI+MTwvYT48L2xpPlxuICAgICAgICBcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cImEtbm9ybWFsXCI+PGEgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtwYWdlPTImYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX3BnXzJcIj4yPC9hPjwvbGk+XG4gICAgICAgIFxuICAgICAgICAgICAgPGxpIGNsYXNzPVwiYS1ub3JtYWxcIj48YSBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3BhZ2U9MyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfcGdfM1wiPjM8L2E+PC9saT5cbiAgICAgICAgXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJhLXNlbGVjdGVkXCI+PGEgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtwYWdlPTQmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX3BnXzRcIiBhcmlhLWN1cnJlbnQ9XCJwYWdlXCI+NDwvYT48L2xpPlxuICAgICAgICBcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cImEtbm9ybWFsXCI+PGEgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtwYWdlPTUmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX3BnXzVcIj41PC9hPjwvbGk+XG4gICAgICAgIFxuICAgICAgICAgICAgPGxpIGNsYXNzPVwiYS1kaXNhYmxlZFwiIGFyaWEtZGlzYWJsZWQ9XCJ0cnVlXCI+Li4uPC9saT5cbiAgICAgICAgXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJhLWRpc2FibGVkXCIgYXJpYS1kaXNhYmxlZD1cInRydWVcIj4yMDwvbGk+XG4gICAgICAgIFxuICAgIDxsaSBjbGFzcz1cImEtbGFzdFwiPjxhIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cGFnZT01JmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9wZ180XCI+TmV4dDxzcGFuIGNsYXNzPVwiYS1sZXR0ZXItc3BhY2VcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJhLWxldHRlci1zcGFjZVwiPjwvc3Bhbj7ihpI8L2E+PC9saT48L3VsPjwvZGl2PlxuPC9kaXY+XG5cbjwvc3Bhbj5cblxuPC9kaXY+XG5cblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG5cbiAgICBcblxuXG5cbjxkaXYgZGF0YS1hc2luPVwiXCIgZGF0YS1pbmRleD1cIjI4XCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmUgcy1yZXN1bHQtaXRlbSBzLWZsZXgtZnVsbC13aWR0aCBzLXdpZGdldCBzLXdpZGdldC1zcGFjaW5nLWxhcmdlXCI+XG4gIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJNQUlOLUZFRURCQUNLLTI4XCIgY2xhc3M9XCJjZWx3aWRnZXQgc2xvdD1NQUlOIHRlbXBsYXRlPUZFRURCQUNLIHdpZGdldElkPWZlZWRiYWNrXCI+XG4gICAgXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcblxuXG5cblxuXG5cbjxkaXYgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW1lZGl1bSBhLXNwYWNpbmctdG9wLW1lZGl1bVwiPlxuICAgIDxkaXYgY2xhc3M9XCJzZy1yb3dcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInNnLWNvbC0xMC1vZi0xMiBzZy1jb2wtMTAtb2YtMjAgc2ctY29sIHNnLWNvbC0xMC1vZi0xNlwiPjxkaXYgY2xhc3M9XCJzZy1jb2wtaW5uZXJcIj5cbiAgICAgICAgICAgIFxuXG5cblxuXG48aDIgY2xhc3M9XCJhLXNwYWNpbmctc21hbGwgYS1zcGFjaW5nLXRvcC1taW5pXCI+XG4gICAgXG4gICAgXG4gICAgICAgIDxzcGFuIGNsYXNzPVwiYS10ZXh0LW5vcm1hbFwiIGRpcj1cImF1dG9cIj5OZWVkIGhlbHA/PC9zcGFuPlxuICAgIFxuPC9oMj5cbjxkaXYgY2xhc3M9XCJhLXJvdyBhLXNwYWNpbmctYmFzZSBhLXNpemUtYmFzZVwiPlxuXG5cblxuXG48YSBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtbGluay1ub3JtYWxcIiBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sP25vZGVJZD00Njg1NTZcIj5cbiAgICBcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgVmlzaXQgdGhlIGhlbHAgc2VjdGlvblxuICAgICAgICBcbiAgICBcbjwvYT5cbjxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPiBvciA8L3NwYW4+XG5cblxuXG5cbjxhIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1saW5rLW5vcm1hbFwiIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9jb250YWN0LXVzXCI+XG4gICAgXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIGNvbnRhY3QgdXNcbiAgICAgICAgXG4gICAgXG48L2E+XG48L2Rpdj5cbiAgICAgICAgPC9kaXY+PC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuXG48L3NwYW4+XG5cbjwvZGl2PlxuXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuXG5cblxuICAgIFxuICAgICAgICBcbiAgICAgICAgXG5cbiAgICAgICAgXG4gICAgXG4gICAgXG5cblxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInMtcmVzdWx0LWxpc3QtcGxhY2Vob2xkZXIgYW9rLWhpZGRlbiBzZy1yb3dcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXNwaW5uZXItd3JhcHBlclwiPjxzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj48L3NwYW4+PC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgIDxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWZrbXJcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50IHMtbGF0ZW5jeS1jZi1zZWN0aW9uXCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICA8c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1jb3JyZWN0ZWQtc2VhcmNoLXJlc3VsdHNcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50IHMtbGF0ZW5jeS1jZi1zZWN0aW9uXCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgICA8c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1ib3R0b20tc2xvdFwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJzLXNjcmVlbnJlYWRlclwiPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFvay1vZmZzY3JlZW5cIiB0aXRsZT1cInRhYiB0byBnbyBiYWNrIHRvIGZpbHRlcmluZyBtZW51XCIgaHJlZj1cIiNzLXNraXBMaW5rVGFyZ2V0Rm9yRmlsdGVyT3B0aW9uc1wiPlxuICAgICAgICAgICAgICAgICAgR28gYmFjayB0byBmaWx0ZXJpbmcgbWVudVxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1wYWdpbmF0aW9uXCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgPHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtYnJhbmQtZm9vdGVyLXNsb3RcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50IHMtYnJhbmQtZm9vdGVyLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgPC9zcGFuPlxuXG4gICAgICAgICAgPHNwYW4gZGF0YS1jb21wb25lbnQtdHlwZT1cInMtZmVlZGJhY2stc2xvdFwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFxuICAgICAgICAgIDwvc3Bhbj5cblxuICAgICAgICAgIDxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWZvb3Rlci1zbG90XCIgY2xhc3M9XCJydXNoLWNvbXBvbmVudFwiPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwic2ctY29sLTQtb2YtMTIgcy1tYXRjaGluZy1kaXIgc2ctY29sLTQtb2YtMTYgc2ctY29sIHNnLWNvbC00LW9mLTIwXCI+PGRpdiBjbGFzcz1cInNnLWNvbC1pbm5lclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJzLXNjcmVlbnJlYWRlclwiPlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPGEgY2xhc3M9XCJhLWxpbmstbm9ybWFsIGFvay1vZmZzY3JlZW5cIiB0aXRsZT1cInRhYiB0byBza2lwIHRvIG1haW4gc2VhcmNoIHJlc3VsdHNcIiBocmVmPVwiI3Mtc2tpcExpbmtUYXJnZXRGb3JNYWluU2VhcmNoUmVzdWx0c1wiPlxuICAgICAgICAgICAgICAgICAgU2tpcCB0byBtYWluIHNlYXJjaCByZXN1bHRzXG4gICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGlkPVwicy1za2lwTGlua1RhcmdldEZvckZpbHRlck9wdGlvbnNcIiB0YWJpbmRleD1cIi0xXCI+PC9kaXY+XG5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1zZWN0aW9uXCI+XG4gICAgICAgICAgICAgIDxzcGFuIGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLWZpbHRlcnMtcGFuZWwtdmlld1wiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG48ZGl2IGRhdGEtdXVpZD1cImFmYWM4ODkyLWM5MGQtNGMwYy1iNjZlLTlkNTk3ZmVkOTI3OVwiPlxuICAgIFxuXG5cbjxzcGFuIGNlbF93aWRnZXRfaWQ9XCJMRUZULVJFRklORU1FTlRTLTBcIiBjbGFzcz1cImNlbHdpZGdldCBzbG90PUxFRlQgdGVtcGxhdGU9UkVGSU5FTUVOVFMgd2lkZ2V0SWQ9cmVmaW5lbWVudHNcIj5cbiAgICBcblxuXG5cblxuXG48ZGl2IGlkPVwicy1yZWZpbmVtZW50c1wiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gIFxuICA8ZGl2IGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1kb3VibGUtbGFyZ2VcIj5cbiAgICBcbiAgICBcbiAgICAgIFxuXG5cblxuXG5cblxuPGRpdiBpZD1cImNvbmRpdGlvblwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9jb25kaXRpb24tdHlwZS10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkNvbmRpdGlvbjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2NvbmRpdGlvbi10eXBlLXRpdGxlXCIgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1tZWRpdW1cIj5cbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG48bGkgaWQ9XCJwX25fY29uZGl0aW9uLXR5cGUvTmV3XCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1wX25fY29uZGl0aW9uLXR5cGUlM0FOZXcmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fY29uZGl0aW9uLXR5cGVfMVwiPlxuICAgICAgXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+TmV3PC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9jb25kaXRpb24tdHlwZS9Vc2VkXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1wX25fY29uZGl0aW9uLXR5cGUlM0FVc2VkJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2NvbmRpdGlvbi10eXBlXzJcIj5cbiAgICAgIFxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlVzZWQ8L3NwYW4+XG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2NvbmRpdGlvbi10eXBlL0NlcnRpZmllZCBSZWZ1cmJpc2hlZFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9cF9uX2NvbmRpdGlvbi10eXBlJTNBQ2VydGlmaWVkK1JlZnVyYmlzaGVkJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2NvbmRpdGlvbi10eXBlXzNcIj5cbiAgICAgIFxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlJlbmV3ZWQ8L3NwYW4+XG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG48L2Rpdj5cblxuICAgIFxuICAgICAgXG5cblxuXG5cblxuXG48ZGl2IGlkPVwiY2xpbWF0ZVBsZWRnZUZyaWVuZGx5UmVmaW5lbWVudHNcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPlxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fY3BmX2VsaWdpYmxlLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2xpbWF0ZSBQbGVkZ2UgRnJpZW5kbHk8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9jcGZfZWxpZ2libGUtdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2NwZl9lbGlnaWJsZS8yMTUxMjQ5NzAxMVwiIGFyaWEtbGFiZWw9XCJDbGltYXRlIFBsZWRnZSBGcmllbmRseVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPXBfbl9jcGZfZWxpZ2libGUlM0EyMTUxMjQ5NzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIxNTEyNDk2MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9jcGZfZWxpZ2libGVfMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkNsaW1hdGUgUGxlZGdlIEZyaWVuZGx5PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuPC9kaXY+XG5cbiAgICBcbiAgICAgIFxuXG5cblxuXG5cblxuPGRpdiBpZD1cImRlcGFydG1lbnRzXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwibi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkRlcGFydG1lbnQ8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cIm4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG48bGkgaWQ9XCJuLzIzMzU3NTIwMTFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJvZmZcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9Mjk0MTEyMDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9uXzFcIj5cbiAgICAgIFxuICAgIFxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkNlbGwgUGhvbmVzICZhbXA7IEFjY2Vzc29yaWVzPC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG48bGkgaWQ9XCJuLzcwNzI1NjEwMTFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNybyBzLW5hdmlnYXRpb24taW5kZW50LTFcIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwib2ZmXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ24lM0E3MDcyNTYxMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9Mjk0MTEyMDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9uXzJcIj5cbiAgICAgIFxuICAgIFxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkNlbGwgUGhvbmVzPC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG5cblxuXG5cblxuXG5cblxuICAgIFxuXG4gICAgXG4gICAgXG5cblxuXG5cblxuXG5cblxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcbiAgICAgICAgPGxpIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImEtcm93IGEtZXhwYW5kZXItY29udGFpbmVyIGEtZXhwYW5kZXItZXh0ZW5kLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWNvbnRlbnQgYS1leHBhbmRlci1leHRlbmQtY29udGVudFwiIHN0eWxlPVwiZGlzcGxheTpub25lXCI+XG4gICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW5vbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuXG48bGkgaWQ9XCJuLzE3MjI4MlwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIm9mZlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7aT1lbGVjdHJvbmljcyZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX2lfM1wiPlxuICAgICAgXG4gICAgXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+RWxlY3Ryb25pY3M8L3NwYW4+XG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cblxuXG5cblxuXG5cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8YSBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLWV4cGFuZGVyLXRvZ2dsZVwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWludGVyYWN0aW9uLWV2ZW50cz1cImNsaWNrXCIgYXJpYS1sYWJlbD1cIlNlZSBBbGwgMiBEZXBhcnRtZW50c1wiIGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIHJvbGU9XCJidXR0b25cIiBocmVmPVwiamF2YXNjcmlwdDp2b2lkKDApXCIgZGF0YS1hY3Rpb249XCJhLWV4cGFuZGVyLXRvZ2dsZVwiIGNsYXNzPVwiYS1leHBhbmRlci1oZWFkZXIgYS1kZWNsYXJhdGl2ZSBhLWV4cGFuZGVyLWV4dGVuZC1oZWFkZXIgcy1leHBhbmRlci10ZXh0XCIgZGF0YS1hLWV4cGFuZGVyLXRvZ2dsZT1cInsmcXVvdDthbGxvd0xpbmtEZWZhdWx0JnF1b3Q7OnRydWUsICZxdW90O2V4cGFuZF9wcm9tcHQmcXVvdDs6JnF1b3Q7U2VlIEFsbCAyIERlcGFydG1lbnRzJnF1b3Q7LCAmcXVvdDtjb2xsYXBzZV9wcm9tcHQmcXVvdDs6JnF1b3Q7U2VlIEZld2VyIERlcGFydG1lbnRzJnF1b3Q7fVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlNlZSBBbGwgMiBEZXBhcnRtZW50czwvc3Bhbj48L2E+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9zcGFuPjwvbGk+XG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbjwvZGl2PlxuXG4gICAgXG4gICAgICBcblxuXG5cblxuXG5cbjxkaXYgaWQ9XCJyZXZpZXdzUmVmaW5lbWVudHNcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPlxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwXzcyLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q3VzdG9tZXIgUmV2aWV3czwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF83Mi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cbjxsaSBpZD1cInBfNzIvMjQ5MTE0OTAxMVwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF83MiUzQTI0OTExNDkwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNDkxMTQ3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfNzJfMVwiPlxuICAgICAgXG4gICAgPHNlY3Rpb24gYXJpYS1sYWJlbD1cIjQgU3RhcnMgJmFtcDsgVXBcIj5cbiAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLW1lZGl1bSBhLXN0YXItbWVkaXVtLTRcIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj40IFN0YXJzICYgVXA8L3NwYW4+PC9pPlxuICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtc21hbGwgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPiZhbXA7IFVwPC9zcGFuPlxuICAgIDwvc2VjdGlvbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cbjxsaSBpZD1cInBfNzIvMjQ5MTE1MDAxMVwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF83MiUzQTI0OTExNTAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNDkxMTQ3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfNzJfMlwiPlxuICAgICAgXG4gICAgPHNlY3Rpb24gYXJpYS1sYWJlbD1cIjMgU3RhcnMgJmFtcDsgVXBcIj5cbiAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLW1lZGl1bSBhLXN0YXItbWVkaXVtLTNcIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj4zIFN0YXJzICYgVXA8L3NwYW4+PC9pPlxuICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtc21hbGwgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPiZhbXA7IFVwPC9zcGFuPlxuICAgIDwvc2VjdGlvbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cbjxsaSBpZD1cInBfNzIvMjQ5MTE1MTAxMVwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF83MiUzQTI0OTExNTEwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNDkxMTQ3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfNzJfM1wiPlxuICAgICAgXG4gICAgPHNlY3Rpb24gYXJpYS1sYWJlbD1cIjIgU3RhcnMgJmFtcDsgVXBcIj5cbiAgICAgIDxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1zdGFyLW1lZGl1bSBhLXN0YXItbWVkaXVtLTJcIj48c3BhbiBjbGFzcz1cImEtaWNvbi1hbHRcIj4yIFN0YXJzICYgVXA8L3NwYW4+PC9pPlxuICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtc21hbGwgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPiZhbXA7IFVwPC9zcGFuPlxuICAgIDwvc2VjdGlvbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cbjxsaSBpZD1cInBfNzIvMjQ5MTE1MjAxMVwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF83MiUzQTI0OTExNTIwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNDkxMTQ3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfNzJfNFwiPlxuICAgICAgXG4gICAgPHNlY3Rpb24gYXJpYS1sYWJlbD1cIjEgU3RhciAmYW1wOyBVcFwiPlxuICAgICAgPGkgY2xhc3M9XCJhLWljb24gYS1pY29uLXN0YXItbWVkaXVtIGEtc3Rhci1tZWRpdW0tMVwiPjxzcGFuIGNsYXNzPVwiYS1pY29uLWFsdFwiPjEgU3RhciAmIFVwPC9zcGFuPjwvaT5cbiAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLXNtYWxsIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4mYW1wOyBVcDwvc3Bhbj5cbiAgICA8L3NlY3Rpb24+XG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuPC9kaXY+XG5cbiAgICBcbiAgICAgIFxuXG5cblxuXG5cblxuPGRpdiBpZD1cImJyYW5kc1JlZmluZW1lbnRzXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLW5vbmVcIj5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF84OS10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkJyYW5kPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICBcbiAgICBcblxuXG5cbjx1bCBhcmlhLWxhYmVsbGVkYnk9XCJwXzg5LXRpdGxlXCIgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1tZWRpdW1cIj5cbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvQXBwbGVcIiBhcmlhLWxhYmVsPVwiQXBwbGVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FBcHBsZSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV8xXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+QXBwbGU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L1NhbXN1bmcgRWxlY3Ryb25pY3NcIiBhcmlhLWxhYmVsPVwiU2Ftc3VuZyBFbGVjdHJvbmljc1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF84OSUzQVNhbXN1bmcrRWxlY3Ryb25pY3MmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlNhbXN1bmcgRWxlY3Ryb25pY3M8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L01vdG9yb2xhXCIgYXJpYS1sYWJlbD1cIk1vdG9yb2xhXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBTW90b3JvbGEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk1vdG9yb2xhPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF84OS9UQ0xcIiBhcmlhLWxhYmVsPVwiVENMXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBVENMJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjUyODgzMjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wXzg5XzRcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5UQ0w8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L1NvbnlcIiBhcmlhLWxhYmVsPVwiU29ueVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF84OSUzQVNvbnkmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfNVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlNvbnk8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L3RvdGFsIHdpcmVsZXNzXCIgYXJpYS1sYWJlbD1cInRvdGFsIHdpcmVsZXNzXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBdG90YWwrd2lyZWxlc3MmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfNlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPnRvdGFsIHdpcmVsZXNzPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF84OS9Hb29nbGVcIiBhcmlhLWxhYmVsPVwiR29vZ2xlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBR29vZ2xlJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjUyODgzMjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wXzg5XzdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5Hb29nbGU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICA8bGkgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1yb3cgYS1leHBhbmRlci1jb250YWluZXIgYS1leHBhbmRlci1leHRlbmQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudCBhLWV4cGFuZGVyLWV4dGVuZC1jb250ZW50XCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L1RyYWNGb25lXCIgYXJpYS1sYWJlbD1cIlRyYWNGb25lXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBVHJhY0ZvbmUmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfOFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlRyYWNGb25lPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvVWxlZm9uZVwiIGFyaWEtbGFiZWw9XCJVbGVmb25lXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBVWxlZm9uZSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV85XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VWxlZm9uZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L1hpYW9taVwiIGFyaWEtbGFiZWw9XCJYaWFvbWlcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FYaWFvbWkmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMTBcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5YaWFvbWk8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF84OS9ET09HRUVcIiBhcmlhLWxhYmVsPVwiRE9PR0VFXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBRE9PR0VFJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjUyODgzMjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wXzg5XzExXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+RE9PR0VFPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvQkxVXCIgYXJpYS1sYWJlbD1cIkJMVVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF84OSUzQUJMVSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV8xMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkJMVTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L09VS0lURUxcIiBhcmlhLWxhYmVsPVwiT1VLSVRFTFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF84OSUzQU9VS0lURUwmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMTNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5PVUtJVEVMPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvTm9raWFcIiBhcmlhLWxhYmVsPVwiTm9raWFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FOb2tpYSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV8xNFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk5va2lhPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvQXp1bWlcIiBhcmlhLWxhYmVsPVwiQXp1bWlcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FBenVtaSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV8xNVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkF6dW1pPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvSFVBV0VJXCIgYXJpYS1sYWJlbD1cIkhVQVdFSVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF84OSUzQUhVQVdFSSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV8xNlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkhVQVdFSTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L0xHXCIgYXJpYS1sYWJlbD1cIkxHXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBTEcmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMTdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5MRzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L0JsYWNrdmlld1wiIGFyaWEtbGFiZWw9XCJCbGFja3ZpZXdcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FCbGFja3ZpZXcmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMThcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5CbGFja3ZpZXc8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF84OS9VTUlESUdJXCIgYXJpYS1sYWJlbD1cIlVNSURJR0lcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FVTUlESUdJJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjUyODgzMjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wXzg5XzE5XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VU1JRElHSTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L1pURVwiIGFyaWEtbGFiZWw9XCJaVEVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBMjMzNTc1MjAxMSUyQ3BfODklM0FaVEUmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMjBcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5aVEU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF84OS9IVENcIiBhcmlhLWxhYmVsPVwiSFRDXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBSFRDJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjUyODgzMjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wXzg5XzIxXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+SFRDPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfODkvaW5EaWdpXCIgYXJpYS1sYWJlbD1cImluRGlnaVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0EyMzM1NzUyMDExJTJDcF84OSUzQWluRGlnaSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI1Mjg4MzIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF84OV8yMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPmluRGlnaTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwXzg5L0hpbGl0YW5kXCIgYXJpYS1sYWJlbD1cIkhpbGl0YW5kXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTIzMzU3NTIwMTElMkNwXzg5JTNBSGlsaXRhbmQmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yNTI4ODMyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfODlfMjNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5IaWxpdGFuZDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGEgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1leHBhbmRlci10b2dnbGVcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1pbnRlcmFjdGlvbi1ldmVudHM9XCJjbGlja1wiIGFyaWEtbGFiZWw9XCJTZWUgbW9yZSwgQnJhbmRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiByb2xlPVwiYnV0dG9uXCIgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGRhdGEtYWN0aW9uPVwiYS1leHBhbmRlci10b2dnbGVcIiBjbGFzcz1cImEtZXhwYW5kZXItaGVhZGVyIGEtZGVjbGFyYXRpdmUgYS1leHBhbmRlci1leHRlbmQtaGVhZGVyIHMtZXhwYW5kZXItdGV4dFwiIGRhdGEtYS1leHBhbmRlci10b2dnbGU9XCJ7JnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90Ozp0cnVlLCAmcXVvdDtleHBhbmRfcHJvbXB0JnF1b3Q7OiZxdW90O1NlZSBtb3JlJnF1b3Q7LCAmcXVvdDtjb2xsYXBzZV9wcm9tcHQmcXVvdDs6JnF1b3Q7U2VlIExlc3MmcXVvdDt9XCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWV4dGVuZGVyLWV4cGFuZFwiPjwvaT48c3BhbiBjbGFzcz1cImEtZXhwYW5kZXItcHJvbXB0XCI+U2VlIG1vcmU8L3NwYW4+PC9hPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc3Bhbj48L2xpPlxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG48L2Rpdj5cblxuICAgIFxuICAgICAgXG5cblxuXG5cblxuXG48ZGl2IGlkPVwicHJpY2VSZWZpbmVtZW50c1wiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1ub25lXCI+XG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfMzYtdGl0bGVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtYm9sZC13ZWlnaHQtdGV4dFwiIGRpcj1cImF1dG9cIj5DZWxsIFBob25lIFByaWNlPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICBcbiAgICBcblxuXG5cbjx1bCBhcmlhLWxhYmVsbGVkYnk9XCJwXzM2LXRpdGxlXCIgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1tZWRpdW1cIj5cbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG48bGkgaWQ9XCJwXzM2LzE0Njc0ODcyMDExXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3BfMzYlM0ExNDY3NDg3MjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODcxMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfMzZfMVwiPlxuICAgICAgXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VXAgdG8gJDUwPC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cbjxsaSBpZD1cInBfMzYvMTQ2NzQ4NzMwMTFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF8zNiUzQTE0Njc0ODczMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF8zNl8yXCI+XG4gICAgICBcbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4kNTAgdG8gJDEwMDwvc3Bhbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG48bGkgaWQ9XCJwXzM2LzE0Njc0ODc0MDExXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3BfMzYlM0ExNDY3NDg3NDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODcxMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfMzZfM1wiPlxuICAgICAgXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+JDEwMCB0byAkMTUwPC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cbjxsaSBpZD1cInBfMzYvMTQ2NzQ4NzUwMTFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF8zNiUzQTE0Njc0ODc1MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF8zNl80XCI+XG4gICAgICBcbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4kMTUwIHRvICQyNTA8L3NwYW4+XG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuPGxpIGlkPVwicF8zNi8xNDY3NDg3NjAxMVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwXzM2JTNBMTQ2NzQ4NzYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wXzM2XzVcIj5cbiAgICAgIFxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPiQyNTAgdG8gJDQwMDwvc3Bhbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG48bGkgaWQ9XCJwXzM2LzE0Njc0ODc3MDExXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3BfMzYlM0ExNDY3NDg3NzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODcxMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3BfMzZfNlwiPlxuICAgICAgXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+JDQwMCB0byAkNjAwPC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cbjxsaSBpZD1cInBfMzYvMTQ2NzQ4NzgwMTFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF8zNiUzQTE0Njc0ODc4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF8zNl83XCI+XG4gICAgICBcbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4kNjAwICZhbXA7IGFib3ZlPC9zcGFuPlxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF8zNi9wcmljZS1yYW5nZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICAgXG4gICBcbiAgICAgPGZvcm0gbWV0aG9kPVwiZ2V0XCIgYWN0aW9uPVwiL3NcIj5cbiAgICAgICAgIFxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwia1wiIHZhbHVlPVwiaXBob25lXCIvPlxuICAgICAgICAgXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJwYWdlXCIgdmFsdWU9XCI0XCIvPlxuICAgICAgICAgXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJxaWRcIiB2YWx1ZT1cIjE2NDE3NTk0NDlcIi8+XG4gICAgICAgICBcbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cInJuaWRcIiB2YWx1ZT1cIjE0Njc0ODcxMDExXCIvPlxuICAgICAgICAgXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJzcHJlZml4XCIgdmFsdWU9XCJpcGhvbmUsYXBzLDI2MlwiLz5cbiAgICAgICAgIFxuICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwicmVmXCIgdmFsdWU9XCJzcl9ucl9wXzM2XzdcIi8+XG4gICAgICAgICBcbiAgICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICA8c3BhbiBjbGFzcz1cImEtY29sb3ItYmFzZSBzLXJlZi1zbWFsbC1wYWRkaW5nLWxlZnQgcy1yZWYtcHJpY2UtY3VycmVuY3lcIj4kPC9zcGFuPlxuICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbWF4bGVuZ3RoPVwiOVwiIGlkPVwibG93LXByaWNlXCIgcGxhY2Vob2xkZXI9XCJNaW5cIiBuYW1lPVwibG93LXByaWNlXCIgY2xhc3M9XCJhLWlucHV0LXRleHQgYS1zcGFjaW5nLXRvcC1taW5pIHMtcmVmLXByaWNlLXJhbmdlIHMtcmVmLXByaWNlLXBhZGRpbmdcIi8+XG4gICAgICAgICA8c3BhbiBjbGFzcz1cImEtY29sb3ItYmFzZSBzLXJlZi1zbWFsbC1wYWRkaW5nLWxlZnQgcy1yZWYtcHJpY2UtY3VycmVuY3lcIj4kPC9zcGFuPlxuICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbWF4bGVuZ3RoPVwiOVwiIGlkPVwiaGlnaC1wcmljZVwiIHBsYWNlaG9sZGVyPVwiTWF4XCIgbmFtZT1cImhpZ2gtcHJpY2VcIiBjbGFzcz1cImEtaW5wdXQtdGV4dCBhLXNwYWNpbmctdG9wLW1pbmkgcy1yZWYtcHJpY2UtcmFuZ2Ugcy1yZWYtcHJpY2UtcGFkZGluZ1wiLz5cbiAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1idXR0b24gYS1zcGFjaW5nLXRvcC1taW5pIGEtYnV0dG9uLWJhc2Ugcy1zbWFsbC1tYXJnaW4tbGVmdFwiPjxzcGFuIGNsYXNzPVwiYS1idXR0b24taW5uZXJcIj48aW5wdXQgY2xhc3M9XCJhLWJ1dHRvbi1pbnB1dFwiIHR5cGU9XCJzdWJtaXRcIi8+PHNwYW4gY2xhc3M9XCJhLWJ1dHRvbi10ZXh0XCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgICBHb1xuICAgICAgICAgPC9zcGFuPjwvc3Bhbj48L3NwYW4+XG4gICAgICA8L2Zvcm0+XG4gICBcbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuPC9kaXY+XG5cbiAgICBcbiAgICAgIFxuXG5cblxuXG5cblxuPGRpdiBpZD1cImZpbHRlcnNcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctbm9uZVwiPlxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtYm9sZC13ZWlnaHQtdGV4dFwiIGRpcj1cImF1dG9cIj5DZWxsIFBob25lIENhcnJpZXI8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMTc4ODE4NTYwMTFcIiBhcmlhLWxhYmVsPVwiQVQmYW1wO1QgV2lyZWxlc3NcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTE3ODgxODU2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5BVCZhbXA7VCBXaXJlbGVzczwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbi8xNzg4MTg1ODAxMVwiIGFyaWEtbGFiZWw9XCJCb29zdCBNb2JpbGVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTE3ODgxODU4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5Cb29zdCBNb2JpbGU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMTc4ODE4NTkwMTFcIiBhcmlhLWxhYmVsPVwiQ3JpY2tldCBXaXJlbGVzc1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluJTNBMTc4ODE4NTkwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg1NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkNyaWNrZXQgV2lyZWxlc3M8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMTc4ODE4NjQwMTFcIiBhcmlhLWxhYmVsPVwiTmV0MTAgV2lyZWxlc3NcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTE3ODgxODY0MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzRcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5OZXQxMCBXaXJlbGVzczwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbi8xNzg4MTg2NzAxMVwiIGFyaWEtbGFiZWw9XCJTcHJpbnRcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTE3ODgxODY3MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzVcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5TcHJpbnQ8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMTc4ODE4NjgwMTFcIiBhcmlhLWxhYmVsPVwiU3RyYWlnaHQgVGFsa1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluJTNBMTc4ODE4NjgwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg1NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW5fNlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlN0cmFpZ2h0IFRhbGs8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMTc4ODE4NjkwMTFcIiBhcmlhLWxhYmVsPVwiVC1Nb2JpbGVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTE3ODgxODY5MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5ULU1vYmlsZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbi8yMTU5NjY5ODAxMVwiIGFyaWEtbGFiZWw9XCJUb3RhbCBXaXJlbGVzc1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluJTNBMjE1OTY2OTgwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg1NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW5fOFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlRvdGFsIFdpcmVsZXNzPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluLzE3ODgxODcxMDExXCIgYXJpYS1sYWJlbD1cIlRyYWNGb25lIFdpcmVsZXNzXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4lM0ExNzg4MTg3MTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3ODgxODU0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbl85XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VHJhY0ZvbmUgV2lyZWxlc3M8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMjE1OTY2OTYwMTFcIiBhcmlhLWxhYmVsPVwiVW5sb2NrZWRcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTIxNTk2Njk2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzEwXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VW5sb2NrZWQ8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW4vMTc4ODE4NzMwMTFcIiBhcmlhLWxhYmVsPVwiVmVyaXpvbiBXaXJlbGVzc1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluJTNBMTc4ODE4NzMwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg1NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktb25lX2Jyb3dzZS1iaW5fMTFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5WZXJpem9uIFdpcmVsZXNzPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluLzE3ODgxODc0MDExXCIgYXJpYS1sYWJlbD1cIlZpcmdpbiBNb2JpbGVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1vbmVfYnJvd3NlLWJpbiUzQTE3ODgxODc0MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LW9uZV9icm93c2UtYmluXzEyXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VmlyZ2luIE1vYmlsZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtYm9sZC13ZWlnaHQtdGV4dFwiIGRpcj1cImF1dG9cIj5QaG9uZSBDb2xvcjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtaG9yaXpvbnRhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgIFxuICAgIFxuICAgIFxuICBcblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjUzNTAxMVwiIGNsYXNzPVwicy1zcHJpdGUtZ3JpZCBhb2stYWxpZ24tdG9wIGFvay1mbG9hdC1sZWZ0XCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRpdGxlPVwiQmxhY2tcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4lM0ExNzM1MjUzNTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3MzUyNTM0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyPVwieyZxdW90O29mZnNldFgmcXVvdDs6MCwmcXVvdDtvZmZzZXRZJnF1b3Q7OjAsJnF1b3Q7aG92ZXJPZmZzZXRZJnF1b3Q7Oi0xMDAsJnF1b3Q7b2JqSWQmcXVvdDs6JnF1b3Q7cF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1MzUwMTEmcXVvdDssJnF1b3Q7aG92ZXJPZmZzZXRYJnF1b3Q7OjB9XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3JzcHJpdGUgYW9rLWZsb2F0LWxlZnRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6dXJsKCYjMDM5O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9uYXYyL2ltYWdlcy9ndWkvY2xvdGhpbmdjb2xvcnNwcml0ZS5fQ0I0Mzc1NTgzMjBfLnBuZyYjMDM5Oyk7IGJhY2tncm91bmQtcG9zaXRpb246MHB4IDBweDtcIiA+PC9kaXY+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgIFxuICAgIFxuICAgIFxuICBcblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjUzNzAxMVwiIGNsYXNzPVwicy1zcHJpdGUtZ3JpZCBhb2stYWxpZ24tdG9wIGFvay1mbG9hdC1sZWZ0XCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRpdGxlPVwiV2hpdGVcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4lM0ExNzM1MjUzNzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3MzUyNTM0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyPVwieyZxdW90O29mZnNldFgmcXVvdDs6LTIwMCwmcXVvdDtvZmZzZXRZJnF1b3Q7OjAsJnF1b3Q7aG92ZXJPZmZzZXRZJnF1b3Q7Oi0xMDAsJnF1b3Q7b2JqSWQmcXVvdDs6JnF1b3Q7cF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1MzcwMTEmcXVvdDssJnF1b3Q7aG92ZXJPZmZzZXRYJnF1b3Q7Oi0yMDB9XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3JzcHJpdGUgYW9rLWZsb2F0LWxlZnRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6dXJsKCYjMDM5O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9uYXYyL2ltYWdlcy9ndWkvY2xvdGhpbmdjb2xvcnNwcml0ZS5fQ0I0Mzc1NTgzMjBfLnBuZyYjMDM5Oyk7IGJhY2tncm91bmQtcG9zaXRpb246LTIwMHB4IDBweDtcIiA+PC9kaXY+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgIFxuICAgIFxuICAgIFxuICBcblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjU0NzAxMVwiIGNsYXNzPVwicy1zcHJpdGUtZ3JpZCBhb2stYWxpZ24tdG9wIGFvay1mbG9hdC1sZWZ0XCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRpdGxlPVwiR29sZFwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbiUzQTE3MzUyNTQ3MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTczNTI1MzQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXI9XCJ7JnF1b3Q7b2Zmc2V0WCZxdW90OzotMTMwMCwmcXVvdDtvZmZzZXRZJnF1b3Q7OjAsJnF1b3Q7aG92ZXJPZmZzZXRZJnF1b3Q7Oi0xMDAsJnF1b3Q7b2JqSWQmcXVvdDs6JnF1b3Q7cF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1NDcwMTEmcXVvdDssJnF1b3Q7aG92ZXJPZmZzZXRYJnF1b3Q7Oi0xMzAwfVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yc3ByaXRlIGFvay1mbG9hdC1sZWZ0XCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCgmIzAzOTtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvbmF2Mi9pbWFnZXMvZ3VpL2Nsb3RoaW5nY29sb3JzcHJpdGUuX0NCNDM3NTU4MzIwXy5wbmcmIzAzOTspOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMzAwcHggMHB4O1wiID48L2Rpdj5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgXG4gICAgXG4gICAgXG4gICAgXG4gIFxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQ4MDExXCIgY2xhc3M9XCJzLXNwcml0ZS1ncmlkIGFvay1hbGlnbi10b3AgYW9rLWZsb2F0LWxlZnRcIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGl0bGU9XCJTaWx2ZXJcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4lM0ExNzM1MjU0ODAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3MzUyNTM0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluXzRcIj5cbiAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyPVwieyZxdW90O29mZnNldFgmcXVvdDs6LTE0MDAsJnF1b3Q7b2Zmc2V0WSZxdW90OzowLCZxdW90O2hvdmVyT2Zmc2V0WSZxdW90OzotMTAwLCZxdW90O29iaklkJnF1b3Q7OiZxdW90O3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQ4MDExJnF1b3Q7LCZxdW90O2hvdmVyT2Zmc2V0WCZxdW90OzotMTQwMH1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvcnNwcml0ZSBhb2stZmxvYXQtbGVmdFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJiMwMzk7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL25hdjIvaW1hZ2VzL2d1aS9jbG90aGluZ2NvbG9yc3ByaXRlLl9DQjQzNzU1ODMyMF8ucG5nJiMwMzk7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjotMTQwMHB4IDBweDtcIiA+PC9kaXY+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgIFxuICAgIFxuICAgIFxuICBcblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjU0NTAxMVwiIGNsYXNzPVwicy1zcHJpdGUtZ3JpZCBhb2stYWxpZ24tdG9wIGFvay1mbG9hdC1sZWZ0XCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRpdGxlPVwiQmx1ZVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbiUzQTE3MzUyNTQ1MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTczNTI1MzQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW5fNVwiPlxuICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXI9XCJ7JnF1b3Q7b2Zmc2V0WCZxdW90OzotMTEwMCwmcXVvdDtvZmZzZXRZJnF1b3Q7OjAsJnF1b3Q7aG92ZXJPZmZzZXRZJnF1b3Q7Oi0xMDAsJnF1b3Q7b2JqSWQmcXVvdDs6JnF1b3Q7cF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1NDUwMTEmcXVvdDssJnF1b3Q7aG92ZXJPZmZzZXRYJnF1b3Q7Oi0xMTAwfVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yc3ByaXRlIGFvay1mbG9hdC1sZWZ0XCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCgmIzAzOTtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvbmF2Mi9pbWFnZXMvZ3VpL2Nsb3RoaW5nY29sb3JzcHJpdGUuX0NCNDM3NTU4MzIwXy5wbmcmIzAzOTspOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xMTAwcHggMHB4O1wiID48L2Rpdj5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgXG4gICAgXG4gICAgXG4gICAgXG4gIFxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQwMDExXCIgY2xhc3M9XCJzLXNwcml0ZS1ncmlkIGFvay1hbGlnbi10b3AgYW9rLWZsb2F0LWxlZnRcIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGl0bGU9XCJSZWRcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4lM0ExNzM1MjU0MDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3MzUyNTM0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluXzZcIj5cbiAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyPVwieyZxdW90O29mZnNldFgmcXVvdDs6LTUwMCwmcXVvdDtvZmZzZXRZJnF1b3Q7OjAsJnF1b3Q7aG92ZXJPZmZzZXRZJnF1b3Q7Oi0xMDAsJnF1b3Q7b2JqSWQmcXVvdDs6JnF1b3Q7cF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1NDAwMTEmcXVvdDssJnF1b3Q7aG92ZXJPZmZzZXRYJnF1b3Q7Oi01MDB9XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3JzcHJpdGUgYW9rLWZsb2F0LWxlZnRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6dXJsKCYjMDM5O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9uYXYyL2ltYWdlcy9ndWkvY2xvdGhpbmdjb2xvcnNwcml0ZS5fQ0I0Mzc1NTgzMjBfLnBuZyYjMDM5Oyk7IGJhY2tncm91bmQtcG9zaXRpb246LTUwMHB4IDBweDtcIiA+PC9kaXY+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgIFxuICAgIFxuICAgIFxuICBcblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjUzNjAxMVwiIGNsYXNzPVwicy1zcHJpdGUtZ3JpZCBhb2stYWxpZ24tdG9wIGFvay1mbG9hdC1sZWZ0XCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRpdGxlPVwiR3JleVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbiUzQTE3MzUyNTM2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTczNTI1MzQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW5fN1wiPlxuICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXI9XCJ7JnF1b3Q7b2Zmc2V0WCZxdW90OzotMTAwLCZxdW90O29mZnNldFkmcXVvdDs6MCwmcXVvdDtob3Zlck9mZnNldFkmcXVvdDs6LTEwMCwmcXVvdDtvYmpJZCZxdW90OzomcXVvdDtwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjUzNjAxMSZxdW90OywmcXVvdDtob3Zlck9mZnNldFgmcXVvdDs6LTEwMH1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvcnNwcml0ZSBhb2stZmxvYXQtbGVmdFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJiMwMzk7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL25hdjIvaW1hZ2VzL2d1aS9jbG90aGluZ2NvbG9yc3ByaXRlLl9DQjQzNzU1ODMyMF8ucG5nJiMwMzk7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjotMTAwcHggMHB4O1wiID48L2Rpdj5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgXG4gICAgXG4gICAgXG4gICAgXG4gIFxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQxMDExXCIgY2xhc3M9XCJzLXNwcml0ZS1ncmlkIGFvay1hbGlnbi10b3AgYW9rLWZsb2F0LWxlZnRcIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGl0bGU9XCJQaW5rXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluJTNBMTczNTI1NDEwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzM1MjUzNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbl84XCI+XG4gICAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJzLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtcy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtcy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3Zlcj1cInsmcXVvdDtvZmZzZXRYJnF1b3Q7Oi02MDAsJnF1b3Q7b2Zmc2V0WSZxdW90OzowLCZxdW90O2hvdmVyT2Zmc2V0WSZxdW90OzotMTAwLCZxdW90O29iaklkJnF1b3Q7OiZxdW90O3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQxMDExJnF1b3Q7LCZxdW90O2hvdmVyT2Zmc2V0WCZxdW90OzotNjAwfVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yc3ByaXRlIGFvay1mbG9hdC1sZWZ0XCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCgmIzAzOTtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvbmF2Mi9pbWFnZXMvZ3VpL2Nsb3RoaW5nY29sb3JzcHJpdGUuX0NCNDM3NTU4MzIwXy5wbmcmIzAzOTspOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOi02MDBweCAwcHg7XCIgPjwvZGl2PlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICBcbiAgICBcbiAgICBcbiAgICBcbiAgXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1NDQwMTFcIiBjbGFzcz1cInMtc3ByaXRlLWdyaWQgYW9rLWFsaWduLXRvcCBhb2stZmxvYXQtbGVmdFwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0aXRsZT1cIkdyZWVuXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluJTNBMTczNTI1NDQwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzM1MjUzNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbl85XCI+XG4gICAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJzLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtcy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtcy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3Zlcj1cInsmcXVvdDtvZmZzZXRYJnF1b3Q7Oi0xMDAwLCZxdW90O29mZnNldFkmcXVvdDs6MCwmcXVvdDtob3Zlck9mZnNldFkmcXVvdDs6LTEwMCwmcXVvdDtvYmpJZCZxdW90OzomcXVvdDtwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjU0NDAxMSZxdW90OywmcXVvdDtob3Zlck9mZnNldFgmcXVvdDs6LTEwMDB9XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sb3JzcHJpdGUgYW9rLWZsb2F0LWxlZnRcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6dXJsKCYjMDM5O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9uYXYyL2ltYWdlcy9ndWkvY2xvdGhpbmdjb2xvcnNwcml0ZS5fQ0I0Mzc1NTgzMjBfLnBuZyYjMDM5Oyk7IGJhY2tncm91bmQtcG9zaXRpb246LTEwMDBweCAwcHg7XCIgPjwvZGl2PlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICBcbiAgICBcbiAgICBcbiAgICBcbiAgXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1MzgwMTFcIiBjbGFzcz1cInMtc3ByaXRlLWdyaWQgYW9rLWFsaWduLXRvcCBhb2stZmxvYXQtbGVmdFwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0aXRsZT1cIkJyb3duXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluJTNBMTczNTI1MzgwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzM1MjUzNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbl8xMFwiPlxuICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXI9XCJ7JnF1b3Q7b2Zmc2V0WCZxdW90OzotMzAwLCZxdW90O29mZnNldFkmcXVvdDs6MCwmcXVvdDtob3Zlck9mZnNldFkmcXVvdDs6LTEwMCwmcXVvdDtvYmpJZCZxdW90OzomcXVvdDtwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjUzODAxMSZxdW90OywmcXVvdDtob3Zlck9mZnNldFgmcXVvdDs6LTMwMH1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvcnNwcml0ZSBhb2stZmxvYXQtbGVmdFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJiMwMzk7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL25hdjIvaW1hZ2VzL2d1aS9jbG90aGluZ2NvbG9yc3ByaXRlLl9DQjQzNzU1ODMyMF8ucG5nJiMwMzk7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjotMzAwcHggMHB4O1wiID48L2Rpdj5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgXG4gICAgXG4gICAgXG4gICAgXG4gIFxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQyMDExXCIgY2xhc3M9XCJzLXNwcml0ZS1ncmlkIGFvay1hbGlnbi10b3AgYW9rLWZsb2F0LWxlZnRcIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGl0bGU9XCJPcmFuZ2VcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4lM0ExNzM1MjU0MjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3MzUyNTM0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluXzExXCI+XG4gICAgICBcbiAgICBcbiAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLWRlY2xhcmF0aXZlXCIgZGF0YS1hY3Rpb249XCJzLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1jc2EtYy10eXBlPVwid2lkZ2V0XCIgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtcy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtcy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3Zlcj1cInsmcXVvdDtvZmZzZXRYJnF1b3Q7Oi03MDAsJnF1b3Q7b2Zmc2V0WSZxdW90OzowLCZxdW90O2hvdmVyT2Zmc2V0WSZxdW90OzotMTAwLCZxdW90O29iaklkJnF1b3Q7OiZxdW90O3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQyMDExJnF1b3Q7LCZxdW90O2hvdmVyT2Zmc2V0WCZxdW90OzotNzAwfVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbG9yc3ByaXRlIGFvay1mbG9hdC1sZWZ0XCIgc3R5bGU9XCJiYWNrZ3JvdW5kLWltYWdlOnVybCgmIzAzOTtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0cvMDEvbmF2Mi9pbWFnZXMvZ3VpL2Nsb3RoaW5nY29sb3JzcHJpdGUuX0NCNDM3NTU4MzIwXy5wbmcmIzAzOTspOyBiYWNrZ3JvdW5kLXBvc2l0aW9uOi03MDBweCAwcHg7XCIgPjwvZGl2PlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgXG4gICAgICAgIFxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICBcbiAgICBcbiAgICBcbiAgICBcbiAgXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW4vMTczNTI1NDYwMTFcIiBjbGFzcz1cInMtc3ByaXRlLWdyaWQgYW9rLWFsaWduLXRvcCBhb2stZmxvYXQtbGVmdFwiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0aXRsZT1cIlB1cnBsZVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbiUzQTE3MzUyNTQ2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTczNTI1MzQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW5fMTJcIj5cbiAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyPVwieyZxdW90O29mZnNldFgmcXVvdDs6LTEyMDAsJnF1b3Q7b2Zmc2V0WSZxdW90OzowLCZxdW90O2hvdmVyT2Zmc2V0WSZxdW90OzotMTAwLCZxdW90O29iaklkJnF1b3Q7OiZxdW90O3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQ2MDExJnF1b3Q7LCZxdW90O2hvdmVyT2Zmc2V0WCZxdW90OzotMTIwMH1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvcnNwcml0ZSBhb2stZmxvYXQtbGVmdFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJiMwMzk7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL25hdjIvaW1hZ2VzL2d1aS9jbG90aGluZ2NvbG9yc3ByaXRlLl9DQjQzNzU1ODMyMF8ucG5nJiMwMzk7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjotMTIwMHB4IDBweDtcIiA+PC9kaXY+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gIFxuICAgIFxuICAgIFxuICAgIFxuICBcblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjU0MzAxMVwiIGNsYXNzPVwicy1zcHJpdGUtZ3JpZCBhb2stYWxpZ24tdG9wIGFvay1mbG9hdC1sZWZ0XCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRpdGxlPVwiWWVsbG93XCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluJTNBMTczNTI1NDMwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzM1MjUzNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbl8xM1wiPlxuICAgICAgXG4gICAgXG4gICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIFxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1kZWNsYXJhdGl2ZVwiIGRhdGEtYWN0aW9uPVwicy1uYXYtcmVmLWltYWdlLWxheW91dC1ob3ZlclwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWMtZnVuYy1kZXBzPVwiYXVpLWRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLXMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXI9XCJ7JnF1b3Q7b2Zmc2V0WCZxdW90OzotODAwLCZxdW90O29mZnNldFkmcXVvdDs6MCwmcXVvdDtob3Zlck9mZnNldFkmcXVvdDs6LTEwMCwmcXVvdDtvYmpJZCZxdW90OzomcXVvdDtwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbi8xNzM1MjU0MzAxMSZxdW90OywmcXVvdDtob3Zlck9mZnNldFgmcXVvdDs6LTgwMH1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvcnNwcml0ZSBhb2stZmxvYXQtbGVmdFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJiMwMzk7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL25hdjIvaW1hZ2VzL2d1aS9jbG90aGluZ2NvbG9yc3ByaXRlLl9DQjQzNzU1ODMyMF8ucG5nJiMwMzk7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjotODAwcHggMHB4O1wiID48L2Rpdj5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIFxuICAgICAgICBcbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgXG4gICAgXG4gICAgXG4gICAgXG4gIFxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQ5MDExXCIgY2xhc3M9XCJzLXNwcml0ZS1ncmlkIGFvay1hbGlnbi10b3AgYW9rLWZsb2F0LWxlZnRcIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGl0bGU9XCJNdWx0aVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d29fYnJvd3NlLWJpbiUzQTE3MzUyNTQ5MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTczNTI1MzQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdvX2Jyb3dzZS1iaW5fMTRcIj5cbiAgICAgIFxuICAgIFxuICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICBcbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtZGVjbGFyYXRpdmVcIiBkYXRhLWFjdGlvbj1cInMtbmF2LXJlZi1pbWFnZS1sYXlvdXQtaG92ZXJcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyXCIgZGF0YS1zLW5hdi1yZWYtaW1hZ2UtbGF5b3V0LWhvdmVyPVwieyZxdW90O29mZnNldFgmcXVvdDs6LTE1MDAsJnF1b3Q7b2Zmc2V0WSZxdW90OzowLCZxdW90O2hvdmVyT2Zmc2V0WSZxdW90OzotMTAwLCZxdW90O29iaklkJnF1b3Q7OiZxdW90O3Bfbl9mZWF0dXJlX3R3b19icm93c2UtYmluLzE3MzUyNTQ5MDExJnF1b3Q7LCZxdW90O2hvdmVyT2Zmc2V0WCZxdW90OzotMTUwMH1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2xvcnNwcml0ZSBhb2stZmxvYXQtbGVmdFwiIHN0eWxlPVwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJiMwMzk7aHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL25hdjIvaW1hZ2VzL2d1aS9jbG90aGluZ2NvbG9yc3ByaXRlLl9DQjQzNzU1ODMyMF8ucG5nJiMwMzk7KTsgYmFja2dyb3VuZC1wb3NpdGlvbjotMTUwMHB4IDBweDtcIiA+PC9kaXY+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICBcbiAgICAgICAgXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBJbnRlcm5hbCBTdG9yYWdlIE1lbW9yeTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW4vMTQ2NzQ5MDUwMTFcIiBhcmlhLWxhYmVsPVwiVXAgdG8gMy45IEdCXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbiUzQTE0Njc0OTA1MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ5MDQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlVwIHRvIDMuOSBHQjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluLzE0Njc0OTA2MDExXCIgYXJpYS1sYWJlbD1cIjQgR0JcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluJTNBMTQ2NzQ5MDYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDkwNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+NCBHQjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluLzE0Njc0OTA3MDExXCIgYXJpYS1sYWJlbD1cIjggR0JcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluJTNBMTQ2NzQ5MDcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDkwNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbl8zXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+OCBHQjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluLzE0Njc0OTA4MDExXCIgYXJpYS1sYWJlbD1cIjE2IEdCXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbiUzQTE0Njc0OTA4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ5MDQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW5fNFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjE2IEdCPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW4vMTQ2NzQ5MDkwMTFcIiBhcmlhLWxhYmVsPVwiMzIgR0JcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluJTNBMTQ2NzQ5MDkwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDkwNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbl81XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MzIgR0I8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbi8xNDY3NDkxMDAxMVwiIGFyaWEtbGFiZWw9XCI2NCBHQlwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW4lM0ExNDY3NDkxMDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0OTA0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluXzZcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj42NCBHQjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluLzE0Njc0OTExMDExXCIgYXJpYS1sYWJlbD1cIjEyOCBHQlwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbHZlX2Jyb3dzZS1iaW4lM0ExNDY3NDkxMTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0OTA0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluXzdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xMjggR0I8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbi8xNzM1MjU1MDAxMVwiIGFyaWEtbGFiZWw9XCIyNTYgR0IgJmFtcDsgYWJvdmVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZWx2ZV9icm93c2UtYmluJTNBMTczNTI1NTAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDkwNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VsdmVfYnJvd3NlLWJpbl84XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MjU2IEdCICZhbXA7IGFib3ZlPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV9zZXZlbl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBEaXNwbGF5IFNpemU8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3NldmVuX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbi82MjE1NzI3MDExXCIgYXJpYS1sYWJlbD1cIlVwIHRvIDMuOSBpblwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbiUzQTYyMTU3MjcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD02MjE1NzI2MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3NldmVuX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlVwIHRvIDMuOSBpbjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3NldmVuX2Jyb3dzZS1iaW4vNjIxNTcyODAxMVwiIGFyaWEtbGFiZWw9XCI0IHRvIDQuNCBpblwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbiUzQTYyMTU3MjgwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD02MjE1NzI2MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3NldmVuX2Jyb3dzZS1iaW5fMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjQgdG8gNC40IGluPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbi82MjE1NzI5MDExXCIgYXJpYS1sYWJlbD1cIjQuNSB0byA0LjkgaW5cIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3NldmVuX2Jyb3dzZS1iaW4lM0E2MjE1NzI5MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9NjIxNTcyNjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9zZXZlbl9icm93c2UtYmluXzNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj40LjUgdG8gNC45IGluPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbi82MjE1NzMwMDExXCIgYXJpYS1sYWJlbD1cIjUgdG8gNS40IGluXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9zZXZlbl9icm93c2UtYmluJTNBNjIxNTczMDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTYyMTU3MjYwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbl80XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+NSB0byA1LjQgaW48L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9zZXZlbl9icm93c2UtYmluLzYyMTU3MzEwMTFcIiBhcmlhLWxhYmVsPVwiNS41IGluICZhbXA7IGFib3ZlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9zZXZlbl9icm93c2UtYmluJTNBNjIxNTczMTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTYyMTU3MjYwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfc2V2ZW5fYnJvd3NlLWJpbl81XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+NS41IGluICZhbXA7IGFib3ZlPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktZml2ZV9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBBc3BlY3QgUmF0aW88L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3R3ZW50eS1maXZlX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LWZpdmVfYnJvd3NlLWJpbi8yMzYzNDUyMDAxMVwiIGFyaWEtbGFiZWw9XCIxNjo5XCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VudHktZml2ZV9icm93c2UtYmluJTNBMjM2MzQ1MjAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzYzNDUxOTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktZml2ZV9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xNjo5PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV9uaW5ldGVlbl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbHVsYXIgVGVjaG5vbG9neTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfbmluZXRlZW5fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9uaW5ldGVlbl9icm93c2UtYmluLzE3Njk4NDQ2MDExXCIgYXJpYS1sYWJlbD1cIjJHXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9uaW5ldGVlbl9icm93c2UtYmluJTNBMTc2OTg0NDYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD05NTIxOTE4MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX25pbmV0ZWVuX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjJHPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfbmluZXRlZW5fYnJvd3NlLWJpbi85NTIxOTIwMDExXCIgYXJpYS1sYWJlbD1cIjNHXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9uaW5ldGVlbl9icm93c2UtYmluJTNBOTUyMTkyMDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTk1MjE5MTgwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfbmluZXRlZW5fYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+M0c8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9uaW5ldGVlbl9icm93c2UtYmluLzk1MjE5MjEwMTFcIiBhcmlhLWxhYmVsPVwiNEdcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX25pbmV0ZWVuX2Jyb3dzZS1iaW4lM0E5NTIxOTIxMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9OTUyMTkxODAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9uaW5ldGVlbl9icm93c2UtYmluXzNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj40Rzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5X2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtYm9sZC13ZWlnaHQtdGV4dFwiIGRpcj1cImF1dG9cIj5DZWxsIFBob25lIE9wZXJhdGluZyBTeXN0ZW08L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1tZWRpdW1cIj5cbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluLzE3ODgxODc2MDExXCIgYXJpYS1sYWJlbD1cIkFuZHJvaWRcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluJTNBMTc4ODE4NzYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg3NTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHlfYnJvd3NlLWJpbl8xXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+QW5kcm9pZDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluLzE3ODgxODc3MDExXCIgYXJpYS1sYWJlbD1cIkJsYWNrQmVycnlcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluJTNBMTc4ODE4NzcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg3NTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHlfYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+QmxhY2tCZXJyeTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluLzE3ODgxODc4MDExXCIgYXJpYS1sYWJlbD1cImlPU1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5X2Jyb3dzZS1iaW4lM0ExNzg4MTg3ODAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3ODgxODc1MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZW50eV9icm93c2UtYmluXzNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5pT1M8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHlfYnJvd3NlLWJpbi8xNzg4MTg3OTAxMVwiIGFyaWEtbGFiZWw9XCJXaW5kb3dzXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VudHlfYnJvd3NlLWJpbiUzQTE3ODgxODc5MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NzUwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5X2Jyb3dzZS1iaW5fNFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPldpbmRvd3M8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkVsZWN0cm9uaWNzIERldmljZSBNb2RlbCBZZWFyPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICBcbiAgICBcblxuXG5cbjx1bCBhcmlhLWxhYmVsbGVkYnk9XCJwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluLzIzNDc4NTk5MDExXCIgYXJpYS1sYWJlbD1cIjIwMjFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbiUzQTIzNDc4NTk5MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9NDk3Mjk2NzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjIwMjE8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4vMjExMDM1NDEwMTFcIiBhcmlhLWxhYmVsPVwiMjAyMFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluJTNBMjExMDM1NDEwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD00OTcyOTY3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MjAyMDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbi8xODc3ODY2NTAxMVwiIGFyaWEtbGFiZWw9XCIyMDE5XCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4lM0ExODc3ODY2NTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTQ5NzI5NjcwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluXzNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4yMDE5PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluLzE3NTk5MzAyMDExXCIgYXJpYS1sYWJlbD1cIjIwMThcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbiUzQTE3NTk5MzAyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9NDk3Mjk2NzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW5fNFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjIwMTg8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4vMTY1OTEyMzAwMTFcIiBhcmlhLWxhYmVsPVwiMjAxN1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluJTNBMTY1OTEyMzAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD00OTcyOTY3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbl81XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MjAxNzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbi8xMzY4NjUzODAxMVwiIGFyaWEtbGFiZWw9XCIyMDE2XCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4lM0ExMzY4NjUzODAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTQ5NzI5NjcwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluXzZcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4yMDE2PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfbmluZV9icm93c2UtYmluLzEwNjUwMTkwMDExXCIgYXJpYS1sYWJlbD1cIjIwMTVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX25pbmVfYnJvd3NlLWJpbiUzQTEwNjUwMTkwMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9NDk3Mjk2NzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW5fN1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjIwMTU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4vODYyMTcwMDAxMVwiIGFyaWEtbGFiZWw9XCIyMDE0XCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW4lM0E4NjIxNzAwMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9NDk3Mjk2NzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9uaW5lX2Jyb3dzZS1iaW5fOFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjIwMTQ8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS1zaXhfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkNlbGx1bGFyIFBob25lIFNJTSBDYXJkIFNpemU8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3R3ZW50eS1zaXhfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktc2l4X2Jyb3dzZS1iaW4vMjM2NDE1NjYwMTFcIiBhcmlhLWxhYmVsPVwiTmFub1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXNpeF9icm93c2UtYmluJTNBMjM2NDE1NjYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzY0MTU2MzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktc2l4X2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk5hbm88L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX3NldmVudGVlbl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBDb25uZWN0aXZpdHkgVGVjaG5vbG9neTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW4vMjM0ODgxNjIwMTFcIiBhcmlhLWxhYmVsPVwiQmx1ZXRvb3RoXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9zZXZlbnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg4MTYyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODgxNTkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkJsdWV0b290aDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3NldmVudGVlbl9icm93c2UtYmluLzIzNDg4MTYwMDExXCIgYXJpYS1sYWJlbD1cIkluZnJhcmVkXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9zZXZlbnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg4MTYwMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODgxNTkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW5fMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkluZnJhcmVkPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW4vMjM0ODgxNjQwMTFcIiBhcmlhLWxhYmVsPVwiTkZDXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9zZXZlbnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg4MTY0MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODgxNTkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk5GQzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3NldmVudGVlbl9icm93c2UtYmluLzIzNDg4MTYxMDExXCIgYXJpYS1sYWJlbD1cIlVTQlwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW4lM0EyMzQ4ODE2MTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg4MTU5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3NldmVudGVlbl9icm93c2UtYmluXzRcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5VU0I8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9zZXZlbnRlZW5fYnJvd3NlLWJpbi8yMzQ4ODE2MzAxMVwiIGFyaWEtbGFiZWw9XCJXaS1GaVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfc2V2ZW50ZWVuX2Jyb3dzZS1iaW4lM0EyMzQ4ODE2MzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg4MTU5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3NldmVudGVlbl9icm93c2UtYmluXzVcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5XaS1GaTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtc2VjdGlvbiBhLXNwYWNpbmctc21hbGxcIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlIHMtYm9sZC13ZWlnaHQtdGV4dFwiIGRpcj1cImF1dG9cIj5DZWxsIFBob25lIEZlYXR1cmVzPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICBcbiAgICBcblxuXG5cbjx1bCBhcmlhLWxhYmVsbGVkYnk9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi8xNDY3NDg4MTAxMVwiIGFyaWEtbGFiZWw9XCJCYXNpYyBQaG9uZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4lM0ExNDY3NDg4MTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODc5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5CYXNpYyBQaG9uZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluLzE0Njc0ODgyMDExXCIgYXJpYS1sYWJlbD1cIkJsdWV0b290aCBFbmFibGVkXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbiUzQTE0Njc0ODgyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW5fMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkJsdWV0b290aCBFbmFibGVkPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4vMTQ2NzQ4ODMwMTFcIiBhcmlhLWxhYmVsPVwiQnVpbHQtSW4gR1BTXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbiUzQTE0Njc0ODgzMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkJ1aWx0LUluIEdQUzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluLzE0Njc0ODg0MDExXCIgYXJpYS1sYWJlbD1cIkNhbWVyYVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4lM0ExNDY3NDg4NDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODc5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluXzRcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5DYW1lcmE8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi8xNDY3NDg4NTAxMVwiIGFyaWEtbGFiZWw9XCJEdWFsIEJhbmRcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluJTNBMTQ2NzQ4ODUwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbl81XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+RHVhbCBCYW5kPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4vMTQ2NzQ4ODYwMTFcIiBhcmlhLWxhYmVsPVwiRHVhbCBDYW1lcmFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluJTNBMTQ2NzQ4ODYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbl82XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+RHVhbCBDYW1lcmE8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi8xNDY3NDg4ODAxMVwiIGFyaWEtbGFiZWw9XCJEdWFsIFNJTVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4lM0ExNDY3NDg4ODAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODc5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluXzdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5EdWFsIFNJTTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIDxsaSBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXJvdyBhLWV4cGFuZGVyLWNvbnRhaW5lciBhLWV4cGFuZGVyLWV4dGVuZC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50IGEtZXhwYW5kZXItZXh0ZW5kLWNvbnRlbnRcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1ub25lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluLzE0Njc0ODkyMDExXCIgYXJpYS1sYWJlbD1cIkludGVybmF0aW9uYWxseSBTb3VyY2VkXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbiUzQTE0Njc0ODkyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW5fOFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkludGVybmF0aW9uYWxseSBTb3VyY2VkPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluLzE0Njc0ODkzMDExXCIgYXJpYS1sYWJlbD1cIkxURVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4lM0ExNDY3NDg5MzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODc5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluXzlcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5MVEU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4vMTQ2NzQ4OTQwMTFcIiBhcmlhLWxhYmVsPVwiTW9iaWxlIEhvdHNwb3QgQ2FwYWJpbGl0eVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4lM0ExNDY3NDg5NDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODc5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluXzEwXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+TW9iaWxlIEhvdHNwb3QgQ2FwYWJpbGl0eTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi8xNDY3NDg5NjAxMVwiIGFyaWEtbGFiZWw9XCJQdXNoIHRvIFRhbGtcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluJTNBMTQ2NzQ4OTYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbl8xMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlB1c2ggdG8gVGFsazwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi8xNDY3NDg5NzAxMVwiIGFyaWEtbGFiZWw9XCJRdWFkIEJhbmRcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluJTNBMTQ2NzQ4OTcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbl8xMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlF1YWQgQmFuZDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbi8xNDcxNzgwNDAxMVwiIGFyaWEtbGFiZWw9XCJRdWFkIENvcmUgUHJvY2Vzc29yXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbiUzQTE0NzE3ODA0MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ4NzkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW5fMTNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5RdWFkIENvcmUgUHJvY2Vzc29yPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluLzE0Njc0ODk4MDExXCIgYXJpYS1sYWJlbD1cIlNtYXJ0cGhvbmVcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluJTNBMTQ2NzQ4OTgwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbl8xNFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlNtYXJ0cGhvbmU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4vMTQ2NzQ5MDAwMTFcIiBhcmlhLWxhYmVsPVwiVG91Y2hzY3JlZW5cIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluJTNBMTQ2NzQ5MDAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDg3OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9lbGV2ZW5fYnJvd3NlLWJpbl8xNVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlRvdWNoc2NyZWVuPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluLzE0Njc0OTAyMDExXCIgYXJpYS1sYWJlbD1cIldhdGVyIFJlc2lzdGFudFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWxldmVuX2Jyb3dzZS1iaW4lM0ExNDY3NDkwMjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0ODc5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VsZXZlbl9icm93c2UtYmluXzE2XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+V2F0ZXIgUmVzaXN0YW50PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8YSBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLWV4cGFuZGVyLXRvZ2dsZVwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWludGVyYWN0aW9uLWV2ZW50cz1cImNsaWNrXCIgYXJpYS1sYWJlbD1cIlNlZSBtb3JlLCBDZWxsIFBob25lIEZlYXR1cmVzXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgcm9sZT1cImJ1dHRvblwiIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBkYXRhLWFjdGlvbj1cImEtZXhwYW5kZXItdG9nZ2xlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWhlYWRlciBhLWRlY2xhcmF0aXZlIGEtZXhwYW5kZXItZXh0ZW5kLWhlYWRlciBzLWV4cGFuZGVyLXRleHRcIiBkYXRhLWEtZXhwYW5kZXItdG9nZ2xlPVwieyZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6dHJ1ZSwgJnF1b3Q7ZXhwYW5kX3Byb21wdCZxdW90OzomcXVvdDtTZWUgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1NlZSBMZXNzJnF1b3Q7fVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlNlZSBtb3JlPC9zcGFuPjwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3NwYW4+PC9saT5cbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV9mb3J0eV9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBEaXNwbGF5IFR5cGU8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX2ZvcnR5X2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2ZvcnR5X2Jyb3dzZS1iaW4vMjM0MzAwMDQwMTFcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm9ydHlfYnJvd3NlLWJpbiUzQTIzNDMwMDA0MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0MzAwMDMwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZm9ydHlfYnJvd3NlLWJpbl8xXCI+XG4gICAgICBcbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5BTU9MRUQ8L3NwYW4+XG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZm9ydHlfYnJvd3NlLWJpbi8yMzQzMDAwNTAxMVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9mb3J0eV9icm93c2UtYmluJTNBMjM0MzAwMDUwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQzMDAwMzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3J0eV9icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkxDRDwvc3Bhbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9mb3J0eV9icm93c2UtYmluLzIzNDMwMDA2MDExXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2ZvcnR5X2Jyb3dzZS1iaW4lM0EyMzQzMDAwNjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDMwMDAzMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2ZvcnR5X2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+T0xFRDwvc3Bhbj5cbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkNlbGwgUGhvbmUgQ2FtZXJhIFJlc29sdXRpb248L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3RoaXJ0ZWVuX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbi8xNDY3NDkxMzAxMVwiIGFyaWEtbGFiZWw9XCJVcCB0byAyLjkgTVBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3RoaXJ0ZWVuX2Jyb3dzZS1iaW4lM0ExNDY3NDkxMzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0OTEyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3RoaXJ0ZWVuX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlVwIHRvIDIuOSBNUDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3RoaXJ0ZWVuX2Jyb3dzZS1iaW4vMTQ2NzQ5MTQwMTFcIiBhcmlhLWxhYmVsPVwiMyB0byA0LjkgTVBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3RoaXJ0ZWVuX2Jyb3dzZS1iaW4lM0ExNDY3NDkxNDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE0Njc0OTEyMDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3RoaXJ0ZWVuX2Jyb3dzZS1iaW5fMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjMgdG8gNC45IE1QPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbi8xNDY3NDkxNTAxMVwiIGFyaWEtbGFiZWw9XCI1IHRvIDcuOSBNUFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbiUzQTE0Njc0OTE1MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ5MTIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbl8zXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+NSB0byA3LjkgTVA8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90aGlydGVlbl9icm93c2UtYmluLzE0Njc0OTE2MDExXCIgYXJpYS1sYWJlbD1cIjggdG8gMTIuOSBNUFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbiUzQTE0Njc0OTE2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ5MTIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbl80XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+OCB0byAxMi45IE1QPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbi8xNDY3NDkxNzAxMVwiIGFyaWEtbGFiZWw9XCIxMyB0byAxOS45IE1QXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90aGlydGVlbl9icm93c2UtYmluJTNBMTQ2NzQ5MTcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNDY3NDkxMjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90aGlydGVlbl9icm93c2UtYmluXzVcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xMyB0byAxOS45IE1QPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbi8xNDY3NDkxODAxMVwiIGFyaWEtbGFiZWw9XCIyMCBNUCAmYW1wOyBhYm92ZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbiUzQTE0Njc0OTE4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTQ2NzQ5MTIwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdGhpcnRlZW5fYnJvd3NlLWJpbl82XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MjAgTVAgJmFtcDsgYWJvdmU8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkNlbGwgUGhvbmUgU2hvb3RpbmcgTW9kZXM8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW4vMjM0ODg3OTgwMTFcIiBhcmlhLWxhYmVsPVwiQXBlcnR1cmUgUHJpb3JpdHlcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbiUzQTIzNDg4Nzk4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODg3OTYwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5BcGVydHVyZSBQcmlvcml0eTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi8yMzQ4ODc5OTAxMVwiIGFyaWEtbGFiZWw9XCJBdXRvbWF0aWNcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbiUzQTIzNDg4Nzk5MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODg3OTYwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5BdXRvbWF0aWM8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW4vMjM0ODg4MDIwMTFcIiBhcmlhLWxhYmVsPVwiQ3VzdG9tXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW4lM0EyMzQ4ODgwMjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg4Nzk2MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbl8zXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+Q3VzdG9tPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluLzIzNDg4ODAxMDExXCIgYXJpYS1sYWJlbD1cIkhpZ2ggRHluYW1pYyBSYW5nZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDEwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fNFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkhpZ2ggRHluYW1pYyBSYW5nZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi8yMzQ4ODgwMzAxMVwiIGFyaWEtbGFiZWw9XCJNYWNyb1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDMwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fNVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk1hY3JvPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluLzIzNDg4ODA2MDExXCIgYXJpYS1sYWJlbD1cIk1hbnVhbFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fNlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk1hbnVhbDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi8yMzQ4ODgwNTAxMVwiIGFyaWEtbGFiZWw9XCJOaWdodCBNb2RlXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW4lM0EyMzQ4ODgwNTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg4Nzk2MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbl83XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+TmlnaHQgTW9kZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIDxsaSBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXJvdyBhLWV4cGFuZGVyLWNvbnRhaW5lciBhLWV4cGFuZGVyLWV4dGVuZC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50IGEtZXhwYW5kZXItZXh0ZW5kLWNvbnRlbnRcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1ub25lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi8yMzQ4ODgwNDAxMVwiIGFyaWEtbGFiZWw9XCJQYW5vcmFtYVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDQwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fOFwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlBhbm9yYW1hPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi8yMzQ4ODgwNzAxMVwiIGFyaWEtbGFiZWw9XCJQb3J0cmFpdFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fOVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlBvcnRyYWl0PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbi8yMzQ4ODgwOTAxMVwiIGFyaWEtbGFiZWw9XCJTY2VuZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDkwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fMTBcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5TY2VuZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW4vMjM2OTU1OTgwMTFcIiBhcmlhLWxhYmVsPVwiU2xvdyBNb3Rpb25cIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbiUzQTIzNjk1NTk4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODg3OTYwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluXzExXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+U2xvdyBNb3Rpb248L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluLzIzNDg4ODAwMDExXCIgYXJpYS1sYWJlbD1cIlNwb3J0c1wiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg4MDAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fMTJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5TcG9ydHM8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluLzIzNjk1NTk3MDExXCIgYXJpYS1sYWJlbD1cIlRpbWUgTGFwc2VcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS10d29fYnJvd3NlLWJpbiUzQTIzNjk1NTk3MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODg3OTYwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluXzEzXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VGltZSBMYXBzZTwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW4vMjM0ODg3OTcwMTFcIiBhcmlhLWxhYmVsPVwiVW5kZXJ3YXRlclwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXR3b19icm93c2UtYmluJTNBMjM0ODg3OTcwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4ODc5NjAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdHdvX2Jyb3dzZS1iaW5fMTRcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5VbmRlcndhdGVyPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8YSBkYXRhLWNzYS1jLWZ1bmMtZGVwcz1cImF1aS1kYS1hLWV4cGFuZGVyLXRvZ2dsZVwiIGRhdGEtY3NhLWMtdHlwZT1cIndpZGdldFwiIGRhdGEtY3NhLWludGVyYWN0aW9uLWV2ZW50cz1cImNsaWNrXCIgYXJpYS1sYWJlbD1cIlNlZSBtb3JlLCBDZWxsIFBob25lIFNob290aW5nIE1vZGVzXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgcm9sZT1cImJ1dHRvblwiIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBkYXRhLWFjdGlvbj1cImEtZXhwYW5kZXItdG9nZ2xlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWhlYWRlciBhLWRlY2xhcmF0aXZlIGEtZXhwYW5kZXItZXh0ZW5kLWhlYWRlciBzLWV4cGFuZGVyLXRleHRcIiBkYXRhLWEtZXhwYW5kZXItdG9nZ2xlPVwieyZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6dHJ1ZSwgJnF1b3Q7ZXhwYW5kX3Byb21wdCZxdW90OzomcXVvdDtTZWUgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1NlZSBMZXNzJnF1b3Q7fVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlNlZSBtb3JlPC9zcGFuPjwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3NwYW4+PC9saT5cbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV9laWdodGVlbl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBGb3JtIEZhY3Rvcjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfZWlnaHRlZW5fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodGVlbl9icm93c2UtYmluLzE3ODgxODUwMDExXCIgYXJpYS1sYWJlbD1cIkJhclwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWlnaHRlZW5fYnJvd3NlLWJpbiUzQTE3ODgxODUwMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTc4ODE4NDkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWlnaHRlZW5fYnJvd3NlLWJpbl8xXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+QmFyPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRlZW5fYnJvd3NlLWJpbi8xNzg4MTg1MTAxMVwiIGFyaWEtbGFiZWw9XCJGbGlwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodGVlbl9icm93c2UtYmluJTNBMTc4ODE4NTEwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xNzg4MTg0OTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodGVlbl9icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5GbGlwPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRlZW5fYnJvd3NlLWJpbi8xNzg4MTg1MzAxMVwiIGFyaWEtbGFiZWw9XCJTbGlkZXJcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0ZWVuX2Jyb3dzZS1iaW4lM0ExNzg4MTg1MzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTE3ODgxODQ5MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0ZWVuX2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlNsaWRlcjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2ZlYXR1cmVfZm91cl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbHVsYXIgUGhvbmUgQmlvbWV0cmljIFNlY3VyaXR5IEZlYXR1cmU8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX2ZvdXJfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9mb3VyX2Jyb3dzZS1iaW4vMjM0Nzg1OTIwMTFcIiBhcmlhLWxhYmVsPVwiRmFjZSBSZWNvZ25pdGlvblwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm91cl9icm93c2UtYmluJTNBMjM0Nzg1OTIwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ3ODU5MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3VyX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkZhY2UgUmVjb2duaXRpb248L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9mb3VyX2Jyb3dzZS1iaW4vMjM0Nzg1OTYwMTFcIiBhcmlhLWxhYmVsPVwiRmluZ2VycHJpbnQgUmVjb2duaXRpb25cIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2ZvdXJfYnJvd3NlLWJpbiUzQTIzNDc4NTk2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0Nzg1OTEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZm91cl9icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5GaW5nZXJwcmludCBSZWNvZ25pdGlvbjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2ZvdXJfYnJvd3NlLWJpbi8yMzQ3ODU5NTAxMVwiIGFyaWEtbGFiZWw9XCJWb2ljZSBSZWNvZ25pdGlvblwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm91cl9icm93c2UtYmluJTNBMjM0Nzg1OTUwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ3ODU5MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3VyX2Jyb3dzZS1iaW5fM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPlZvaWNlIFJlY29nbml0aW9uPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBIdW1hbiBJbnRlcmZhY2UgSW5wdXQ8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgIFxuICAgIFxuXG5cblxuPHVsIGFyaWEtbGFiZWxsZWRieT1cInBfbl9mZWF0dXJlX2ZvdXJ0ZWVuX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbi8yMzQ4NzQ5NTAxMVwiIGFyaWEtbGFiZWw9XCJCdXR0b25zXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluJTNBMjM0ODc0OTUwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzQ5MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5CdXR0b25zPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbi8yMzQ4NzUwNDAxMVwiIGFyaWEtbGFiZWw9XCJEaWFsXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluJTNBMjM0ODc1MDQwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzQ5MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5EaWFsPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbi8yMzQ4NzUwMTAxMVwiIGFyaWEtbGFiZWw9XCJLZXlib2FyZFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg3NTAxMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODc0OTEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbl8zXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+S2V5Ym9hcmQ8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluLzIzNDg3NTAwMDExXCIgYXJpYS1sYWJlbD1cIktleXBhZFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg3NTAwMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODc0OTEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbl80XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+S2V5cGFkPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbi8yMzQ4NzQ5ODAxMVwiIGFyaWEtbGFiZWw9XCJNaWNyb3Bob25lXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluJTNBMjM0ODc0OTgwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzQ5MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluXzVcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5NaWNyb3Bob25lPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbi8yMzQ4NzUwMjAxMVwiIGFyaWEtbGFiZWw9XCJNb3VzZVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg3NTAyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODc0OTEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbl82XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+TW91c2U8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluLzIzNDg3NDkzMDExXCIgYXJpYS1sYWJlbD1cIlRvdWNoc2NyZWVuXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluJTNBMjM0ODc0OTMwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzQ5MTAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9mb3VydGVlbl9icm93c2UtYmluXzdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5Ub3VjaHNjcmVlbjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG4gICAgICAgIDxsaSBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhLXJvdyBhLWV4cGFuZGVyLWNvbnRhaW5lciBhLWV4cGFuZGVyLWV4dGVuZC1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGFyaWEtZXhwYW5kZWQ9XCJmYWxzZVwiIGNsYXNzPVwiYS1leHBhbmRlci1jb250ZW50IGEtZXhwYW5kZXItZXh0ZW5kLWNvbnRlbnRcIiBzdHlsZT1cImRpc3BsYXk6bm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9XCJhLXVub3JkZXJlZC1saXN0IGEtbm9zdHlsZSBhLXZlcnRpY2FsIGEtc3BhY2luZy1ub25lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2ZvdXJ0ZWVuX2Jyb3dzZS1iaW4vMjM0ODc1MDYwMTFcIiBhcmlhLWxhYmVsPVwiVG91Y2hzY3JlZW4gd2l0aCBTdHlsdXMgU3VwcG9ydFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbiUzQTIzNDg3NTA2MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODc0OTEwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZm91cnRlZW5fYnJvd3NlLWJpbl84XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VG91Y2hzY3JlZW4gd2l0aCBTdHlsdXMgU3VwcG9ydDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGEgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1leHBhbmRlci10b2dnbGVcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1pbnRlcmFjdGlvbi1ldmVudHM9XCJjbGlja1wiIGFyaWEtbGFiZWw9XCJTZWUgbW9yZSwgQ2VsbCBQaG9uZSBIdW1hbiBJbnRlcmZhY2UgSW5wdXRcIiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiByb2xlPVwiYnV0dG9uXCIgaHJlZj1cImphdmFzY3JpcHQ6dm9pZCgwKVwiIGRhdGEtYWN0aW9uPVwiYS1leHBhbmRlci10b2dnbGVcIiBjbGFzcz1cImEtZXhwYW5kZXItaGVhZGVyIGEtZGVjbGFyYXRpdmUgYS1leHBhbmRlci1leHRlbmQtaGVhZGVyIHMtZXhwYW5kZXItdGV4dFwiIGRhdGEtYS1leHBhbmRlci10b2dnbGU9XCJ7JnF1b3Q7YWxsb3dMaW5rRGVmYXVsdCZxdW90Ozp0cnVlLCAmcXVvdDtleHBhbmRfcHJvbXB0JnF1b3Q7OiZxdW90O1NlZSBtb3JlJnF1b3Q7LCAmcXVvdDtjb2xsYXBzZV9wcm9tcHQmcXVvdDs6JnF1b3Q7U2VlIExlc3MmcXVvdDt9XCI+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWV4dGVuZGVyLWV4cGFuZFwiPjwvaT48c3BhbiBjbGFzcz1cImEtZXhwYW5kZXItcHJvbXB0XCI+U2VlIG1vcmU8L3NwYW4+PC9hPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvc3Bhbj48L2xpPlxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX3R3ZW50eS10aHJlZV9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbHVsYXIgUGhvbmUgU0lNIENhcmQgU2xvdCBDb3VudDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfdHdlbnR5LXRocmVlX2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LXRocmVlX2Jyb3dzZS1iaW4vMjM2MjcyODkwMTFcIiBhcmlhLWxhYmVsPVwiU2luZ2xlIFNJTVwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LXRocmVlX2Jyb3dzZS1iaW4lM0EyMzYyNzI4OTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNjI3Mjg3MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZW50eS10aHJlZV9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5TaW5nbGUgU0lNPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LXRocmVlX2Jyb3dzZS1iaW4vMjM2MjcyOTAwMTFcIiBhcmlhLWxhYmVsPVwiRHVhbCBTSU1cIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS10aHJlZV9icm93c2UtYmluJTNBMjM2MjcyOTAwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzYyNzI4NzAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktdGhyZWVfYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+RHVhbCBTSU08L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuXG5cbiAgICBcbiAgICBcbiAgICAgICAgPGRpdiBpZD1cInBfbl9mZWF0dXJlX3NpeF9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+Q2VsbCBQaG9uZSBDb25uZWN0b3IgVHlwZTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfc2l4X2Jyb3dzZS1iaW4tdGl0bGVcIiBjbGFzcz1cImEtdW5vcmRlcmVkLWxpc3QgYS1ub3N0eWxlIGEtdmVydGljYWwgYS1zcGFjaW5nLW1lZGl1bVwiPlxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfc2l4X2Jyb3dzZS1iaW4vMjM0ODczOTAwMTFcIiBhcmlhLWxhYmVsPVwiTGlnaHRuaW5nXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9zaXhfYnJvd3NlLWJpbiUzQTIzNDg3MzkwMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODczODgwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfc2l4X2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPkxpZ2h0bmluZzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3NpeF9icm93c2UtYmluLzIzNDg3Mzg5MDExXCIgYXJpYS1sYWJlbD1cIk1pY3JvIFVTQlwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfc2l4X2Jyb3dzZS1iaW4lM0EyMzQ4NzM4OTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzg4MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3NpeF9icm93c2UtYmluXzJcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5NaWNybyBVU0I8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9zaXhfYnJvd3NlLWJpbi8yMzQ4NzM5MTAxMVwiIGFyaWEtbGFiZWw9XCJNaW5pIFVTQlwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfc2l4X2Jyb3dzZS1iaW4lM0EyMzQ4NzM5MTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzg4MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3NpeF9icm93c2UtYmluXzNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5NaW5pIFVTQjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3NpeF9icm93c2UtYmluLzIzNDg3MzkyMDExXCIgYXJpYS1sYWJlbD1cIlVTQiBUeXBlIENcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3NpeF9icm93c2UtYmluJTNBMjM0ODczOTIwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM4ODAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9zaXhfYnJvd3NlLWJpbl80XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+VVNCIFR5cGUgQzwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkNlbGwgUGhvbmUgUmVzb2x1dGlvbjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDA5MDExXCIgYXJpYS1sYWJlbD1cIjEwODAgeCAyMTYwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MDkwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xMDgwIHggMjE2MDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4vMjM0ODc0MDEwMTFcIiBhcmlhLWxhYmVsPVwiMTA4MCB4IDIyODBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4lM0EyMzQ4NzQwMTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzk0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW5fMlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjEwODAgeCAyMjgwPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi8yMzQ4NzQyMTAxMVwiIGFyaWEtbGFiZWw9XCIxMDgwIHggMjM0MFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbiUzQTIzNDg3NDIxMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODczOTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbl8zXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MTA4MCB4IDIzNDA8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3Mzk5MDExXCIgYXJpYS1sYWJlbD1cIjEwODAgeCAyNDAwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODczOTkwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzRcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xMDgwIHggMjQwMDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4vMjM0ODc0MDIwMTFcIiBhcmlhLWxhYmVsPVwiMTI4MCB4IDcyMFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbiUzQTIzNDg3NDAyMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODczOTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbl81XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MTI4MCB4IDcyMDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4vMjM0ODc0MDAwMTFcIiBhcmlhLWxhYmVsPVwiMTQ0MCB4IDI1NjBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4lM0EyMzQ4NzQwMDAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzk0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW5fNlwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjE0NDAgeCAyNTYwPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi8yMzQ4NzQyNTAxMVwiIGFyaWEtbGFiZWw9XCIxNDQwIHggMjk2MFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbiUzQTIzNDg3NDI1MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODczOTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbl83XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MTQ0MCB4IDI5NjA8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuICAgICAgICA8bGkgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYS1yb3cgYS1leHBhbmRlci1jb250YWluZXIgYS1leHBhbmRlci1leHRlbmQtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBhcmlhLWV4cGFuZGVkPVwiZmFsc2VcIiBjbGFzcz1cImEtZXhwYW5kZXItY29udGVudCBhLWV4cGFuZGVyLWV4dGVuZC1jb250ZW50XCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cbiAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbm9uZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDEzMDExXCIgYXJpYS1sYWJlbD1cIjE0NDAgeCAzMDQwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MTMwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzhcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xNDQwIHggMzA0MDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDEyMDExXCIgYXJpYS1sYWJlbD1cIjE0NDAgeCAzMTIwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MTIwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzlcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xNDQwIHggMzEyMDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDE1MDExXCIgYXJpYS1sYWJlbD1cIjE0NDAgeCA3MjBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4lM0EyMzQ4NzQxNTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzk0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW5fMTBcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xNDQwIHggNzIwPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4vMjM0ODc0MTEwMTFcIiBhcmlhLWxhYmVsPVwiMTkyMCB4IDEwODBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4lM0EyMzQ4NzQxMTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzk0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW5fMTFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4xOTIwIHggMTA4MDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDMxMDExXCIgYXJpYS1sYWJlbD1cIjIyMjAgeCAxMDgwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MzEwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzEyXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MjIyMCB4IDEwODA8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi8yMzQ4NzQwMzAxMVwiIGFyaWEtbGFiZWw9XCIyMzQwIHggMTA4MFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbiUzQTIzNDg3NDAzMDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODczOTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbl8xM1wiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjIzNDAgeCAxMDgwPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4vMjM0ODc0MDUwMTFcIiBhcmlhLWxhYmVsPVwiMjQwIHggMzIwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MDUwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzE0XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+MjQwIHggMzIwPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4vMjM0ODc0MjMwMTFcIiBhcmlhLWxhYmVsPVwiMjU2MCB4IDE0NDBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4lM0EyMzQ4NzQyMzAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzk0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW5fMTVcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj4yNTYwIHggMTQ0MDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDA0MDExXCIgYXJpYS1sYWJlbD1cIjM4NDAgeCAyMTYwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MDQwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzE2XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+Mzg0MCB4IDIxNjA8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi8yMzQ4NzQzNTAxMVwiIGFyaWEtbGFiZWw9XCI0ODAgeCA4MDBcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW4lM0EyMzQ4NzQzNTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3Mzk0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX2VpZ2h0X2Jyb3dzZS1iaW5fMTdcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj40ODAgeCA4MDA8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbi8yMzQ4NzQzNDAxMVwiIGFyaWEtbGFiZWw9XCI3MjAgeCAxNDQwXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluJTNBMjM0ODc0MzQwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzM5NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluXzE4XCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+NzIwIHggMTQ0MDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV9laWdodF9icm93c2UtYmluLzIzNDg3NDE4MDExXCIgYXJpYS1sYWJlbD1cIjk2MCB4IDU0MFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbiUzQTIzNDg3NDE4MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MjM0ODczOTQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfZWlnaHRfYnJvd3NlLWJpbl8xOVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPjk2MCB4IDU0MDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGEgZGF0YS1jc2EtYy1mdW5jLWRlcHM9XCJhdWktZGEtYS1leHBhbmRlci10b2dnbGVcIiBkYXRhLWNzYS1jLXR5cGU9XCJ3aWRnZXRcIiBkYXRhLWNzYS1pbnRlcmFjdGlvbi1ldmVudHM9XCJjbGlja1wiIGFyaWEtbGFiZWw9XCJTZWUgbW9yZSwgQ2VsbCBQaG9uZSBSZXNvbHV0aW9uXCIgYXJpYS1leHBhbmRlZD1cImZhbHNlXCIgcm9sZT1cImJ1dHRvblwiIGhyZWY9XCJqYXZhc2NyaXB0OnZvaWQoMClcIiBkYXRhLWFjdGlvbj1cImEtZXhwYW5kZXItdG9nZ2xlXCIgY2xhc3M9XCJhLWV4cGFuZGVyLWhlYWRlciBhLWRlY2xhcmF0aXZlIGEtZXhwYW5kZXItZXh0ZW5kLWhlYWRlciBzLWV4cGFuZGVyLXRleHRcIiBkYXRhLWEtZXhwYW5kZXItdG9nZ2xlPVwieyZxdW90O2FsbG93TGlua0RlZmF1bHQmcXVvdDs6dHJ1ZSwgJnF1b3Q7ZXhwYW5kX3Byb21wdCZxdW90OzomcXVvdDtTZWUgbW9yZSZxdW90OywgJnF1b3Q7Y29sbGFwc2VfcHJvbXB0JnF1b3Q7OiZxdW90O1NlZSBMZXNzJnF1b3Q7fVwiPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1leHRlbmRlci1leHBhbmRcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWV4cGFuZGVyLXByb21wdFwiPlNlZSBtb3JlPC9zcGFuPjwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3NwYW4+PC9saT5cbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktZm91cl9icm93c2UtYmluLXRpdGxlXCIgY2xhc3M9XCJhLXNlY3Rpb24gYS1zcGFjaW5nLXNtYWxsXCI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZSBzLWJvbGQtd2VpZ2h0LXRleHRcIiBkaXI9XCJhdXRvXCI+V2F0ZXIgUmVzaXN0YW5jZSBMZXZlbDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2ZlYXR1cmVfdHdlbnR5LWZvdXJfYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktZm91cl9icm93c2UtYmluLzIzNDg0MjEyMDExXCIgYXJpYS1sYWJlbD1cIk5vdCBXYXRlciBSZXNpc3RhbnRcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3R3ZW50eS1mb3VyX2Jyb3dzZS1iaW4lM0EyMzQ4NDIxMjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTExNjM2Njc0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3R3ZW50eS1mb3VyX2Jyb3dzZS1iaW5fMVwiPlxuICAgICAgXG4gICAgPGRpdiBjbGFzcz1cImEtY2hlY2tib3ggYS1jaGVja2JveC1mYW5jeSBzLW5hdmlnYXRpb24tY2hlY2tib3ggYW9rLWZsb2F0LWxlZnRcIj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG5hbWU9XCJcIiB2YWx1ZT1cIlwiLz48aSBjbGFzcz1cImEtaWNvbiBhLWljb24tY2hlY2tib3hcIj48L2k+PHNwYW4gY2xhc3M9XCJhLWxhYmVsIGEtY2hlY2tib3gtbGFiZWxcIj48L3NwYW4+PC9sYWJlbD48L2Rpdj5cblxuICAgIDxzcGFuIGNsYXNzPVwiYS1zaXplLWJhc2UgYS1jb2xvci1iYXNlXCIgZGlyPVwiYXV0b1wiPk5vdCBXYXRlciBSZXNpc3RhbnQ8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90d2VudHktZm91cl9icm93c2UtYmluLzExNjM2Njc1MDExXCIgYXJpYS1sYWJlbD1cIldhdGVyLVJlc2lzdGFudFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdHdlbnR5LWZvdXJfYnJvd3NlLWJpbiUzQTExNjM2Njc1MDExJmFtcDtkYyZhbXA7cWlkPTE2NDE3NTk0NDkmYW1wO3JuaWQ9MTE2MzY2NzQwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2ZlYXR1cmVfdHdlbnR5LWZvdXJfYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+V2F0ZXItUmVzaXN0YW50PC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG4gICAgICAgIFxuXG5cblxuXG5cblxuPGxpIGlkPVwicF9uX2ZlYXR1cmVfdHdlbnR5LWZvdXJfYnJvd3NlLWJpbi8xMTYzNjY3NjAxMVwiIGFyaWEtbGFiZWw9XCJXYXRlcnByb29mXCIgY2xhc3M9XCJhLXNwYWNpbmctbWljcm9cIj48c3BhbiBjbGFzcz1cImEtbGlzdC1pdGVtXCI+XG4gIFxuXG5cblxuXG5cblxuXG5cblxuXG5cbiAgXG4gICAgPGEgZGF0YS1yb3V0aW5nPVwiXCIgY2xhc3M9XCJhLWxpbmstbm9ybWFsIHMtbmF2aWdhdGlvbi1pdGVtXCIgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIvcz9rPWlwaG9uZSZhbXA7cmg9biUzQTcwNzI1NjEwMTElMkNwX25fZmVhdHVyZV90d2VudHktZm91cl9icm93c2UtYmluJTNBMTE2MzY2NzYwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0xMTYzNjY3NDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90d2VudHktZm91cl9icm93c2UtYmluXzNcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5XYXRlcnByb29mPC9zcGFuPlxuXG4gICAgXG4gIFxuICAgIDwvYT5cbiAgXG4gIFxuXG5cbjwvc3Bhbj48L2xpPlxuXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICBcblxuICAgIFxuICAgIFxuPC91bD5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cblxuXG4gICAgXG4gICAgXG4gICAgICAgIDxkaXYgaWQ9XCJwX25fZmVhdHVyZV90ZW5fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkNlbGwgUGhvbmUgQ2FtZXJhIERlc2NyaXB0aW9uPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICBcbiAgICBcblxuXG5cbjx1bCBhcmlhLWxhYmVsbGVkYnk9XCJwX25fZmVhdHVyZV90ZW5fYnJvd3NlLWJpbi10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fZmVhdHVyZV90ZW5fYnJvd3NlLWJpbi8yMzQ4Nzg0MjAxMVwiIGFyaWEtbGFiZWw9XCJGcm9udFwiIGNsYXNzPVwiYS1zcGFjaW5nLW1pY3JvXCI+PHNwYW4gY2xhc3M9XCJhLWxpc3QtaXRlbVwiPlxuICBcblxuXG5cblxuXG5cblxuXG5cblxuXG4gIFxuICAgIDxhIGRhdGEtcm91dGluZz1cIlwiIGNsYXNzPVwiYS1saW5rLW5vcm1hbCBzLW5hdmlnYXRpb24taXRlbVwiIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiL3M/az1pcGhvbmUmYW1wO3JoPW4lM0E3MDcyNTYxMDExJTJDcF9uX2ZlYXR1cmVfdGVuX2Jyb3dzZS1iaW4lM0EyMzQ4Nzg0MjAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTIzNDg3ODM0MDExJmFtcDtzcHJlZml4PWlwaG9uZSUyQ2FwcyUyQzI2MiZhbXA7cmVmPXNyX25yX3Bfbl9mZWF0dXJlX3Rlbl9icm93c2UtYmluXzFcIj5cbiAgICAgIFxuICAgIDxkaXYgY2xhc3M9XCJhLWNoZWNrYm94IGEtY2hlY2tib3gtZmFuY3kgcy1uYXZpZ2F0aW9uLWNoZWNrYm94IGFvay1mbG9hdC1sZWZ0XCI+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBuYW1lPVwiXCIgdmFsdWU9XCJcIi8+PGkgY2xhc3M9XCJhLWljb24gYS1pY29uLWNoZWNrYm94XCI+PC9pPjxzcGFuIGNsYXNzPVwiYS1sYWJlbCBhLWNoZWNrYm94LWxhYmVsXCI+PC9zcGFuPjwvbGFiZWw+PC9kaXY+XG5cbiAgICA8c3BhbiBjbGFzcz1cImEtc2l6ZS1iYXNlIGEtY29sb3ItYmFzZVwiIGRpcj1cImF1dG9cIj5Gcm9udDwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuICAgICAgICBcblxuXG5cblxuXG5cbjxsaSBpZD1cInBfbl9mZWF0dXJlX3Rlbl9icm93c2UtYmluLzIzNDg3ODQzMDExXCIgYXJpYS1sYWJlbD1cIlJlYXJcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1uJTNBNzA3MjU2MTAxMSUyQ3Bfbl9mZWF0dXJlX3Rlbl9icm93c2UtYmluJTNBMjM0ODc4NDMwMTEmYW1wO2RjJmFtcDtxaWQ9MTY0MTc1OTQ0OSZhbXA7cm5pZD0yMzQ4NzgzNDAxMSZhbXA7c3ByZWZpeD1pcGhvbmUlMkNhcHMlMkMyNjImYW1wO3JlZj1zcl9ucl9wX25fZmVhdHVyZV90ZW5fYnJvd3NlLWJpbl8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+UmVhcjwvc3Bhbj5cblxuICAgIFxuICBcbiAgICA8L2E+XG4gIFxuICBcblxuXG48L3NwYW4+PC9saT5cblxuICAgIFxuXG4gICAgXG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbjwvdWw+XG5cbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuICAgIFxuICAgIFxuICAgICAgICA8ZGl2IGlkPVwicF9uX2F2YWlsYWJpbGl0eS10aXRsZVwiIGNsYXNzPVwiYS1zZWN0aW9uIGEtc3BhY2luZy1zbWFsbFwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2Ugcy1ib2xkLXdlaWdodC10ZXh0XCIgZGlyPVwiYXV0b1wiPkF2YWlsYWJpbGl0eTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgXG4gICAgXG5cblxuXG48dWwgYXJpYS1sYWJlbGxlZGJ5PVwicF9uX2F2YWlsYWJpbGl0eS10aXRsZVwiIGNsYXNzPVwiYS11bm9yZGVyZWQtbGlzdCBhLW5vc3R5bGUgYS12ZXJ0aWNhbCBhLXNwYWNpbmctbWVkaXVtXCI+XG4gICAgXG4gICAgXG5cbiAgICBcbiAgICBcbiAgICAgICAgXG5cblxuXG5cblxuXG48bGkgaWQ9XCJwX25fYXZhaWxhYmlsaXR5LzI2NjE2MDEwMTFcIiBhcmlhLWxhYmVsPVwiSW5jbHVkZSBPdXQgb2YgU3RvY2tcIiBjbGFzcz1cImEtc3BhY2luZy1taWNyb1wiPjxzcGFuIGNsYXNzPVwiYS1saXN0LWl0ZW1cIj5cbiAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuICBcbiAgICA8YSBkYXRhLXJvdXRpbmc9XCJcIiBjbGFzcz1cImEtbGluay1ub3JtYWwgcy1uYXZpZ2F0aW9uLWl0ZW1cIiB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIi9zP2s9aXBob25lJmFtcDtyaD1wX25fYXZhaWxhYmlsaXR5JTNBMjY2MTYwMTAxMSZhbXA7ZGMmYW1wO3FpZD0xNjQxNzU5NDQ5JmFtcDtybmlkPTI2NjE1OTkwMTEmYW1wO3NwcmVmaXg9aXBob25lJTJDYXBzJTJDMjYyJmFtcDtyZWY9c3JfbnJfcF9uX2F2YWlsYWJpbGl0eV8yXCI+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPVwiYS1jaGVja2JveCBhLWNoZWNrYm94LWZhbmN5IHMtbmF2aWdhdGlvbi1jaGVja2JveCBhb2stZmxvYXQtbGVmdFwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgbmFtZT1cIlwiIHZhbHVlPVwiXCIvPjxpIGNsYXNzPVwiYS1pY29uIGEtaWNvbi1jaGVja2JveFwiPjwvaT48c3BhbiBjbGFzcz1cImEtbGFiZWwgYS1jaGVja2JveC1sYWJlbFwiPjwvc3Bhbj48L2xhYmVsPjwvZGl2PlxuXG4gICAgPHNwYW4gY2xhc3M9XCJhLXNpemUtYmFzZSBhLWNvbG9yLWJhc2VcIiBkaXI9XCJhdXRvXCI+SW5jbHVkZSBPdXQgb2YgU3RvY2s8L3NwYW4+XG5cbiAgICBcbiAgXG4gICAgPC9hPlxuICBcbiAgXG5cblxuPC9zcGFuPjwvbGk+XG5cbiAgICBcblxuICAgIFxuICAgIFxuICAgIFxuXG4gICAgXG4gICAgXG48L3VsPlxuXG4gICAgXG48L2Rpdj5cblxuICAgIFxuICA8L2Rpdj5cbjwvZGl2PlxuXG48L3NwYW4+XG5cbjwvZGl2PlxuXG5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICA8c3BhbiBkYXRhLWNvbXBvbmVudC10eXBlPVwicy1za3lzY3JhcGVyLXNsb3RcIiBjbGFzcz1cInJ1c2gtY29tcG9uZW50XCI+XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcbiAgICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj48L2Rpdj5cbjwvZGl2PlxuXG5cblxuXG48c2NyaXB0PlAuZGVjbGFyZSgnc3AubG9hZC5qcycsIG51bGwpOzwvc2NyaXB0PlxuXG48c2NyaXB0PlAuZGVjbGFyZSgnc1xcLWFhcGlcXC1hamF4XFwtY29uZmlnJywge1wibWFya2V0cGxhY2VJZFwiOlwiQVRWUERLSUtYMERFUlwiLFwibWFya2V0cGxhY2VMb2NhbGVcIjpcImVuXFwtVVNcIixcImFqYXhFbmRwb2ludFwiOlwiaHR0cHM6XFwvXFwvZGF0YS5hbWF6b24uY29tXCJ9KTs8L3NjcmlwdD5cblxuPHNjcmlwdCB0eXBlPVwiYS1zdGF0ZVwiIGRhdGEtYS1zdGF0ZT1cInsmcXVvdDtrZXkmcXVvdDs6JnF1b3Q7cy11cmwtcGFyYW1ldGVycyZxdW90O31cIj57XCJoaWRkZW4ta2V5d29yZHNcIjpcIihmaWVsZC0pP2hpZGRlbi1rZXl3b3Jkcz9cIixcImxvXCI6XCJsb3xsYXlvdXRcIixcImZzdFwiOlwiZnN0XCIsXCJkbVwiOlwiZG1cIixcInBpZFwiOlwicGlkXCIsXCJsYW5ndWFnZVwiOlwibGFuZ3VhZ2VcIixcImZzXCI6XCJmc1wiLFwicWlkXCI6XCJxaWRcIixcInBfcG9zdGFsX2NvZGVcIjpcInBfcG9zdGFsX2NvZGVcIixcInN1Z2dlc3RfbG9wX3VuZG9cIjpcInN1Z2dlc3RfdW5kb1wiLFwid2lcIjpcIndpXCIsXCJyZWZcIjpcInJlZl8/XCIsXCJma2V5XCI6XCJma2V5XCIsXCJtZVwiOlwibWV8bWVyY2hhbnRcIixcImllXCI6XCJpZVwiLFwibG93LXByaWNlXCI6XCJsb3ctcHJpY2VcIixcImZza2V5XCI6XCJmc2tleVwiLFwib25jXCI6XCJvbmNcIixcInN1YnJlc291cmNlXCI6XCJzdWJyZXNvdXJjZVwiLFwiYWZcIjpcImFmXCIsXCJzdWdnZXN0X2xvcF9kaXNhYmxlZFwiOlwic3VnZ2VzdF9sb3BfZGlzYWJsZWRcIixcImlcIjpcIml8c2VhcmNoLWFsaWFzfGluZGV4XCIsXCJrXCI6XCJrfChmaWVsZC0pP2tleXdvcmRzP1wiLFwiYWRlY1wiOlwiYWRlY1wiLFwiaGlnaC1wcmljZVwiOlwiaGlnaC1wcmljZVwiLFwidXJsXCI6XCJ1cmxcIixcIm5cIjpcIm58bm9kZVwiLFwiYmJuXCI6XCJiYm5cIixcInNcIjpcInN8c29ydFwiLFwic3JzXCI6XCJzcnNcIixcInJoXCI6XCJyaFwiLFwicGFnZVwiOlwicHxwYWdlXCIsXCJkY1wiOlwiZGNcIn08L3NjcmlwdD5cblxuXG5cblxuXG48c2NyaXB0IHR5cGU9XCJhLXN0YXRlXCIgZGF0YS1hLXN0YXRlPVwieyZxdW90O2tleSZxdW90OzomcXVvdDtydXNoLWRpc3BhdGNoJnF1b3Q7fVwiPntcImNsaWVudC1zaWRlLW1ldHJpY3MtaW5mb1wiOntcInJlcXVlc3RJZFwiOlwiMVE3ME03OENDUzhBUzk5Uk1DQThcIn19PC9zY3JpcHQ+XG5cblxuXG5cblxuXG5cbjxkaXYgY2xhc3M9XCJhLXBvcG92ZXItcHJlbG9hZFwiIGlkPVwiYS1wb3BvdmVyLXMtc2FmZS1tb2RhbC1zaW5nbGV0b25cIj5cbiAgICA8ZGl2IGRhdGEtY29tcG9uZW50LXR5cGU9XCJzLXNhZmUtbW9kYWxcIiBkYXRhLWNvbXBvbmVudC1wcm9wcz1cInsmIzM0O2NvbnRlbnRVbmF2YWlsYWJsZVRleHQmIzM0OzomIzM0O1NvcnJ5LCB0aGlzIGNvbnRlbnQgaXMgbm90IGF2YWlsYWJsZS4mIzM0OywmIzM0O2ZyYW1lSWQmIzM0OzomIzM0OzZiNzllZWY0LTlkM2UtNDRiOS1iNmZjLWNlODIzYWQ4Y2ZjZiYjMzQ7LCYjMzQ7aHRtbCYjMzQ7OiYjMzQ7Jmx0OyEtLVNJTkdMRVRPTiBDT05URU5ULS0mZ3Q7JiMzNDssJiMzNDtwb3BvdmVyTmFtZSYjMzQ7OiYjMzQ7cy1zYWZlLW1vZGFsLXNpbmdsZXRvbiYjMzQ7fVwiIGNsYXNzPVwicnVzaC1jb21wb25lbnRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImEtc2VjdGlvbiBhLXRleHQtY2VudGVyIHMtc2FmZS1tb2RhbC1zcGlubmVyIGFvay1oaWRkZW5cIj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYS1zcGlubmVyIGEtc3Bpbm5lci1tZWRpdW1cIj48L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicy1zYWZlLW1vZGFsLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJhbXpuLXNhZmUtZnJhbWUtY29udGFpbmVyXCI+XG4gICAgICAgICAgICA8c2NyaXB0PiB3aW5kb3cudWV0ICYmIHVldCgnYmInLCAnc2VhcmNoU2FmZUZyYW1lOm1vZGFsOnMtc2FmZS1tb2RhbC1zaW5nbGV0b24nLCB7d2I6IDF9KTsgPC9zY3JpcHQ+XG5cbiAgICA8ZGl2IGNsYXNzPVwiYW16bi1zYWZlLWZyYW1lLXNpemluZ1wiXG4gICAgICAgICAgICAgICAgc3R5bGU9XCJ3aWR0aDogNTAwcHg7XCJcbiAgICA+XG4gICAgICAgIDxpZnJhbWVcbiAgICAgICAgICAgICAgICBzcmNkb2M9XCJcIlxuICAgICAgICAgICAgICAgIGRhdGEtc3JjZG9jPVwiJmx0OyFET0NUWVBFIGh0bWwmZ3Q7XG4mbHQ7aHRtbFxuICAgICAgICBsYW5nPSZxdW90O2VuLXVzJnF1b3Q7XG4mZ3Q7XG4mbHQ7aGVhZCZndDtcbiAgICAmbHQ7bWV0YSBjaGFyc2V0PSZxdW90O1VURi04JnF1b3Q7Jmd0O1xuICAgICAgICAmbHQ7c2NyaXB0Jmd0O3dpbmRvdy5zYWZlRnJhbWVJZCA9ICZxdW90OzZiNzllZWY0LTlkM2UtNDRiOS1iNmZjLWNlODIzYWQ4Y2ZjZiZxdW90OzsmbHQ7L3NjcmlwdCZndDtcbiAgICAmbHQ7bGluayByZWw9JnF1b3Q7c3R5bGVzaGVldCZxdW90OyBocmVmPSZxdW90O2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8xMUVJUTVJR3FhTC5fUkN8MDFaVEhUWk9ibkwuY3NzLDQxd1preVRhV29MLmNzcywzMVk4bTFkelRkTC5jc3MsMDEzejMzdUtoMkwuY3NzLDAxN0RzS2pOUUpMLmNzcywwMTMxdnF3UDVVTC5jc3MsNDFFV09PbEJKOUwuY3NzLDExVEl1eVNxcjZMLmNzcywwMUVsblBpRHhXTC5jc3MsMTFiR1NnRDVwREwuY3NzLDAxRG01ZUtWeHdMLmNzcywwMUlkS2NCdUFkTC5jc3MsMDF5LVhBbEkrMkwuY3NzLDIxTjRrVUg3cHhMLmNzcywwMW9EUjNJVUxOTC5jc3MsNDFDWU5HcEdsckwuY3NzLDAxWFBISms2MC1MLmNzcywxMTR5MFNJUCt5TC5jc3MsMjFhUGhGeStyaUwuY3NzLDExZ25lQTNNdEpMLmNzcywyMWZlY0c4cFV6TC5jc3MsMDF1bEd6Qlc4OEwuY3NzLDAxQ0ZVZ3NBLVlMLmNzcywzMUM4MElpWGFsTC5jc3MsMTFxb3VyM05EMEwuY3NzLDExZ0tDQ0tRVitMLmNzcywxMTA2MUh4bkV2TC5jc3MsMTFvSHQySFl4bkwuY3NzLDAxM1JEaHc5aG9MLmNzcywxMUpRdG5MLTZlTC5jc3MsMTE2djZ1WXZONkwuY3NzLDExanRYUm1wcHdMLmNzcywwMVFyV3VSclotTC5jc3MsMjF6dVJ6dEtqdEwuY3NzLDExUXlxRzh5aXFMLmNzcywxMUsyNGVPSmc0TC5jc3MsMTFGMitPQnpMeUwuY3NzLDAxODkwK1Z3azhMLmNzcywxMVkwNURURUw2TC5jc3MsMDFjYlMzVUsxMUwuY3NzLDIxRjg1YW0weUZMLmNzcywwMWdpTUVQK2RqTC5jc3NfLmNzcz9BVUlDbGllbnRzL0FtYXpvblVJI3VzLm5vdC10cmlkZW50JnF1b3Q7IC8mZ3Q7XG4mbHQ7c2NyaXB0Jmd0O1xuKGZ1bmN0aW9uKGYsaCxRLEUpe2Z1bmN0aW9uIEYoYSl7dSZhbXA7JmFtcDt1LnRhZyZhbXA7JmFtcDt1LnRhZyhxKCZxdW90OzomcXVvdDssJnF1b3Q7YXVpJnF1b3Q7LGEpKX1mdW5jdGlvbiB2KGEsYil7dSZhbXA7JmFtcDt1LmNvdW50JmFtcDsmYW1wO3UuY291bnQoJnF1b3Q7YXVpOiZxdW90OythLDA9PT1iPzA6Ynx8KHUuY291bnQoJnF1b3Q7YXVpOiZxdW90OythKXx8MCkrMSl9ZnVuY3Rpb24gbShhKXt0cnl7cmV0dXJuIGEudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KX1jYXRjaChiKXtyZXR1cm4hMX19ZnVuY3Rpb24geChhLGIsYyl7YS5hZGRFdmVudExpc3RlbmVyP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpOmEuYXR0YWNoRXZlbnQmYW1wOyZhbXA7YS5hdHRhY2hFdmVudCgmcXVvdDtvbiZxdW90OytiLGMpfWZ1bmN0aW9uIHEoYSxiLGMsZSl7Yj1iJmFtcDsmYW1wO2M/YithK2M6Ynx8YztyZXR1cm4gZT9xKGEsYixlKTpifWZ1bmN0aW9uIEcoYSxiLGMpe3RyeXtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHt2YWx1ZTpjLHdyaXRhYmxlOiExfSl9Y2F0Y2goZSl7YVtiXT1jfXJldHVybiBjfWZ1bmN0aW9uIHVhKGEsYixjKXt2YXIgZT1cbmM9YS5sZW5ndGgsZz1mdW5jdGlvbigpe2UtLXx8KFIucHVzaChiKSxTfHwoc2V0VGltZW91dChjYSwwKSxTPSEwKSl9O2ZvcihnKCk7Yy0tOylkYVthW2NdXT9nKCk6KHpbYVtjXV09elthW2NdXXx8W10pLnB1c2goZyl9ZnVuY3Rpb24gdmEoYSxiLGMsZSxnKXt2YXIgZD1oLmNyZWF0ZUVsZW1lbnQoYT8mcXVvdDtzY3JpcHQmcXVvdDs6JnF1b3Q7bGluayZxdW90Oyk7eChkLCZxdW90O2Vycm9yJnF1b3Q7LGUpO2cmYW1wOyZhbXA7eChkLCZxdW90O2xvYWQmcXVvdDssZyk7YT8oZC50eXBlPSZxdW90O3RleHQvamF2YXNjcmlwdCZxdW90OyxkLmFzeW5jPSEwLGMmYW1wOyZhbXA7L0FVSUNsaWVudHN8aW1hZ2VzWy9dSS8udGVzdChiKSZhbXA7JmFtcDtkLnNldEF0dHJpYnV0ZSgmcXVvdDtjcm9zc29yaWdpbiZxdW90OywmcXVvdDthbm9ueW1vdXMmcXVvdDspLGQuc3JjPWIpOihkLnJlbD0mcXVvdDtzdHlsZXNoZWV0JnF1b3Q7LGQuaHJlZj1iKTtoLmdldEVsZW1lbnRzQnlUYWdOYW1lKCZxdW90O2hlYWQmcXVvdDspWzBdLmFwcGVuZENoaWxkKGQpfWZ1bmN0aW9uIGVhKGEsYil7cmV0dXJuIGZ1bmN0aW9uKGMsZSl7ZnVuY3Rpb24gZygpe3ZhKGIsYyxkLGZ1bmN0aW9uKGIpe1Q/digmcXVvdDtyZXNvdXJjZV91bmxvYWQmcXVvdDspOlxuZD8oZD0hMSx2KCZxdW90O3Jlc291cmNlX3JldHJ5JnF1b3Q7KSxnKCkpOih2KCZxdW90O3Jlc291cmNlX2Vycm9yJnF1b3Q7KSxhLmxvZygmcXVvdDtBc3NldCBmYWlsZWQgdG8gbG9hZDogJnF1b3Q7K2MpKTtiJmFtcDsmYW1wO2Iuc3RvcFByb3BhZ2F0aW9uP2Iuc3RvcFByb3BhZ2F0aW9uKCk6Zi5ldmVudCZhbXA7JmFtcDsoZi5ldmVudC5jYW5jZWxCdWJibGU9ITApfSxlKX1pZihmYVtjXSlyZXR1cm4hMTtmYVtjXT0hMDt2KCZxdW90O3Jlc291cmNlX2NvdW50JnF1b3Q7KTt2YXIgZD0hMDtyZXR1cm4hZygpfX1mdW5jdGlvbiB3YShhLGIsYyl7Zm9yKHZhciBlPXtuYW1lOmEsZ3VhcmQ6ZnVuY3Rpb24oYyl7cmV0dXJuIGIuZ3VhcmRGYXRhbChhLGMpfSxndWFyZFRpbWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGIuZ3VhcmRUaW1lKGEpfSxsb2dFcnJvcjpmdW5jdGlvbihjLGQsZSl7Yi5sb2dFcnJvcihjLGQsZSxhKX19LGc9W10sZD0wO2QmbHQ7Yy5sZW5ndGg7ZCsrKUguaGFzT3duUHJvcGVydHkoY1tkXSkmYW1wOyZhbXA7KGdbZF09VS5oYXNPd25Qcm9wZXJ0eShjW2RdKT9VW2NbZF1dKEhbY1tkXV0sXG5lKTpIW2NbZF1dKTtyZXR1cm4gZ31mdW5jdGlvbiBBKGEsYixjLGUsZyl7cmV0dXJuIGZ1bmN0aW9uKGQsaCl7ZnVuY3Rpb24gbigpe3ZhciBhPW51bGw7ZT9hPWg6JnF1b3Q7ZnVuY3Rpb24mcXVvdDs9PT10eXBlb2YgaCZhbXA7JmFtcDsocC5zdGFydD13KCksYT1oLmFwcGx5KGYsd2EoZCxrLGwpKSxwLmVuZD13KCkpO2lmKGIpe0hbZF09YTthPWQ7Zm9yKGRhW2FdPSEwOyh6W2FdfHxbXSkubGVuZ3RoOyl6W2FdLnNoaWZ0KCkoKTtkZWxldGUgelthXX1wLmRvbmU9ITB9dmFyIGs9Z3x8dGhpczsmcXVvdDtmdW5jdGlvbiZxdW90Oz09PXR5cGVvZiBkJmFtcDsmYW1wOyhoPWQsZD1FKTtiJmFtcDsmYW1wOyhkPWQ/ZC5yZXBsYWNlKGhhLCZxdW90OyZxdW90Oyk6JnF1b3Q7X19OT05BTUVfXyZxdW90OyxWLmhhc093blByb3BlcnR5KGQpJmFtcDsmYW1wO2suZXJyb3IocSgmcXVvdDssIHJlcmVnaXN0ZXJlZCBieSAmcXVvdDsscSgmcXVvdDsgYnkgJnF1b3Q7LGQrJnF1b3Q7IGFscmVhZHkgcmVnaXN0ZXJlZCZxdW90OyxWW2RdKSxrLmF0dHJpYnV0aW9uKSxkKSxWW2RdPWsuYXR0cmlidXRpb24pO2Zvcih2YXIgbD1bXSxtPTA7bSZsdDthLmxlbmd0aDttKyspbFttXT1cbmFbbV0ucmVwbGFjZShoYSwmcXVvdDsmcXVvdDspO3ZhciBwPUJbZHx8JnF1b3Q7YW5vbiZxdW90OysgKyt4YV09e2RlcGVuZDpsLHJlZ2lzdGVyZWQ6dygpLG5hbWVzcGFjZTprLm5hbWVzcGFjZX07ZCZhbXA7JmFtcDt5YS5oYXNPd25Qcm9wZXJ0eShkKTtjP24oKTp1YShsLGsuZ3VhcmRGYXRhbChkLG4pLGQpO3JldHVybntkZWNvcmF0ZTpmdW5jdGlvbihhKXtVW2RdPWsuZ3VhcmRGYXRhbChkLGEpfX19fWZ1bmN0aW9uIGlhKGEpe3JldHVybiBmdW5jdGlvbigpe3ZhciBiPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJue2V4ZWN1dGU6QShiLCExLGEsITEsdGhpcykscmVnaXN0ZXI6QShiLCEwLGEsITEsdGhpcyl9fX1mdW5jdGlvbiBXKGEsYil7cmV0dXJuIGZ1bmN0aW9uKGMsZSl7ZXx8KGU9YyxjPUUpO3ZhciBnPXRoaXMuYXR0cmlidXRpb247cmV0dXJuIGZ1bmN0aW9uKCl7dC5wdXNoKGJ8fHthdHRyaWJ1dGlvbjpnLG5hbWU6Yyxsb2dMZXZlbDphfSk7dmFyIGQ9ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7XG50LnBvcCgpO3JldHVybiBkfX19ZnVuY3Rpb24gSShhLGIpe3RoaXMubG9hZD17anM6ZWEodGhpcywhMCksY3NzOmVhKHRoaXMpfTtHKHRoaXMsJnF1b3Q7bmFtZXNwYWNlJnF1b3Q7LGIpO0codGhpcywmcXVvdDthdHRyaWJ1dGlvbiZxdW90OyxhKX1mdW5jdGlvbiBqYSgpe2guYm9keT9yLnRyaWdnZXIoJnF1b3Q7YS1ib2R5QmVnaW4mcXVvdDspOnNldFRpbWVvdXQoamEsMjApfWZ1bmN0aW9uIEMoYSxiKXthLmNsYXNzTmFtZT1YKGEsYikrJnF1b3Q7ICZxdW90OytifWZ1bmN0aW9uIFgoYSxiKXtyZXR1cm4oJnF1b3Q7ICZxdW90OythLmNsYXNzTmFtZSsmcXVvdDsgJnF1b3Q7KS5zcGxpdCgmcXVvdDsgJnF1b3Q7K2IrJnF1b3Q7ICZxdW90Oykuam9pbigmcXVvdDsgJnF1b3Q7KS5yZXBsYWNlKC9eIHwgJC9nLCZxdW90OyZxdW90Oyl9ZnVuY3Rpb24ga2EoYSl7dHJ5e3JldHVybiBhKCl9Y2F0Y2goYil7cmV0dXJuITF9fWZ1bmN0aW9uIEooKXtpZihLKXt2YXIgYT17dzpmLmlubmVyV2lkdGh8fG4uY2xpZW50V2lkdGgsaDpmLmlubmVySGVpZ2h0fHxuLmNsaWVudEhlaWdodH07NSZsdDtNYXRoLmFicyhhLnctWS53KXx8NTAmbHQ7YS5oLVkuaD8oWT1hLEw9NCwoYT1rLm1vYmlsZXx8XG5rLnRhYmxldD80NTAmbHQ7YS53JmFtcDsmYW1wO2EudyZndDthLmg6MTI1MCZsdDs9YS53KT9DKG4sJnF1b3Q7YS13cyZxdW90Oyk6bi5jbGFzc05hbWU9WChuLCZxdW90O2Etd3MmcXVvdDspKTowJmx0O0wmYW1wOyZhbXA7KEwtLSxsYT1zZXRUaW1lb3V0KEosMTYpKX19ZnVuY3Rpb24gemEoYSl7KEs9YT09PUU/IUs6ISFhKSZhbXA7JmFtcDtKKCl9ZnVuY3Rpb24gQWEoKXtyZXR1cm4gS31mdW5jdGlvbiBtYSgpe0QuZm9yRWFjaChmdW5jdGlvbihhKXtGKGEpfSl9ZnVuY3Rpb24gbmEoYSxiLGMpe2lmKGIpe2E9bSgvQ2hyb21lL2kpJmFtcDsmYW1wOyFtKC9FZGdlL2kpJmFtcDsmYW1wOyFtKC9PUFIvaSkmYW1wOyZhbXA7IWEuY2FwYWJpbGl0aWVzLmlzQW1hem9uQXBwJmFtcDsmYW1wOyFtKG5ldyBSZWdFeHAoWismcXVvdDtid3YmcXVvdDsrWismcXVvdDtiJnF1b3Q7KSk7dmFyIGU9JnF1b3Q7c3c6YnJvd3NlcjomcXVvdDsrYysmcXVvdDs6JnF1b3Q7O2IuYnJvd3NlciZhbXA7JmFtcDthJmFtcDsmYW1wOyhELnB1c2goZSsmcXVvdDtzdXBwb3J0ZWQmcXVvdDspLGIuYnJvd3Nlci5hY3Rpb24oZSxjKSk7IWEmYW1wOyZhbXA7Yi5icm93c2VyJmFtcDsmYW1wO0QucHVzaChlKyZxdW90O3Vuc3VwcG9ydGVkJnF1b3Q7KX19JnF1b3Q7dXNlIHN0cmljdCZxdW90Ozt2YXIgTT1RLm5vdz1RLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IFF9LFxudz1mdW5jdGlvbihhKXtyZXR1cm4gYSZhbXA7JmFtcDthLm5vdz9hLm5vdy5iaW5kKGEpOk19KGYucGVyZm9ybWFuY2UpLE49dygpLHlhPXt9LHA9Zi5BbWF6b25VSVBhZ2VKU3x8Zi5QO2lmKHAmYW1wOyZhbXA7cC53aGVuJmFtcDsmYW1wO3AucmVnaXN0ZXIpe049W107Zm9yKHZhciBsPWguY3VycmVudFNjcmlwdDtsO2w9bC5wYXJlbnRFbGVtZW50KWwuaWQmYW1wOyZhbXA7Ti5wdXNoKGwuaWQpO3JldHVybiBwLmxvZygmcXVvdDtBIGNvcHkgb2YgUCBoYXMgYWxyZWFkeSBiZWVuIGxvYWRlZCBvbiB0aGlzIHBhZ2UuJnF1b3Q7LCZxdW90O0ZBVEFMJnF1b3Q7LE4uam9pbigmcXVvdDsgJnF1b3Q7KSl9dmFyIHU9Zi51ZTtGKCk7RigmcXVvdDthdWlfYnVpbGRfZGF0ZTozLjIxLjktMjAyMS0xMi0zMCZxdW90Oyk7dmFyIFI9W10sQmE9W10sUz0hMTt2YXIgY2E9ZnVuY3Rpb24oKXtmb3IodmFyIGE9c2V0VGltZW91dChjYSwwKSxiPU0oKTtCYS5sZW5ndGh8fFIubGVuZ3RoOylpZihSLnNoaWZ0KCkoKSw1MCZsdDtNKCktYilyZXR1cm47Y2xlYXJUaW1lb3V0KGEpO1M9ITF9O3ZhciBkYT17fSx6PXt9LGZhPXt9LFQ9XG4hMTt4KGYsJnF1b3Q7YmVmb3JldW5sb2FkJnF1b3Q7LGZ1bmN0aW9uKCl7VD0hMDtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7VD0hMX0sMUU0KX0pO3ZhciBoYT0vXnBydjovLFY9e30sSD17fSxVPXt9LEI9e30seGE9MCxaPVN0cmluZy5mcm9tQ2hhckNvZGUoOTIpLHQ9W10sb2E9ITAscGE9Zi5vbmVycm9yO2Yub25lcnJvcj1mdW5jdGlvbihhLGIsYyxlLGcpe2cmYW1wOyZhbXA7JnF1b3Q7b2JqZWN0JnF1b3Q7PT09dHlwZW9mIGd8fChnPUVycm9yKGEsYixjKSxnLmNvbHVtbk51bWJlcj1lLGcuc3RhY2s9Ynx8Y3x8ZT9xKFosZy5tZXNzYWdlLCZxdW90O2F0ICZxdW90OytxKCZxdW90OzomcXVvdDssYixjLGUpKTpFKTt2YXIgZD10LnBvcCgpfHx7fTtnLmF0dHJpYnV0aW9uPXEoJnF1b3Q7OiZxdW90OyxnLmF0dHJpYnV0aW9ufHxkLmF0dHJpYnV0aW9uLGQubmFtZSk7Zy5sb2dMZXZlbD1kLmxvZ0xldmVsO2cuYXR0cmlidXRpb24mYW1wOyZhbXA7Y29uc29sZSZhbXA7JmFtcDtjb25zb2xlLmxvZyZhbXA7JmFtcDtjb25zb2xlLmxvZyhbZy5sb2dMZXZlbHx8JnF1b3Q7RVJST1ImcXVvdDssYSwmcXVvdDt0aHJvd24gYnkmcXVvdDssZy5hdHRyaWJ1dGlvbl0uam9pbigmcXVvdDsgJnF1b3Q7KSk7XG50PVtdO3BhJmFtcDsmYW1wOyhkPVtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxkWzRdPWcscGEuYXBwbHkoZixkKSl9O0kucHJvdG90eXBlPXtsb2dFcnJvcjpmdW5jdGlvbihhLGIsYyxlKXtiPXttZXNzYWdlOmIsbG9nTGV2ZWw6Y3x8JnF1b3Q7RVJST1ImcXVvdDssYXR0cmlidXRpb246cSgmcXVvdDs6JnF1b3Q7LHRoaXMuYXR0cmlidXRpb24sZSl9O2lmKGYudWVMb2dFcnJvcilyZXR1cm4gZi51ZUxvZ0Vycm9yKGF8fGIsYT9iOm51bGwpLCEwO2NvbnNvbGUmYW1wOyZhbXA7Y29uc29sZS5lcnJvciZhbXA7JmFtcDsoY29uc29sZS5sb2coYiksY29uc29sZS5lcnJvcihhKSk7cmV0dXJuITF9LGVycm9yOmZ1bmN0aW9uKGEsYixjLGUpe2E9RXJyb3IocSgmcXVvdDs6JnF1b3Q7LGUsYSxjKSk7YS5hdHRyaWJ1dGlvbj1xKCZxdW90OzomcXVvdDssdGhpcy5hdHRyaWJ1dGlvbixiKTt0aHJvdyBhO30sZ3VhcmRFcnJvcjpXKCksZ3VhcmRGYXRhbDpXKCZxdW90O0ZBVEFMJnF1b3Q7KSxndWFyZEN1cnJlbnQ6ZnVuY3Rpb24oYSl7dmFyIGI9dFt0Lmxlbmd0aC0xXTtyZXR1cm4gYj9XKGIubG9nTGV2ZWwsYikuY2FsbCh0aGlzLFxuYSk6YX0sZ3VhcmRUaW1lOmZ1bmN0aW9uKGEpe3ZhciBiPXRbdC5sZW5ndGgtMV0sYz1iJmFtcDsmYW1wO2IubmFtZTtyZXR1cm4gYyZhbXA7JmFtcDtjIGluIEI/ZnVuY3Rpb24oKXt2YXIgYj13KCksZz1hLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtCW2NdLmFzeW5jPShCW2NdLmFzeW5jfHwwKSt3KCktYjtyZXR1cm4gZ306YX0sbG9nOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5sb2dFcnJvcihudWxsLGEsYixjKX0sZGVjbGFyZTpBKFtdLCEwLCEwLCEwKSxyZWdpc3RlcjpBKFtdLCEwKSxleGVjdXRlOkEoW10pLEFVSV9CVUlMRF9EQVRFOiZxdW90OzMuMjEuOS0yMDIxLTEyLTMwJnF1b3Q7LHdoZW46aWEoKSxub3c6aWEoITApLHRyaWdnZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBlPU0oKTt0aGlzLmRlY2xhcmUoYSx7ZGF0YTpiLHBhZ2VFbGFwc2VkVGltZTplLShmLmFQYWdlU3RhcnR8fE5hTiksdHJpZ2dlclRpbWU6ZX0pO2MmYW1wOyZhbXA7Yy5pbnN0cnVtZW50JmFtcDsmYW1wO08ud2hlbigmcXVvdDtwcnY6YS1sb2dUcmlnZ2VyJnF1b3Q7KS5leGVjdXRlKGZ1bmN0aW9uKGIpe2IoYSl9KX0sXG5oYW5kbGVUcmlnZ2VyczpmdW5jdGlvbigpe3RoaXMubG9nKCZxdW90O2hhbmRsZVRyaWdnZXJzIGRlcHJlY2F0ZWQmcXVvdDspfSxhdHRyaWJ1dGVFcnJvcnM6ZnVuY3Rpb24oYSl7cmV0dXJuIG5ldyBJKGEpfSxfbmFtZXNwYWNlOmZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBJKGEsYil9LHNldFByaW9yaXR5OmZ1bmN0aW9uKGEpe29hP29hPSExOnRoaXMubG9nKCZxdW90O3NldFByaW9yaXR5IG9ubHkgYWNjZXB0IHRoZSBmaXJzdCBjYWxsLiZxdW90Oyl9fTt2YXIgcj1HKGYsJnF1b3Q7QW1hem9uVUlQYWdlSlMmcXVvdDssbmV3IEkpO3ZhciBPPXIuX25hbWVzcGFjZSgmcXVvdDtQYWdlSlMmcXVvdDssJnF1b3Q7QW1hem9uVUkmcXVvdDspO08uZGVjbGFyZSgmcXVvdDtwcnY6cC1kZWJ1ZyZxdW90OyxCKTtyLmRlY2xhcmUoJnF1b3Q7cC1yZWNvcmRlci1ldmVudHMmcXVvdDssW10pO3IuZGVjbGFyZSgmcXVvdDtwLXJlY29yZGVyLXN0b3AmcXVvdDssZnVuY3Rpb24oKXt9KTtHKGYsJnF1b3Q7UCZxdW90OyxyKTtqYSgpO2lmKGguYWRkRXZlbnRMaXN0ZW5lcil7dmFyIHFhO2guYWRkRXZlbnRMaXN0ZW5lcigmcXVvdDtET01Db250ZW50TG9hZGVkJnF1b3Q7LFxucWE9ZnVuY3Rpb24oKXtyLnRyaWdnZXIoJnF1b3Q7YS1kb21yZWFkeSZxdW90Oyk7aC5yZW1vdmVFdmVudExpc3RlbmVyKCZxdW90O0RPTUNvbnRlbnRMb2FkZWQmcXVvdDsscWEsITEpfSwhMSl9dmFyIG49aC5kb2N1bWVudEVsZW1lbnQsYWE9ZnVuY3Rpb24oKXt2YXIgYT1bJnF1b3Q7TyZxdW90OywmcXVvdDttcyZxdW90OywmcXVvdDtNb3omcXVvdDssJnF1b3Q7V2Via2l0JnF1b3Q7XSxiPWguY3JlYXRlRWxlbWVudCgmcXVvdDtkaXYmcXVvdDspO3JldHVybnt0ZXN0R3JhZGllbnRzOmZ1bmN0aW9uKCl7cmV0dXJuITB9LHRlc3Q6ZnVuY3Rpb24oYyl7dmFyIGU9Yy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStjLnN1YnN0cigxKTtjPShhLmpvaW4oZSsmcXVvdDsgJnF1b3Q7KStlKyZxdW90OyAmcXVvdDsrYykuc3BsaXQoJnF1b3Q7ICZxdW90Oyk7Zm9yKGU9Yy5sZW5ndGg7ZS0tOylpZigmcXVvdDsmcXVvdDs9PT1iLnN0eWxlW2NbZV1dKXJldHVybiEwO3JldHVybiExfSx0ZXN0VHJhbnNmb3JtM2Q6ZnVuY3Rpb24oKXtyZXR1cm4hMH19fSgpO3A9bi5jbGFzc05hbWU7dmFyIHJhPS8oXnwgKWEtbW9iaWxlKCB8JCkvLnRlc3QocCksc2E9LyhefCApYS10YWJsZXQoIHwkKS8udGVzdChwKSxcbms9e2F1ZGlvOmZ1bmN0aW9uKCl7cmV0dXJuISFoLmNyZWF0ZUVsZW1lbnQoJnF1b3Q7YXVkaW8mcXVvdDspLmNhblBsYXlUeXBlfSx2aWRlbzpmdW5jdGlvbigpe3JldHVybiEhaC5jcmVhdGVFbGVtZW50KCZxdW90O3ZpZGVvJnF1b3Q7KS5jYW5QbGF5VHlwZX0sY2FudmFzOmZ1bmN0aW9uKCl7cmV0dXJuISFoLmNyZWF0ZUVsZW1lbnQoJnF1b3Q7Y2FudmFzJnF1b3Q7KS5nZXRDb250ZXh0fSxzdmc6ZnVuY3Rpb24oKXtyZXR1cm4hIWguY3JlYXRlRWxlbWVudE5TJmFtcDsmYW1wOyEhaC5jcmVhdGVFbGVtZW50TlMoJnF1b3Q7aHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcmcXVvdDssJnF1b3Q7c3ZnJnF1b3Q7KS5jcmVhdGVTVkdSZWN0fSxvZmZsaW5lOmZ1bmN0aW9uKCl7cmV0dXJuIG5hdmlnYXRvci5oYXNPd25Qcm9wZXJ0eSZhbXA7JmFtcDtuYXZpZ2F0b3IuaGFzT3duUHJvcGVydHkoJnF1b3Q7b25MaW5lJnF1b3Q7KSZhbXA7JmFtcDtuYXZpZ2F0b3Iub25MaW5lfSxkcmFnRHJvcDpmdW5jdGlvbigpe3JldHVybiZxdW90O2RyYWdnYWJsZSZxdW90O2luIGguY3JlYXRlRWxlbWVudCgmcXVvdDtzcGFuJnF1b3Q7KX0sZ2VvbG9jYXRpb246ZnVuY3Rpb24oKXtyZXR1cm4hIW5hdmlnYXRvci5nZW9sb2NhdGlvbn0sXG5oaXN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuISghZi5oaXN0b3J5fHwhZi5oaXN0b3J5LnB1c2hTdGF0ZSl9LHdlYndvcmtlcjpmdW5jdGlvbigpe3JldHVybiEhZi5Xb3JrZXJ9LGF1dG9mb2N1czpmdW5jdGlvbigpe3JldHVybiZxdW90O2F1dG9mb2N1cyZxdW90O2luIGguY3JlYXRlRWxlbWVudCgmcXVvdDtpbnB1dCZxdW90Oyl9LGlucHV0UGxhY2Vob2xkZXI6ZnVuY3Rpb24oKXtyZXR1cm4mcXVvdDtwbGFjZWhvbGRlciZxdW90O2luIGguY3JlYXRlRWxlbWVudCgmcXVvdDtpbnB1dCZxdW90Oyl9LHRleHRhcmVhUGxhY2Vob2xkZXI6ZnVuY3Rpb24oKXtyZXR1cm4mcXVvdDtwbGFjZWhvbGRlciZxdW90O2luIGguY3JlYXRlRWxlbWVudCgmcXVvdDt0ZXh0YXJlYSZxdW90Oyl9LGxvY2FsU3RvcmFnZTpmdW5jdGlvbigpe3JldHVybiZxdW90O2xvY2FsU3RvcmFnZSZxdW90O2luIGYmYW1wOyZhbXA7bnVsbCE9PWYubG9jYWxTdG9yYWdlfSxvcmllbnRhdGlvbjpmdW5jdGlvbigpe3JldHVybiZxdW90O29yaWVudGF0aW9uJnF1b3Q7aW4gZn0sdG91Y2g6ZnVuY3Rpb24oKXtyZXR1cm4mcXVvdDtvbnRvdWNoZW5kJnF1b3Q7aW4gaH0sZ3JhZGllbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGFhLnRlc3RHcmFkaWVudHMoKX0sXG5oaXJlczpmdW5jdGlvbigpe3ZhciBhPWYuZGV2aWNlUGl4ZWxSYXRpbyZhbXA7JmFtcDsxLjUmbHQ7PWYuZGV2aWNlUGl4ZWxSYXRpb3x8Zi5tYXRjaE1lZGlhJmFtcDsmYW1wO2YubWF0Y2hNZWRpYSgmcXVvdDsobWluLXJlc29sdXRpb246MTQ0ZHBpKSZxdW90OykubWF0Y2hlczt2KCZxdW90O2hpUmVzJnF1b3Q7KyhyYT8mcXVvdDtNb2JpbGUmcXVvdDs6c2E/JnF1b3Q7VGFibGV0JnF1b3Q7OiZxdW90O0Rlc2t0b3AmcXVvdDspLGE/MTowKTtyZXR1cm4gYX0sdHJhbnNmb3JtM2Q6ZnVuY3Rpb24oKXtyZXR1cm4gYWEudGVzdFRyYW5zZm9ybTNkKCl9LHRvdWNoU2Nyb2xsaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIG0oL1dpbmRvd3Nob3B8YW5kcm9pZHxPUyAoWzUtOV18WzEtOV1bMC05XSspKF9bMC05XXsxLDJ9KSsgbGlrZSBNYWMgT1MgWHxTT0ZUV0FSRT0oWzUtOV18WzEtOV1bMC05XSspKC5bMC05XXsxLDJ9KSsuKkRFVklDRT1pUGhvbmV8Q2hyb21lfFNpbGt8RmlyZWZveHxUcmlkZW50Lis/OyBUb3VjaC9pKX0saW9zOmZ1bmN0aW9uKCl7cmV0dXJuIG0oL09TIFsxLTldWzAtOV0qKF9bMC05XSopKyBsaWtlIE1hYyBPUyBYL2kpJmFtcDsmYW1wO1xuIW0oL3RyaWRlbnR8RWRnZS9pKX0sYW5kcm9pZDpmdW5jdGlvbigpe3JldHVybiBtKC9hbmRyb2lkLihbMS05XXxbTC1aXSkvaSkmYW1wOyZhbXA7IW0oL3RyaWRlbnR8RWRnZS9pKX0sbW9iaWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHJhfSx0YWJsZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gc2F9LHJ0bDpmdW5jdGlvbigpe3JldHVybiZxdW90O3J0bCZxdW90Oz09PW4uZGlyfX07Zm9yKGwgaW4gaylrLmhhc093blByb3BlcnR5KGwpJmFtcDsmYW1wOyhrW2xdPWthKGtbbF0pKTtmb3IodmFyIGJhPSZxdW90O3RleHRTaGFkb3cgdGV4dFN0cm9rZSBib3hTaGFkb3cgYm9yZGVyUmFkaXVzIGJvcmRlckltYWdlIG9wYWNpdHkgdHJhbnNmb3JtIHRyYW5zaXRpb24mcXVvdDsuc3BsaXQoJnF1b3Q7ICZxdW90OyksUD0wO1AmbHQ7YmEubGVuZ3RoO1ArKylrW2JhW1BdXT1rYShmdW5jdGlvbigpe3JldHVybiBhYS50ZXN0KGJhW1BdKX0pO3ZhciBLPSEwLGxhPTAsWT17dzowLGg6MH0sTD00O0ooKTt4KGYsJnF1b3Q7cmVzaXplJnF1b3Q7LGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KGxhKTtMPTQ7SigpfSk7XG52YXIgdGE9e2dldEl0ZW06ZnVuY3Rpb24oYSl7dHJ5e3JldHVybiBmLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGEpfWNhdGNoKGIpe319LHNldEl0ZW06ZnVuY3Rpb24oYSxiKXt0cnl7cmV0dXJuIGYubG9jYWxTdG9yYWdlLnNldEl0ZW0oYSxiKX1jYXRjaChjKXt9fX07bi5jbGFzc05hbWU9WChuLCZxdW90O2Etbm8tanMmcXVvdDspO0MobiwmcXVvdDthLWpzJnF1b3Q7KTshbSgvT1MgWzEtOF0oX1swLTldKikrIGxpa2UgTWFjIE9TIFgvaSl8fGYubmF2aWdhdG9yLnN0YW5kYWxvbmV8fG0oL3NhZmFyaS9pKXx8QyhuLCZxdW90O2EtZW1iZXImcXVvdDspO3A9W107Zm9yKGwgaW4gaylrLmhhc093blByb3BlcnR5KGwpJmFtcDsmYW1wO2tbbF0mYW1wOyZhbXA7cC5wdXNoKCZxdW90O2EtJnF1b3Q7K2wucmVwbGFjZSgvKFtBLVpdKS9nLGZ1bmN0aW9uKGEpe3JldHVybiZxdW90Oy0mcXVvdDsrYS50b0xvd2VyQ2FzZSgpfSkpO0MobixwLmpvaW4oJnF1b3Q7ICZxdW90OykpO24uc2V0QXR0cmlidXRlKCZxdW90O2RhdGEtYXVpLWJ1aWxkLWRhdGUmcXVvdDssJnF1b3Q7My4yMS45LTIwMjEtMTItMzAmcXVvdDspO3IucmVnaXN0ZXIoJnF1b3Q7cC1kZXRlY3QmcXVvdDssZnVuY3Rpb24oKXtyZXR1cm57Y2FwYWJpbGl0aWVzOmssXG5sb2NhbFN0b3JhZ2U6ay5sb2NhbFN0b3JhZ2UmYW1wOyZhbXA7dGEsdG9nZ2xlUmVzcG9uc2l2ZUdyaWQ6emEscmVzcG9uc2l2ZUdyaWRFbmFibGVkOkFhfX0pO20oL1VDQnJvd3Nlci9pKXx8ay5sb2NhbFN0b3JhZ2UmYW1wOyZhbXA7QyhuLHRhLmdldEl0ZW0oJnF1b3Q7YS1mb250LWNsYXNzJnF1b3Q7KSk7ci5kZWNsYXJlKCZxdW90O2EtZXZlbnQtcmV2aXNlZC1oYW5kbGluZyZxdW90OywhMSk7dHJ5e3ZhciB5PW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyfWNhdGNoKGEpe0YoJnF1b3Q7c3c6bmF2X2VyciZxdW90Oyl9eSZhbXA7JmFtcDsoeCh5LCZxdW90O21lc3NhZ2UmcXVvdDssZnVuY3Rpb24oYSl7YSZhbXA7JmFtcDthLmRhdGEmYW1wOyZhbXA7dihhLmRhdGEuayxhLmRhdGEudil9KSx5LmNvbnRyb2xsZXImYW1wOyZhbXA7eS5jb250cm9sbGVyLnBvc3RNZXNzYWdlKCZxdW90O01TRy1SRFkmcXVvdDspKTt2YXIgRD1bXTsoZnVuY3Rpb24oYSl7dmFyIGI9YS5yZWcsYz1hLnVucmVnO3kmYW1wOyZhbXA7eS5nZXRSZWdpc3RyYXRpb25zPyhPLndoZW4oJnF1b3Q7QSZxdW90OykuZXhlY3V0ZShmdW5jdGlvbihhKXtuYShhLGMsJnF1b3Q7dW5yZWdpc3RlciZxdW90Oyl9KSx4KGYsJnF1b3Q7bG9hZCZxdW90OyxmdW5jdGlvbigpe08ud2hlbigmcXVvdDtBJnF1b3Q7KS5leGVjdXRlKGZ1bmN0aW9uKGEpe25hKGEsXG5iLCZxdW90O3JlZ2lzdGVyJnF1b3Q7KTttYSgpfSl9KSk6KGImYW1wOyZhbXA7Yi5icm93c2VyJmFtcDsmYW1wO0QucHVzaCgmcXVvdDtzdzpicm93c2VyOnJlZ2lzdGVyOnVuc3VwcG9ydGVkJnF1b3Q7KSxjJmFtcDsmYW1wO2MuYnJvd3NlciZhbXA7JmFtcDtELnB1c2goJnF1b3Q7c3c6YnJvd3Nlcjp1bnJlZ2lzdGVyOnVuc3VwcG9ydGVkJnF1b3Q7KSxtYSgpKX0pKHtyZWc6e30sdW5yZWc6e319KTtyLmRlY2xhcmUoJnF1b3Q7YS1maXgtZXZlbnQtb2ZmJnF1b3Q7LCExKTt2KCZxdW90O3BhZ2Vqczpwa2dFeGVjVGltZSZxdW90Oyx3KCktTil9KSh3aW5kb3csZG9jdW1lbnQsRGF0ZSk7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJiMzOTtodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL0kvNjFYS3hyQnREVkwuX1JDfDExWSs1eCtra1RMLmpzLDUxMTA2Z1NEbkpMLmpzLDExeUtPUnYtR1RMLmpzLDExZ2lYdFpDd1ZMLmpzLDAxK3ordUllSi1MLmpzLDAxVlJNVjNGQmRMLmpzLDIxU0RKdEJVLVBMLmpzLDAxMkZWYzMxMzFMLmpzLDExclJqRExkQVZMLmpzLDUxSDE5aEpSWXJMLmpzLDExa1d1M2NOallMLmpzLDExdE1vaGpXbVZMLmpzLDExT1JFbnUxZXBMLmpzLDExd2NXZGhybkRMLmpzLDIxc3NpTE5JWnZMLmpzLDAxOTB2eHRsemNMLmpzLDUxK04yNnZGY0JMLmpzLDAxSllIYzJvSWxMLmpzLDMxUjltOHJpZzVMLmpzLDAxZXpqNVJrejFMLmpzLDExK1J4VmRoTmNMLmpzLDMxbzJOR1RYVGhMLmpzLDAxcnBhdVRlcDRMLmpzLDAxS0ZrWEp4TVRMLmpzXy5qcz9BVUlDbGllbnRzL0FtYXpvblVJJiMzOTspO1xuKGZ1bmN0aW9uKGMpe2Z1bmN0aW9uIHooYixyLGMsbCl7Yi5hZGRFdmVudExpc3RlbmVyP2IuYWRkRXZlbnRMaXN0ZW5lcihyLGMsITA9PT1sKTpiLmF0dGFjaEV2ZW50JmFtcDsmYW1wO2IuYXR0YWNoRXZlbnQoJnF1b3Q7b24mcXVvdDsrcixjKX1mdW5jdGlvbiBDKCl7aWYoYy5zYWZlRnJhbWVJZClyZXR1cm4gYy5zYWZlRnJhbWVJZDt2YXIgYj1jLmxvY2F0aW9uLmhyZWY7aWYoKGI9YiZhbXA7JmFtcDtiLm1hdGNoKC9bJmFtcDs/XXNhZmVGcmFtZUlkPShbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMC05YS1mXXs0fS1bMC05YS1mXXs0fS1bMC05YS1mXXsxMn0pLykpJmFtcDsmYW1wO2JbMV0pcmV0dXJuIGJbMV19ZnVuY3Rpb24gRCgpe2lmKGMuTXV0YXRpb25PYnNlcnZlciZhbXA7JmFtcDtjLmdldENvbXB1dGVkU3R5bGUpe3ZhciBiPWZ1bmN0aW9uKCl7dmFyIGI7Yj1kb2N1bWVudC5ib2R5LmNoaWxkTm9kZXM7dmFyIG49Yi5sZW5ndGgsbD1JbmZpbml0eSxwPS1JbmZpbml0eSxxPS1JbmZpbml0eSxtPUluZmluaXR5LGUsZyxoLHQ7aWYoMCE9PW4mYW1wOyZhbXA7Yy5nZXRDb21wdXRlZFN0eWxlKXtmb3IoO24tLTspZT1cbmJbbl0sZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QmYW1wOyZhbXA7KGc9Yy5nZXRDb21wdXRlZFN0eWxlKGUpLGcmYW1wOyZhbXA7JnF1b3Q7YWJzb2x1dGUmcXVvdDs9PT1nLnBvc2l0aW9ufHwoZz1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLGg9Zy5sZWZ0fHwwLHQ9TWF0aC5tYXgoZy53aWR0aHx8MCxlLnNjcm9sbFdpZHRoKSxlPU1hdGgubWF4KGcuaGVpZ2h0fHwwLGUuc2Nyb2xsSGVpZ2h0KSxsPU1hdGgubWluKE1hdGguZmxvb3IoZy50b3B8fDApLGwpLHA9TWF0aC5tYXgoTWF0aC5jZWlsKGgrdCksTWF0aC5jZWlsKGcucmlnaHQpLHApLHE9TWF0aC5tYXgoTWF0aC5jZWlsKGwrZSksTWF0aC5jZWlsKGcuYm90dG9tKSxxKSxtPU1hdGgubWluKE1hdGguZmxvb3IoaCksbSkpKTtiPXt3aWR0aDpwLW0saGVpZ2h0OnEtbH19ZWxzZSBiPXZvaWQgMDtiJmFtcDsmYW1wO2Iud2lkdGgmYW1wOyZhbXA7Yi5oZWlnaHQmYW1wOyZhbXA7KFNhZmVGcmFtZUNsaWVudC5zZXRXaWR0aChiLndpZHRoKSxTYWZlRnJhbWVDbGllbnQuc2V0SGVpZ2h0KGIuaGVpZ2h0KSl9O2IoKTtiPVxubmV3IE11dGF0aW9uT2JzZXJ2ZXIoYik7Yi5vYnNlcnZlKGRvY3VtZW50LmJvZHkse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSk7cmV0dXJuIGJ9fWZ1bmN0aW9uIHgoKXtmdW5jdGlvbiBiKGEpe2EuZnJhbWVJZD1BO3BhcmVudC5wb3N0TWVzc2FnZShKU09OLnN0cmluZ2lmeShhKSwmcXVvdDsqJnF1b3Q7KX1mdW5jdGlvbiByKCl7cmV0dXJuIGsuZ2VvbX1mdW5jdGlvbiBuKCl7dmFyIGE9ay5nZW9tJmFtcDsmYW1wO2suZ2VvbS5zZWxmJmFtcDsmYW1wO2suZ2VvbS5zZWxmLml2O3JldHVybiZxdW90O3VuZGVmaW5lZCZxdW90OyE9PXR5cGVvZiBhPzEwMCphOmF9ZnVuY3Rpb24gbCgpe3JldHVybiBrLmhhc0FkQmxvY2tlcn1mdW5jdGlvbiBwKGEsZCx3KXt2YXIgYzt0cnl7Yz1KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGQpKX1jYXRjaChlKXtjPXt9fWIoe2FjdGlvbjomcXVvdDtMT0dfRVJST1ImcXVvdDssbWVzc2FnZTphLGV4Y2VwdGlvbjpjLGxvZ0xldmVsOnd9KX1mdW5jdGlvbiBxKCl7bSgpO3U9RCgpfWZ1bmN0aW9uIG0oKXt1JmFtcDsmYW1wOyZxdW90O2Z1bmN0aW9uJnF1b3Q7PT09XG50eXBlb2YgdS5kaXNjb25uZWN0JmFtcDsmYW1wO3UuZGlzY29ubmVjdCgpO3U9dm9pZCAwfWZ1bmN0aW9uIGUoYSxkLGIsYyl7YSZhbXA7JmFtcDt2Lmhhc093blByb3BlcnR5KGEpJmFtcDsmYW1wOygoZD12W2FdJmFtcDsmYW1wO3ZbYV1bZF0pJmFtcDsmYW1wO2QuYXBwbHkmYW1wOyZhbXA7ZC5hcHBseShudWxsLGIpLGMmYW1wOyZhbXA7ZGVsZXRlIHZbYV0pfWZ1bmN0aW9uIGcoYSxkKXthJmFtcDsmYW1wOyZxdW90O2Z1bmN0aW9uJnF1b3Q7PT09dHlwZW9mIGQmYW1wOyZhbXA7KCEwPT09QlthXSZhbXA7JmFtcDt5W2FdP2QoeVthXSk6KGZbYV09ZlthXXx8W10sZlthXS5wdXNoKGQpKSl9ZnVuY3Rpb24gaChhLGQpe3ZhciBiLGMsZTtpZihmW2FdJmFtcDsmYW1wOzAmbHQ7ZlthXS5sZW5ndGgpZm9yKGU9W10uY29uY2F0KGZbYV0pLGM9ZS5sZW5ndGgsYj0wO2ImbHQ7YztiKyspZVtiXShkKTshMD09PUJbYV0mYW1wOyZhbXA7KGRlbGV0ZSBmW2FdLHlbYV09ZCl9ZnVuY3Rpb24gdChhKXt2YXIgYjt0cnl7Yj1KU09OLnBhcnNlKGEuZGF0YSl9Y2F0Y2goYyl7Yj17fX12YXIgdz1FW2IuYWN0aW9uXTthLnNvdXJjZT09PXBhcmVudCZhbXA7JmFtcDt3JmFtcDsmYW1wO3coYil9dmFyIEE9QygpLHg9ZG9jdW1lbnQud3JpdGUsXG5rPXt9LGY9e30sQj17YWRibG9ja2VyZGV0ZWN0ZWQ6ITAsYXRmOiEwLGNmOiEwLGNsaWVudFJlYWR5OiEwLGxvYWQ6ITB9LHk9e30sdSx2PXt9LEU9e1JFR0lTVEVSRUQ6ZnVuY3Rpb24oYSl7ay5nZW9tPWEuZ2VvbTtrLmlzVmlzaWJsZT1hLmlzVmlzaWJsZTtrLmhhc0FkQmxvY2tlcj1hLmhhc0FkQmxvY2tlcjtoKCZxdW90O2NsaWVudFJlYWR5JnF1b3Q7LHt9KTthPWEuY29tcGxldGVkRXZlbnREYXRhfHx7fTtmb3IodmFyIGIgaW4gYSlhLmhhc093blByb3BlcnR5KGIpJmFtcDsmYW1wO2goYixhW2JdKTtsKCkmYW1wOyZhbXA7aCgmcXVvdDthZGJsb2NrZXJkZXRlY3RlZCZxdW90Oyl9LFNDUk9MTDpmdW5jdGlvbihhKXtrLmdlb209YS5nZW9tO2goJnF1b3Q7c2Nyb2xsJnF1b3Q7LHt9KX0sUkVTSVpFOmZ1bmN0aW9uKGEpe2suZ2VvbT1hLmdlb207aCgmcXVvdDtyZXNpemUmcXVvdDsse30pfSxWSVNJQklMSVRZX0NIQU5HRTpmdW5jdGlvbihhKXtrLmlzVmlzaWJsZT1hLmlzVmlzaWJsZTtoKCZxdW90O3Zpc2liaWxpdHljaGFuZ2UmcXVvdDsse30pfSxUUklHR0VSOmZ1bmN0aW9uKGEpe2goYS5ldmVudE5hbWUsXG5hLmV2ZW50RGF0YXx8e30pfSxBRF9CTE9DS0VSX0RFVEVDVEVEOmZ1bmN0aW9uKCl7ay5oYXNBZEJsb2NrZXI9ITA7aCgmcXVvdDthZGJsb2NrZXJkZXRlY3RlZCZxdW90Oyl9LExPQURfQ09OVEVOVFM6ZnVuY3Rpb24oYSl7ZG9jdW1lbnQuYm9keS5pbm5lckhUTUw9JnF1b3Q7JnF1b3Q7O3ZhciBiPWRvY3VtZW50LmJvZHksYz1hLmNvbnRlbnRzO2E9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgmcXVvdDtkaXYmcXVvdDspO3ZhciBlPSZxdW90O3RleHQmcXVvdDtpbiBhPyZxdW90O3RleHQmcXVvdDs6JnF1b3Q7dGV4dENvbnRlbnQmcXVvdDssZyxrLGgsZjthLmlubmVySFRNTD0mcXVvdDtfJnF1b3Q7K2M7YS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2M9YS5nZXRFbGVtZW50c0J5VGFnTmFtZSgmcXVvdDtzY3JpcHQmcXVvdDspO2c9MDtmb3Ioaz1jLmxlbmd0aDtnJmx0O2s7ZysrKWY9Y1tnXSxoPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJnF1b3Q7c2NyaXB0JnF1b3Q7KSxmLnR5cGUmYW1wOyZhbXA7KGgudHlwZT1mLnR5cGUpLGYuc3JjP2guc3JjPWYuc3JjOmZbZV0mYW1wOyZhbXA7KGhbZV09ZltlXSksZi5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChoLGYpO2IuYXBwZW5kQ2hpbGQoYSl9LFxuRU5BQkxFX0FVVE9fUkVTSVpFOmZ1bmN0aW9uKCl7cSgpfSxESVNBQkxFX0FVVE9fUkVTSVpFOmZ1bmN0aW9uKCl7bSgpfSxBSkFYX1NVQ0NFU1M6ZnVuY3Rpb24oYSl7ZShhLnJlcXVlc3RJZCwmcXVvdDtzdWNjZXNzJnF1b3Q7LFthLnJlc3BvbnNlLGEuc3RhdHVzXSwhMCl9LEFKQVhfRVJST1I6ZnVuY3Rpb24oYSl7ZShhLnJlcXVlc3RJZCwmcXVvdDtlcnJvciZxdW90OyxbbnVsbCxhLnN0YXR1cyxhLmVycm9yXSwhMCl9LEFKQVhfQUJPUlQ6ZnVuY3Rpb24oYSl7ZShhLnJlcXVlc3RJZCwmcXVvdDthYm9ydCZxdW90OyxbXSwhMCl9LEFKQVhfQ0hVTks6ZnVuY3Rpb24oYSl7ZShhLnJlcXVlc3RJZCwmcXVvdDtjaHVuayZxdW90OyxbYS5jaHVua10sITEpfX07KGZ1bmN0aW9uKCl7ZG9jdW1lbnQud3JpdGU9ZnVuY3Rpb24oKXtGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHkuY2FsbCh4LGRvY3VtZW50LGFyZ3VtZW50cyk7eihjLCZxdW90O21lc3NhZ2UmcXVvdDssdCwhMSl9fSkoKTsoZnVuY3Rpb24oKXtjLm9uZXJyb3I9ZnVuY3Rpb24oYSxiLGMsZSxmKXtwKFsmcXVvdDt3aW5kb3cub25lcnJvciZxdW90OyxcbmEsYixjLGVdLmpvaW4oJnF1b3Q7OyZxdW90OyksZiwmcXVvdDtFUlJPUiZxdW90Oyk7cmV0dXJuITB9fSkoKTt6KGMsJnF1b3Q7bWVzc2FnZSZxdW90Oyx0LCExKTsoZnVuY3Rpb24oKXtnKCZxdW90O2NsaWVudFJlYWR5JnF1b3Q7LGZ1bmN0aW9uKCl7Yih7YWN0aW9uOiZxdW90O0NMSUVOVF9SRUFEWSZxdW90O30pfSl9KSgpO2MuJHNmPWMuJHNmfHx7ZXh0OntnZW9tOnIsaW5WaWV3UGVyY2VudGFnZTpufX07Yih7YWN0aW9uOiZxdW90O1JFR0lTVEVSJnF1b3Q7LHRpbWVzdGFtcDoobmV3IERhdGUpLmdldFRpbWUoKX0pO3JldHVybntpc1Zpc2libGU6ZnVuY3Rpb24oKXtyZXR1cm4gay5pc1Zpc2libGV9LGdlb206cixpblZpZXdQZXJjZW50YWdlOm4saGFzQWRCbG9ja2VyOmwsc2VuZE1ldHJpY3M6ZnVuY3Rpb24oYSxkKXtiKHthY3Rpb246JnF1b3Q7U0VORF9NRVRSSUNTJnF1b3Q7LG1ldHJpYzphLHNjb3BlOmR9KX0sY291bnRNZXRyaWM6ZnVuY3Rpb24oYSxkKXtiKHthY3Rpb246JnF1b3Q7Q09VTlRfTUVUUklDJnF1b3Q7LGNvdW50ZXJOYW1lOmEsdmFsdWU6ZH0pfSxpbmNyZW1lbnRNZXRyaWM6ZnVuY3Rpb24oYSxkKXtiKHthY3Rpb246JnF1b3Q7SU5DUkVNRU5UX01FVFJJQyZxdW90OyxcbmNvdW50ZXJOYW1lOmEsdmFsdWU6ZH0pfSxsb2dFcnJvcjpwLHNldEhlaWdodDpmdW5jdGlvbihhKXtiKHthY3Rpb246JnF1b3Q7U0VUX0hFSUdIVCZxdW90Oyx2YWx1ZTphfSl9LHNldFdpZHRoOmZ1bmN0aW9uKGEpe2Ioe2FjdGlvbjomcXVvdDtTRVRfV0lEVEgmcXVvdDssdmFsdWU6YX0pfSxjb2xsYXBzZTpmdW5jdGlvbigpe2Ioe2FjdGlvbjomcXVvdDtDT0xMQVBTRSZxdW90O30pfSxzaG93Rm9vdGVyOmZ1bmN0aW9uKGEpe2Ioe2FjdGlvbjomcXVvdDtTSE9XX0ZPT1RFUiZxdW90OyxkYXRhOmF9KX0sZ2V0Q29udGVudHM6ZnVuY3Rpb24oKXtiKHthY3Rpb246JnF1b3Q7R0VUX0NPTlRFTlRTJnF1b3Q7fSl9LGVuYWJsZUF1dG9SZXNpemU6cSxkaXNhYmxlQXV0b1Jlc2l6ZTptLGFqYXg6ZnVuY3Rpb24oYSxkKXt2YXIgYz1hK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpO2Q9ZHx8e307dltjXT17c3VjY2VzczpkLnN1Y2Nlc3MsZXJyb3I6ZC5lcnJvcixhYm9ydDpkLmFib3J0LGNodW5rOmQuY2h1bmt9O2Ioe2FjdGlvbjomcXVvdDtBSkFYJnF1b3Q7LHVybDphLHJlcXVlc3RJZDpjLFxub3B0aW9uczp7YWNjZXB0czpkLmFjY2VwdHMsY2FjaGU6ZC5jYWNoZSxjb250ZW50VHlwZTpkLmNvbnRlbnRUeXBlLG1ldGhvZDpkLm1ldGhvZCxwYXJhbXM6ZC5wYXJhbXMscGFyYW1zRm9ybWF0OmQucGFyYW1zRm9ybWF0LHRpbWVvdXQ6ZC50aW1lb3V0fX0pfSxvbjpnLG9mZjpmdW5jdGlvbihhLGIpe3ZhciBjO2lmKGZbYV0mYW1wOyZhbXA7MCZsdDtmW2FdLmxlbmd0aClmb3IoYz1mW2FdLmxlbmd0aDtjLS07KWlmKGZbYV1bY109PT1iKXtmW2FdLnNwbGljZShjLDEpO2JyZWFrfX0sdGFnUmVxdWVzdDpmdW5jdGlvbihhKXtiKHthY3Rpb246JnF1b3Q7VEFHX1JFUVVFU1QmcXVvdDssZnJhbWVJZDpBLHRhZ05hbWU6YX0pfX19Yy5TYWZlRnJhbWVDbGllbnQ9Yy5TYWZlRnJhbWVDbGllbnR8fHgoKX0pKHdpbmRvdyk7XG4mbHQ7L3NjcmlwdCZndDtcbiZsdDshLS1cbkRFQlVHOiBEZXYgbWFuaWZlc3QgZGlzYWJsZWQgYmVjYXVzZSB0aGUgcmVxdWVzdCBpcyBub3QgaW50ZXJuYWxcbkRFQlVHOiBTZXNzaW9uIHN0YXJ0ZWQ6IFNlc3Npb25CdWlsZGVyKExvYWRlcj1WZXJzaW9uTG9nZ2VyKExvYWRlci5DYWNoZWQoTG9hZGVyLk11bHRpKExvYWRlci5QcmVwZW5kRGlycyhMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLkZpbGVQYXRoKC9hcG9sbG8vZW52L1NlYXJjaFdlYkFwcCksIFtBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoUGhsb2VtQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9TZWFyY2hXZWJBcHAuQ09OU1VNRVMuU3VzaGlBZ2VudCwgQXBvbGxvL0NvbnN1bWFibGVzL1dIT1BsYXRmb3JtU3VwcG9ydCwgQXBvbGxvL0NvbnN1bWFibGVzL0dyZW1saW5Mb2NhbCwgQXBvbGxvL0NvbnN1bWFibGVzL09uZUJveE1ldHJpY3NDb25zdW1hYmxlLCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLkFBQVNlY3VyaXR5RGFlbW9uLCAuXSksIFthc3NldHMvbWFuaWZlc3RzL3YzLCB2YXIvYXNzZXRzL21hbmlmZXN0cywgLl0pLCBMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLlByZXBlbmREaXJzKExvYWRlci5GaWxlUGF0aCgvYXBvbGxvL2Vudi9TZWFyY2hXZWJBcHApLCBbQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFBobG9lbUFnZW50LCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLlN1c2hpQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9XSE9QbGF0Zm9ybVN1cHBvcnQsIEFwb2xsby9Db25zdW1hYmxlcy9HcmVtbGluTG9jYWwsIEFwb2xsby9Db25zdW1hYmxlcy9PbmVCb3hNZXRyaWNzQ29uc3VtYWJsZSwgQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFdlYkFwcC5DT05TVU1FUy5BQUFTZWN1cml0eURhZW1vbiwgLl0pLCBbYXNzZXRzL21hbmlmZXN0cy92MywgdmFyL2Fzc2V0cy9tYW5pZmVzdHMsIC5dKSkpKSlcbkRFQlVHOiBTZXNzaW9uIHN0YXJ0ZWQ6IFNlc3Npb25CdWlsZGVyKExvYWRlcj1WZXJzaW9uTG9nZ2VyKExvYWRlci5DYWNoZWQoTG9hZGVyLk11bHRpKExvYWRlci5QcmVwZW5kRGlycyhMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLkZpbGVQYXRoKC9hcG9sbG8vZW52L1NlYXJjaFdlYkFwcCksIFtBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoUGhsb2VtQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9TZWFyY2hXZWJBcHAuQ09OU1VNRVMuU3VzaGlBZ2VudCwgQXBvbGxvL0NvbnN1bWFibGVzL1dIT1BsYXRmb3JtU3VwcG9ydCwgQXBvbGxvL0NvbnN1bWFibGVzL0dyZW1saW5Mb2NhbCwgQXBvbGxvL0NvbnN1bWFibGVzL09uZUJveE1ldHJpY3NDb25zdW1hYmxlLCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLkFBQVNlY3VyaXR5RGFlbW9uLCAuXSksIFthc3NldHMvbWFuaWZlc3RzL3YzLCB2YXIvYXNzZXRzL21hbmlmZXN0cywgLl0pLCBMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLlByZXBlbmREaXJzKExvYWRlci5GaWxlUGF0aCgvYXBvbGxvL2Vudi9TZWFyY2hXZWJBcHApLCBbQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFBobG9lbUFnZW50LCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLlN1c2hpQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9XSE9QbGF0Zm9ybVN1cHBvcnQsIEFwb2xsby9Db25zdW1hYmxlcy9HcmVtbGluTG9jYWwsIEFwb2xsby9Db25zdW1hYmxlcy9PbmVCb3hNZXRyaWNzQ29uc3VtYWJsZSwgQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFdlYkFwcC5DT05TVU1FUy5BQUFTZWN1cml0eURhZW1vbiwgLl0pLCBbYXNzZXRzL21hbmlmZXN0cy92MywgdmFyL2Fzc2V0cy9tYW5pZmVzdHMsIC5dKSkpKSlcbkRFQlVHOiBTZXNzaW9uIHN0YXJ0ZWQ6IFNlc3Npb25CdWlsZGVyKExvYWRlcj1WZXJzaW9uTG9nZ2VyKExvYWRlci5DYWNoZWQoTG9hZGVyLk11bHRpKExvYWRlci5QcmVwZW5kRGlycyhMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLkZpbGVQYXRoKC9hcG9sbG8vZW52L1NlYXJjaFdlYkFwcCksIFtBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoUGhsb2VtQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9TZWFyY2hXZWJBcHAuQ09OU1VNRVMuU3VzaGlBZ2VudCwgQXBvbGxvL0NvbnN1bWFibGVzL1dIT1BsYXRmb3JtU3VwcG9ydCwgQXBvbGxvL0NvbnN1bWFibGVzL0dyZW1saW5Mb2NhbCwgQXBvbGxvL0NvbnN1bWFibGVzL09uZUJveE1ldHJpY3NDb25zdW1hYmxlLCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLkFBQVNlY3VyaXR5RGFlbW9uLCAuXSksIFthc3NldHMvbWFuaWZlc3RzL3YzLCB2YXIvYXNzZXRzL21hbmlmZXN0cywgLl0pLCBMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLlByZXBlbmREaXJzKExvYWRlci5GaWxlUGF0aCgvYXBvbGxvL2Vudi9TZWFyY2hXZWJBcHApLCBbQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFBobG9lbUFnZW50LCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLlN1c2hpQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9XSE9QbGF0Zm9ybVN1cHBvcnQsIEFwb2xsby9Db25zdW1hYmxlcy9HcmVtbGluTG9jYWwsIEFwb2xsby9Db25zdW1hYmxlcy9PbmVCb3hNZXRyaWNzQ29uc3VtYWJsZSwgQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFdlYkFwcC5DT05TVU1FUy5BQUFTZWN1cml0eURhZW1vbiwgLl0pLCBbYXNzZXRzL21hbmlmZXN0cy92MywgdmFyL2Fzc2V0cy9tYW5pZmVzdHMsIC5dKSkpKSlcbkRFQlVHOiBTZXNzaW9uIHN0YXJ0ZWQ6IFNlc3Npb25CdWlsZGVyKExvYWRlcj1WZXJzaW9uTG9nZ2VyKExvYWRlci5DYWNoZWQoTG9hZGVyLk11bHRpKExvYWRlci5QcmVwZW5kRGlycyhMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLkZpbGVQYXRoKC9hcG9sbG8vZW52L1NlYXJjaFdlYkFwcCksIFtBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoUGhsb2VtQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9TZWFyY2hXZWJBcHAuQ09OU1VNRVMuU3VzaGlBZ2VudCwgQXBvbGxvL0NvbnN1bWFibGVzL1dIT1BsYXRmb3JtU3VwcG9ydCwgQXBvbGxvL0NvbnN1bWFibGVzL0dyZW1saW5Mb2NhbCwgQXBvbGxvL0NvbnN1bWFibGVzL09uZUJveE1ldHJpY3NDb25zdW1hYmxlLCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLkFBQVNlY3VyaXR5RGFlbW9uLCAuXSksIFthc3NldHMvbWFuaWZlc3RzL3YzLCB2YXIvYXNzZXRzL21hbmlmZXN0cywgLl0pLCBMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLlByZXBlbmREaXJzKExvYWRlci5GaWxlUGF0aCgvYXBvbGxvL2Vudi9TZWFyY2hXZWJBcHApLCBbQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFBobG9lbUFnZW50LCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLlN1c2hpQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9XSE9QbGF0Zm9ybVN1cHBvcnQsIEFwb2xsby9Db25zdW1hYmxlcy9HcmVtbGluTG9jYWwsIEFwb2xsby9Db25zdW1hYmxlcy9PbmVCb3hNZXRyaWNzQ29uc3VtYWJsZSwgQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFdlYkFwcC5DT05TVU1FUy5BQUFTZWN1cml0eURhZW1vbiwgLl0pLCBbYXNzZXRzL21hbmlmZXN0cy92MywgdmFyL2Fzc2V0cy9tYW5pZmVzdHMsIC5dKSkpKSlcbkRFQlVHOiBTZXNzaW9uIHN0YXJ0ZWQ6IFNlc3Npb25CdWlsZGVyKExvYWRlcj1WZXJzaW9uTG9nZ2VyKExvYWRlci5DYWNoZWQoTG9hZGVyLk11bHRpKExvYWRlci5QcmVwZW5kRGlycyhMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLkZpbGVQYXRoKC9hcG9sbG8vZW52L1NlYXJjaFdlYkFwcCksIFtBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoUGhsb2VtQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9TZWFyY2hXZWJBcHAuQ09OU1VNRVMuU3VzaGlBZ2VudCwgQXBvbGxvL0NvbnN1bWFibGVzL1dIT1BsYXRmb3JtU3VwcG9ydCwgQXBvbGxvL0NvbnN1bWFibGVzL0dyZW1saW5Mb2NhbCwgQXBvbGxvL0NvbnN1bWFibGVzL09uZUJveE1ldHJpY3NDb25zdW1hYmxlLCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLkFBQVNlY3VyaXR5RGFlbW9uLCAuXSksIFthc3NldHMvbWFuaWZlc3RzL3YzLCB2YXIvYXNzZXRzL21hbmlmZXN0cywgLl0pLCBMb2FkZXIuUHJlcGVuZERpcnMoTG9hZGVyLlByZXBlbmREaXJzKExvYWRlci5GaWxlUGF0aCgvYXBvbGxvL2Vudi9TZWFyY2hXZWJBcHApLCBbQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFBobG9lbUFnZW50LCBBcG9sbG8vQ29uc3VtYWJsZXMvU2VhcmNoV2ViQXBwLkNPTlNVTUVTLlN1c2hpQWdlbnQsIEFwb2xsby9Db25zdW1hYmxlcy9XSE9QbGF0Zm9ybVN1cHBvcnQsIEFwb2xsby9Db25zdW1hYmxlcy9HcmVtbGluTG9jYWwsIEFwb2xsby9Db25zdW1hYmxlcy9PbmVCb3hNZXRyaWNzQ29uc3VtYWJsZSwgQXBvbGxvL0NvbnN1bWFibGVzL1NlYXJjaFdlYkFwcC5DT05TVU1FUy5BQUFTZWN1cml0eURhZW1vbiwgLl0pLCBbYXNzZXRzL21hbmlmZXN0cy92MywgdmFyL2Fzc2V0cy9tYW5pZmVzdHMsIC5dKSkpKSlcbkRFQlVHOiBOZWVkKEFtYXpvblVJUGFnZUpTKVxuREVCVUc6IE5lZWQoQW1hem9uVUlQYWdlSlMsIGNzcylcbkRFQlVHOiBBbWF6b25VSVBhZ2VKUyBBcG9sbG8gVmVyc2lvbiA5Mzc0NS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBhZ2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBhZ2VKU1xuREVCVUc6IElubGluaW5nIGJlY2F1c2Ugb2YgbWFuaWZlc3Q6IEFtYXpvblVJUGFnZUpTXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQYWdlSlMvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBJbmxpbmluZyBiZWNhdXNlIG9mIG1hbmlmZXN0OiBBbWF6b25VSVBhZ2VKU1xuREVCVUc6IE5lZWQoQW1hem9uVUlKU1BhdHJvbCwgY3NzKVxuREVCVUc6IEFtYXpvblVJSlNQYXRyb2wgQXBvbGxvIFZlcnNpb24gNTM2NDEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlKU1BhdHJvbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUpTUGF0cm9sXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlKU1BhdHJvbC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJSlNQYXRyb2wvY3NzOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUGFnZUpTL2NzczogW11cbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlQYWdlSlNcbkRFQlVHOiBBbWF6b25VSVBhZ2VKUyBBcG9sbG8gVmVyc2lvbiA5Mzc0NS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBhZ2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBhZ2VKU1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUpTUGF0cm9sXG5ERUJVRzogQW1hem9uVUlKU1BhdHJvbCBBcG9sbG8gVmVyc2lvbiA1MzY0MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUpTUGF0cm9sXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSlNQYXRyb2xcbkRFQlVHOiBOZWVkKEFtYXpvblVJUGFnZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUGFnZUpTIEFwb2xsbyBWZXJzaW9uIDkzNzQ1LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUGFnZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUGFnZUpTXG5ERUJVRzogSW5saW5pbmcgYmVjYXVzZSBvZiBtYW5pZmVzdDogQW1hem9uVUlQYWdlSlNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVBhZ2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogSW5saW5pbmcgYmVjYXVzZSBvZiBtYW5pZmVzdDogQW1hem9uVUlQYWdlSlNcbkRFQlVHOiBOZWVkKEFtYXpvblVJSlNQYXRyb2wsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlKU1BhdHJvbCBBcG9sbG8gVmVyc2lvbiA1MzY0MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUpTUGF0cm9sXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSlNQYXRyb2xcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUpTUGF0cm9sL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJSlNQYXRyb2wvamF2YXNjcmlwdDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJUGFnZUpTL2NlZWUzMjNhM2YxYThlODE3ZmRjMTg5MTdjY2Y3ZmQ3NGNkY2IwYzguanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUGFnZUpTL2NlZWUzMjNhM2YxYThlODE3ZmRjMTg5MTdjY2Y3ZmQ3NGNkY2IwYzguanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBhZ2VKUy9jZWVlMzIzYTNmMWE4ZTgxN2ZkYzE4OTE3Y2NmN2ZkNzRjZGNiMGM4Lmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IEF0dGVtcHRpbmcgdG8gaW5saW5lOiBPcHRpb25hbFthc3NldHMvQW1hem9uVUlQYWdlSlMuMTFkMmIzYWRiNjA5Mzk3YjA3NTZlMWFiZGE3MjAyNGVkOWQxMjllMC5qc11cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBhc3NldHMvQW1hem9uVUlQYWdlSlMuMTFkMmIzYWRiNjA5Mzk3YjA3NTZlMWFiZGE3MjAyNGVkOWQxMjllMC5qc1xuREVCVUc6IExvYWRpbmcgcGF0aDogL2Fwb2xsby9lbnYvU2VhcmNoV2ViQXBwL2Fzc2V0cy9BbWF6b25VSVBhZ2VKUy4xMWQyYjNhZGI2MDkzOTdiMDc1NmUxYWJkYTcyMDI0ZWQ5ZDEyOWUwLmpzXG5ERUJVRzogTG9hZGluZyBJbmxpbmVkOiBhc3NldHMvQW1hem9uVUlQYWdlSlMuMTFkMmIzYWRiNjA5Mzk3YjA3NTZlMWFiZGE3MjAyNGVkOWQxMjllMC5qc1xuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUGFnZUpTL2phdmFzY3JpcHQ6IFtJbmxpbmUoKGZ1bmN0aW9uKGYsaCxRLEUpe2Z1bmN0aW9uIEYoYSl7dSZhbXA7JmFtcDt1LnRhZyZhbXA7JmFtcDt1LnRhZyhxKCZxdW90OzomcXVvdDssJnF1b3Q7YXVpJnF1b3Q7LGEpKX1mdW5jdGlvbiB2KGEsYil7dSZhbXA7JmFtcDt1LmNvdW50JmFtcDsmYW1wO3UuY291bnQpXVxuREVCVUc6IE5lZWQoQW1hem9uVUkpXG5ERUJVRzogTmVlZChBbWF6b25VSSwgY3NzKVxuREVCVUc6IEFtYXpvblVJIEFwb2xsbyBWZXJzaW9uIDExNjA1Ni4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VKUy9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlNAQSwgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTQEEgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQEFcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAQVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQmFzZUpTQEEvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQGJhc2UsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQGJhc2VcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VKU0BiYXNlL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSWpRdWVyeSwgY3NzKVxuREVCVUc6IEFtYXpvblVJalF1ZXJ5IEFwb2xsbyBWZXJzaW9uIDkxMTkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJalF1ZXJ5XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJalF1ZXJ5XG5ERUJVRzogVHlwZSBub3QgZGVmaW5lZCBmb3IgcGFja2FnZTogQW1hem9uVUlqUXVlcnkvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUHJvbWlzZSwgY3NzKVxuREVCVUc6IEFtYXpvblVJUHJvbWlzZSBBcG9sbG8gVmVyc2lvbiA4NjkyOS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb21pc2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9taXNlXG5ERUJVRzogVHlwZSBub3QgZGVmaW5lZCBmb3IgcGFja2FnZTogQW1hem9uVUlQcm9taXNlL2Nzc1xuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUpTQGJhc2UvY3NzOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZSwgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSWpRdWVyeSwgY3NzKVxuREVCVUc6IEFtYXpvblVJalF1ZXJ5IEFwb2xsbyBWZXJzaW9uIDkxMTkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJalF1ZXJ5XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJalF1ZXJ5XG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJalF1ZXJ5L2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BiYXNlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAYmFzZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTQGJhc2UvY3NzXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmUvY3NzOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BwcmVsb2FkLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAcHJlbG9hZCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAcHJlbG9hZFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BwcmVsb2FkXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlSlNAcHJlbG9hZC9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQcm9taXNlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlQcm9taXNlIEFwb2xsbyBWZXJzaW9uIDg2OTI5LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUHJvbWlzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVByb21pc2VcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlQcm9taXNlL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BiYXNlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAYmFzZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTQGJhc2UvY3NzXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlSlNAcHJlbG9hZC9jc3M6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQHRvdWNoLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAdG91Y2ggQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQHRvdWNoXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQHRvdWNoXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlSlNAdG91Y2gvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJalF1ZXJ5LCBjc3MpXG5ERUJVRzogQW1hem9uVUlqUXVlcnkgQXBvbGxvIFZlcnNpb24gOTExOTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlqUXVlcnlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlqUXVlcnlcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlqUXVlcnkvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQGJhc2UsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQGJhc2VcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAYmFzZS9jc3NcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VKU0B0b3VjaC9jc3M6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlSlNAQS9jc3M6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQGJhc2UsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQGJhc2VcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAYmFzZS9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmUsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmVcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmVcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmUvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQHByZWxvYWQsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BwcmVsb2FkIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BwcmVsb2FkXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQHByZWxvYWRcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAcHJlbG9hZC9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlNAdG91Y2gsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0B0b3VjaCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAdG91Y2hcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAdG91Y2hcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAdG91Y2gvY3NzXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlSlMvY3NzOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVR5cG9ncmFwaHksIGNzcylcbkRFQlVHOiBBbWF6b25VSVR5cG9ncmFwaHkgQXBvbGxvIFZlcnNpb24gNDExNDAuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUeXBvZ3JhcGh5XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVHlwb2dyYXBoeVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJVHlwb2dyYXBoeS9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2wsIGNzcylcbkRFQlVHOiBBbWF6b25VSVR5cG9ncmFwaHlAY29udHJvbCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2xcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2xcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVR5cG9ncmFwaHlAY29udHJvbC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlUeXBvZ3JhcGh5QGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVHlwb2dyYXBoeUBiYXNlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlUeXBvZ3JhcGh5QGJhc2UvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFZhcmlhbnQgJiMzOTttYXJrZXRwbGFjZTp1cyYjMzk7IHJlc29sdmVkIHRvIHRydWVcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFttYXJrZXRwbGFjZTp1c11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlLzM2ZDQzY2FkNTVmZmVmNDU0NDg0Zjg5MWU4NDkwYjBhOWVlZWI5MTIuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlLzM2ZDQzY2FkNTVmZmVmNDU0NDg0Zjg5MWU4NDkwYjBhOWVlZWI5MTIuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVR5cG9ncmFwaHlAYmFzZS8zNmQ0M2NhZDU1ZmZlZjQ1NDQ4NGY4OTFlODQ5MGIwYTllZWViOTEyLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlL2NzczogW1BoeXNpY2FsSWQoMTFFSVE1SUdxYUwpXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW21hcmtldHBsYWNlOnVzXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVR5cG9ncmFwaHlAY29udHJvbC9jc3M6IFtQaHlzaWNhbElkKDExRUlRNUlHcWFMKSwgUGh5c2ljYWxJZCgwMVpUSFRaT2JuTCldXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlUeXBvZ3JhcGh5L2NzczogW1BoeXNpY2FsSWQoMTFFSVE1SUdxYUwsIDAxWlRIVFpPYm5MKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0BiYXNlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlQ1NTQGJhc2UvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUljb24sIGNzcylcbkRFQlVHOiBBbWF6b25VSUljb24gQXBvbGxvIFZlcnNpb24gNTY4NDguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlJY29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSWNvblxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJSWNvbi9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFttYXJrZXRwbGFjZTp1c11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJSWNvbi81NDU1NmJmYjhmOTdlNDlhMDU4MGRiYjg1ZDMxZWRjYzVjMTUwODVhLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUljb24vNTQ1NTZiZmI4Zjk3ZTQ5YTA1ODBkYmI4NWQzMWVkY2M1YzE1MDg1YS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSWNvbi81NDU1NmJmYjhmOTdlNDlhMDU4MGRiYjg1ZDMxZWRjYzVjMTUwODVhLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFZhcmlhbnQgJiMzOTtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50JiMzOTsgcmVzb2x2ZWQgdG8gdHJ1ZVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlJY29uL2NzczogW1BoeXNpY2FsSWQoNDF3Wmt5VGFXb0wpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUV4cGVyaW1lbnRJY29uLCBjc3MpXG5ERUJVRzogQW1hem9uVUlFeHBlcmltZW50SWNvbiBBcG9sbG8gVmVyc2lvbiAzOTQ3MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUV4cGVyaW1lbnRJY29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJRXhwZXJpbWVudEljb25cbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wsIGNzcylcbkRFQlVHOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25AY29udHJvbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2xcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFttYXJrZXRwbGFjZTp1c11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJRXhwZXJpbWVudEljb25AY29udHJvbC81YTllMWZjNTJlZGY3Mzk2NjhiNzZiOTRmODQzZTY2YzhiZGVhNDMuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25AY29udHJvbC81YTllMWZjNTJlZGY3Mzk2NjhiNzZiOTRmODQzZTY2YzhiZGVhNDMuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wvNWE5ZTFmYzUyZWRmNzM5NjY4Yjc2Yjk0Zjg0M2U2NmM4YmRlYTQzLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlFeHBlcmltZW50SWNvbkBjb250cm9sL2NzczogW1BoeXNpY2FsSWQoMzFZOG0xZHpUZEwpXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJRXhwZXJpbWVudEljb24vY3NzOiBbUGh5c2ljYWxJZCgzMVk4bTFkelRkTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJVHlwb2dyYXBoeSwgY3NzKVxuREVCVUc6IEFtYXpvblVJVHlwb2dyYXBoeSBBcG9sbG8gVmVyc2lvbiA0MTE0MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVR5cG9ncmFwaHlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUeXBvZ3JhcGh5XG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJVHlwb2dyYXBoeS9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCb3hHcm91cCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQm94R3JvdXAgQXBvbGxvIFZlcnNpb24gMzkzMzUuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCb3hHcm91cFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJveEdyb3VwXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCb3hHcm91cC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUJveEdyb3VwL2JkOTc0NWNiNDVjNzNjMzBlOGI5M2QzODg3OTVjNGE2OWIzYjM4ZWUuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQm94R3JvdXAvYmQ5NzQ1Y2I0NWM3M2MzMGU4YjkzZDM4ODc5NWM0YTY5YjNiMzhlZS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQm94R3JvdXAvYmQ5NzQ1Y2I0NWM3M2MzMGU4YjkzZDM4ODc5NWM0YTY5YjNiMzhlZS5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJveEdyb3VwL2NzczogW1BoeXNpY2FsSWQoMDEzejMzdUtoMkwpXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCYXNlQ1NTQGJhc2UvOTIzZmUxMTIyNDc0MzEzNDEwNWJiZThjNTljNDY2MTQ2YTZiZjAzMC5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGJhc2UvOTIzZmUxMTIyNDc0MzEzNDEwNWJiZThjNTljNDY2MTQ2YTZiZjAzMC5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BiYXNlLzkyM2ZlMTEyMjQ3NDMxMzQxMDViYmU4YzU5YzQ2NjE0NmE2YmYwMzAuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUNTU0BiYXNlL2NzczogW1BoeXNpY2FsSWQoNDF3Wmt5VGFXb0wpLCBQaHlzaWNhbElkKDMxWThtMWR6VGRMKSwgUGh5c2ljYWxJZCgwMTN6MzN1S2gyTCksIFBoeXNpY2FsSWQoMDE3RHNLak5RSkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAY29sb3JzLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGNvbG9ycyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGNvbG9yc1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAY29sb3JzXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlQ1NTQGNvbG9ycy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlQ1NTQGNvbG9ycy9jc3M6IFtQaHlzaWNhbElkKDAxMzF2cXdQNVVMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTQGdyaWQsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAZ3JpZCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGdyaWRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGdyaWRcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VDU1NAZ3JpZC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUJhc2VDU1NAZ3JpZC9iNjE1MWJkNTU4MDM4MDFkN2IzOWRiYTI2MzVmYmE3YzNlMjU1MmEzLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAZ3JpZC9iNjE1MWJkNTU4MDM4MDFkN2IzOWRiYTI2MzVmYmE3YzNlMjU1MmEzLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGdyaWQvYjYxNTFiZDU1ODAzODAxZDdiMzlkYmEyNjM1ZmJhN2MzZTI1NTJhMy5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUNTU0BncmlkL2NzczogW1BoeXNpY2FsSWQoNDFFV09PbEJKOUwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAbGF5b3V0LCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGxheW91dCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGxheW91dFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAbGF5b3V0XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlQ1NTQGxheW91dC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUJhc2VDU1NAbGF5b3V0Lzk4MWIzMWI4NzAwYjFkOWFhN2I3N2QyMzU5ZmY5YzQwOWM3ZTE3NDIuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BsYXlvdXQvOTgxYjMxYjg3MDBiMWQ5YWE3Yjc3ZDIzNTlmZjljNDA5YzdlMTc0Mi5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BsYXlvdXQvOTgxYjMxYjg3MDBiMWQ5YWE3Yjc3ZDIzNTlmZjljNDA5YzdlMTc0Mi5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VDU1NAbGF5b3V0L2NzczogW1BoeXNpY2FsSWQoMTFUSXV5U3FyNkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAdXRpbCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0B1dGlsIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAdXRpbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAdXRpbFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQmFzZUNTU0B1dGlsL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJQmFzZUNTU0B1dGlsL2ZiODFhNGI3MjgxZjBkZDFlNDE5ZjVhODk1OGZiYzM2YzM5ZmFhNDAuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0B1dGlsL2ZiODFhNGI3MjgxZjBkZDFlNDE5ZjVhODk1OGZiYzM2YzM5ZmFhNDAuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAdXRpbC9mYjgxYTRiNzI4MWYwZGQxZTQxOWY1YTg5NThmYmMzNmMzOWZhYTQwLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUNTU0B1dGlsL2NzczogW1BoeXNpY2FsSWQoMDFFbG5QaUR4V0wpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAZGl2aWRlcnMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAZGl2aWRlcnMgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BkaXZpZGVyc1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAZGl2aWRlcnNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VDU1NAZGl2aWRlcnMvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCYXNlQ1NTQGRpdmlkZXJzLzkzOTk1NjBhM2E0NWU4OGM5MTVjYWJiMzE5NTkyMmIxMjEzZDVmNTguanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BkaXZpZGVycy85Mzk5NTYwYTNhNDVlODhjOTE1Y2FiYjMxOTU5MjJiMTIxM2Q1ZjU4Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGRpdmlkZXJzLzkzOTk1NjBhM2E0NWU4OGM5MTVjYWJiMzE5NTkyMmIxMjEzZDVmNTguanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VDU1NAZGl2aWRlcnMvY3NzOiBbUGh5c2ljYWxJZCgxMWJHU2dENXBETCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0BuYXYsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAbmF2IEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAbmF2XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BuYXZcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VDU1NAbmF2L2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJQmFzZUNTU0BuYXYvYjFmMDE0ZWJiY2ZiNzU1MmI2N2I3MWFkNTQzMDNkMTQ1MzJjZmI4Ni5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQG5hdi9iMWYwMTRlYmJjZmI3NTUyYjY3YjcxYWQ1NDMwM2QxNDUzMmNmYjg2Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQG5hdi9iMWYwMTRlYmJjZmI3NTUyYjY3YjcxYWQ1NDMwM2QxNDUzMmNmYjg2Lmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlQ1NTQG5hdi9jc3M6IFtQaHlzaWNhbElkKDAxRG01ZUtWeHdMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTQGRyYWdnYWJsZXMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAZHJhZ2dhYmxlcyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGRyYWdnYWJsZXNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGRyYWdnYWJsZXNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VDU1NAZHJhZ2dhYmxlcy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzL2NzczogW1BoeXNpY2FsSWQoMDFJZEtjQnVBZEwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQHNjcm9sbGVycyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQHNjcm9sbGVyc1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlQ1NTQHNjcm9sbGVycy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzLzU2NmZjNWRkNTg2N2I4OWNkOTA0ZDcyNWUwNGM4YTQxMmNiMmIyODYuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BzY3JvbGxlcnMvNTY2ZmM1ZGQ1ODY3Yjg5Y2Q5MDRkNzI1ZTA0YzhhNDEyY2IyYjI4Ni5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BzY3JvbGxlcnMvNTY2ZmM1ZGQ1ODY3Yjg5Y2Q5MDRkNzI1ZTA0YzhhNDEyY2IyYjI4Ni5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUNTU0BzY3JvbGxlcnMvY3NzOiBbUGh5c2ljYWxJZCgwMXktWEFsSSsyTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0B0b3VjaCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0B0b3VjaCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQHRvdWNoXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0B0b3VjaFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQmFzZUNTU0B0b3VjaC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUJhc2VDU1NAdG91Y2gvMmU1MDlmYzc5NDFkMWUwZmRjYTI5MDdlMjdhOGZjZDExYTI0NjI3My5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQHRvdWNoLzJlNTA5ZmM3OTQxZDFlMGZkY2EyOTA3ZTI3YThmY2QxMWEyNDYyNzMuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAdG91Y2gvMmU1MDlmYzc5NDFkMWUwZmRjYTI5MDdlMjdhOGZjZDExYTI0NjI3My5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlQ1NTQHRvdWNoL2NzczogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VDU1MvY3NzOiBbUGh5c2ljYWxJZCg0MXdaa3lUYVdvTCwgMzFZOG0xZHpUZEwsIDAxM3ozM3VLaDJMLCAwMTdEc0tqTlFKTCksIFBoeXNpY2FsSWQoMDEzMXZxd1A1VUwpLCBQaHlzaWNhbElkKDQxRVdPT2xCSjlMKSwgUGh5c2ljYWxJZCgxMVRJdXlTcXI2TCksIFBoeXNpY2FsSWQoMDFFbG5QaUR4V0wpLCBQaHlzaWNhbElkKDExYkdTZ0Q1cERMKSwgUGh5c2ljYWxJZCgwMURtNWVLVnh3TCksIFBoeXNpY2FsSWQoMDFJZEtjQnVBZEwpLCBQaHlzaWNhbElkKDAxeS1YQWxJKzJMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlBbGVydCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQWxlcnQgQXBvbGxvIFZlcnNpb24gNzYyODcuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlBbGVydFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUFsZXJ0XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlBbGVydC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlBbGVydC9mNzkwYWUwNjU5NzIwOTQwNTA4NjQyNTBmYjFjYmQ1NjE4NTU0YWViLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFsZXJ0L2Y3OTBhZTA2NTk3MjA5NDA1MDg2NDI1MGZiMWNiZDU2MTg1NTRhZWIuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUFsZXJ0L2Y3OTBhZTA2NTk3MjA5NDA1MDg2NDI1MGZiMWNiZDU2MTg1NTRhZWIuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUFsZXJ0L2NzczogW1BoeXNpY2FsSWQoMjFONGtVSDdweEwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhZGdlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYWRnZSBBcG9sbG8gVmVyc2lvbiA3Mzk1Mi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhZGdlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFkZ2VcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhZGdlL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCYWRnZS9mYTNmYzhmZTc0MmNhODRhNjllYmJjMzA1N2RmZThhMzNhNDNiMDRmLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhZGdlL2ZhM2ZjOGZlNzQyY2E4NGE2OWViYmMzMDU3ZGZlOGEzM2E0M2IwNGYuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhZGdlL2ZhM2ZjOGZlNzQyY2E4NGE2OWViYmMzMDU3ZGZlOGEzM2E0M2IwNGYuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYWRnZS9jc3M6IFtQaHlzaWNhbElkKDAxb0RSM0lVTE5MKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCb3hHcm91cCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQm94R3JvdXAgQXBvbGxvIFZlcnNpb24gMzkzMzUuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCb3hHcm91cFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJveEdyb3VwXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQm94R3JvdXAvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQnV0dG9uLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCdXR0b24gQXBvbGxvIFZlcnNpb24gOTE0NTguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCdXR0b25cbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJ1dHRvbi9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCdXR0b25AY29udHJvbCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQnV0dG9uQGNvbnRyb2wgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uQGNvbnRyb2xcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCdXR0b25AY29udHJvbFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQnV0dG9uQGNvbnRyb2wvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQnV0dG9uQGJ1dHRvbkpTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCdXR0b25AYnV0dG9uSlMgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uQGJ1dHRvbkpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQnV0dG9uQGJ1dHRvbkpTXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCdXR0b25AYnV0dG9uSlMvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTL2Nzc1xuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQnV0dG9uQGJ1dHRvbkpTL2NzczogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCdXR0b25AY29udHJvbC83ZjIxOTE0ZTRkMDgwZTNlMGMyYTU4MTE4MGI1ZGJkYmY4NGVjNzA1Lmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJ1dHRvbkBjb250cm9sLzdmMjE5MTRlNGQwODBlM2UwYzJhNTgxMTgwYjVkYmRiZjg0ZWM3MDUuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJ1dHRvbkBjb250cm9sLzdmMjE5MTRlNGQwODBlM2UwYzJhNTgxMTgwYjVkYmRiZjg0ZWM3MDUuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJ1dHRvbkBjb250cm9sL2NzczogW1BoeXNpY2FsSWQoNDFDWU5HcEdsckwpXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQnV0dG9uL2NzczogW1BoeXNpY2FsSWQoNDFDWU5HcEdsckwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUltYWdlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlJbWFnZSBBcG9sbG8gVmVyc2lvbiA3Njk3NC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUltYWdlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSW1hZ2VcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUltYWdlL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUltYWdlL2M0NjJlZGQ5OGJiMGIyZDVjZDhhNWU2ZDg5YmU1OTk4MTYxMTU4MTIuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJSW1hZ2UvYzQ2MmVkZDk4YmIwYjJkNWNkOGE1ZTZkODliZTU5OTgxNjExNTgxMi5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSW1hZ2UvYzQ2MmVkZDk4YmIwYjJkNWNkOGE1ZTZkODliZTU5OTgxNjExNTgxMi5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUltYWdlL2NzczogW1BoeXNpY2FsSWQoMDFYUEhKazYwLUwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUljb24sIGNzcylcbkRFQlVHOiBBbWF6b25VSUljb24gQXBvbGxvIFZlcnNpb24gNTY4NDguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlJY29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSWNvblxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUljb24vY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRXhwZXJpbWVudEljb24sIGNzcylcbkRFQlVHOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uIEFwb2xsbyBWZXJzaW9uIDM5NDcxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlFeHBlcmltZW50SWNvblxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUV4cGVyaW1lbnRJY29uL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUxpbmssIGNzcylcbkRFQlVHOiBBbWF6b25VSUxpbmsgQXBvbGxvIFZlcnNpb24gNzQyMDEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlMaW5rXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTGlua1xuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJTGluay9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbbWFya2V0cGxhY2U6dXNdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUxpbmsvMmJiODY3MTIxY2JlMmU1MjM1ZGY2OWVjYzc1NjE2ZmEzZTY0NzcwNy5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlMaW5rLzJiYjg2NzEyMWNiZTJlNTIzNWRmNjllY2M3NTYxNmZhM2U2NDc3MDcuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUxpbmsvMmJiODY3MTIxY2JlMmU1MjM1ZGY2OWVjYzc1NjE2ZmEzZTY0NzcwNy5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJTGluay9jc3M6IFtQaHlzaWNhbElkKDExNHkwU0lQK3lMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlNZXRlciwgY3NzKVxuREVCVUc6IEFtYXpvblVJTWV0ZXIgQXBvbGxvIFZlcnNpb24gOTI5MTcuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlNZXRlclxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSU1ldGVyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlNZXRlci9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlMvY3NzXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSU1ldGVyLzdkMjAzNWU0ZWJkODFhMzU4YmRjN2JiNTFjMWY4OTdhYmYxM2I0ODcuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJTWV0ZXIvN2QyMDM1ZTRlYmQ4MWEzNThiZGM3YmI1MWMxZjg5N2FiZjEzYjQ4Ny5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTWV0ZXIvN2QyMDM1ZTRlYmQ4MWEzNThiZGM3YmI1MWMxZjg5N2FiZjEzYjQ4Ny5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJTWV0ZXIvY3NzOiBbUGh5c2ljYWxJZCgyMWFQaEZ5K3JpTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJVGFibGUsIGNzcylcbkRFQlVHOiBBbWF6b25VSVRhYmxlIEFwb2xsbyBWZXJzaW9uIDc1ODAzLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVGFibGVcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUYWJsZVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJVGFibGUvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVRhYmxlL2U1NWI1YTE0ZTlkNDRlZGFmZjY1MDVjYjE3ZmY0MzEzNjUyNGMyMjEuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVGFibGUvZTU1YjVhMTRlOWQ0NGVkYWZmNjUwNWNiMTdmZjQzMTM2NTI0YzIyMS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVGFibGUvZTU1YjVhMTRlOWQ0NGVkYWZmNjUwNWNiMTdmZjQzMTM2NTI0YzIyMS5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJVGFibGUvY3NzOiBbUGh5c2ljYWxJZCgxMWduZUEzTXRKTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJTGlzdCwgY3NzKVxuREVCVUc6IEFtYXpvblVJTGlzdCBBcG9sbG8gVmVyc2lvbiA3Mzk3My4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUxpc3RcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlMaXN0XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlMaXN0L2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlMaXN0LzMzMGIwZDBmZWVjNTU0NmUyMjU0NDRhZGNhNmQ3OGViNzIyZTgyMS5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlMaXN0LzMzMGIwZDBmZWVjNTU0NmUyMjU0NDRhZGNhNmQ3OGViNzIyZTgyMS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTGlzdC8zMzBiMGQwZmVlYzU1NDZlMjI1NDQ0YWRjYTZkNzhlYjcyMmU4MjEuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUxpc3QvY3NzOiBbUGh5c2ljYWxJZCgyMWZlY0c4cFV6TCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUGFnaW5hdGlvbiwgY3NzKVxuREVCVUc6IEFtYXpvblVJUGFnaW5hdGlvbiBBcG9sbG8gVmVyc2lvbiA5NDI1Ni4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBhZ2luYXRpb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQYWdpbmF0aW9uXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQYWdpbmF0aW9uL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJ1dHRvbiwgY3NzKVxuREVCVUc6IEFtYXpvblVJQnV0dG9uIEFwb2xsbyBWZXJzaW9uIDkxNDU4LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQnV0dG9uXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQnV0dG9uL2Nzc1xuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlQYWdpbmF0aW9uL2E4MGQxYmEzZTQwODc1YjEwMzNmYWEyMmU3NzdkOTUyZWFlNzI1NDguanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUGFnaW5hdGlvbi9hODBkMWJhM2U0MDg3NWIxMDMzZmFhMjJlNzc3ZDk1MmVhZTcyNTQ4Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQYWdpbmF0aW9uL2E4MGQxYmEzZTQwODc1YjEwMzNmYWEyMmU3NzdkOTUyZWFlNzI1NDguanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVBhZ2luYXRpb24vY3NzOiBbUGh5c2ljYWxJZCgwMXVsR3pCVzg4TCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRm9udCwgY3NzKVxuREVCVUc6IEFtYXpvblVJRm9udCBBcG9sbG8gVmVyc2lvbiA2MTE3NC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUZvbnRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlGb250XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlGb250L2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbbWFya2V0cGxhY2U6dXNdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUZvbnQvZjFkZDc3ZmM2MTI2YWZkOWE1OTVkNzI4MDZlMDBkMmM4ZWViNTBiMC5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlGb250L2YxZGQ3N2ZjNjEyNmFmZDlhNTk1ZDcyODA2ZTAwZDJjOGVlYjUwYjAuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUZvbnQvZjFkZDc3ZmM2MTI2YWZkOWE1OTVkNzI4MDZlMDBkMmM4ZWViNTBiMC5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUZvbnQvY3NzOiBbUGh5c2ljYWxJZCgwMUNGVWdzQS1ZTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRm9ybSwgY3NzKVxuREVCVUc6IEFtYXpvblVJRm9ybSBBcG9sbG8gVmVyc2lvbiA3MjkyNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUZvcm1cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlGb3JtXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlGb3JtL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW21hcmtldHBsYWNlOnVzXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlGb3JtLzc2ZjliYzQ0NWM0NzIyZTI3YWUzNDZhYjBlOWUzYTdkMzA1YWY5MmIuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRm9ybS83NmY5YmM0NDVjNDcyMmUyN2FlMzQ2YWIwZTllM2E3ZDMwNWFmOTJiLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlGb3JtLzc2ZjliYzQ0NWM0NzIyZTI3YWUzNDZhYjBlOWUzYTdkMzA1YWY5MmIuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUZvcm0vY3NzOiBbUGh5c2ljYWxJZCgzMUM4MElpWGFsTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJU3Bpbm5lciwgY3NzKVxuREVCVUc6IEFtYXpvblVJU3Bpbm5lciBBcG9sbG8gVmVyc2lvbiA3NzI5MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVNwaW5uZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlTcGlubmVyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlTcGlubmVyL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVNwaW5uZXIvZDAxNWRmNjMwNjI4ZWZmNDM0NzZlNDNjMTU3M2NhOTAyMGFjZTExZi5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlTcGlubmVyL2QwMTVkZjYzMDYyOGVmZjQzNDc2ZTQzYzE1NzNjYTkwMjBhY2UxMWYuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVNwaW5uZXIvZDAxNWRmNjMwNjI4ZWZmNDM0NzZlNDNjMTU3M2NhOTAyMGFjZTExZi5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJU3Bpbm5lci9jc3M6IFtQaHlzaWNhbElkKDExcW91cjNORDBMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQcmljZSwgY3NzKVxuREVCVUc6IEFtYXpvblVJUHJpY2UgQXBvbGxvIFZlcnNpb24gNzMxNjAuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQcmljZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVByaWNlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQcmljZS9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVByaWNlLzFjY2JkZGIyNzQyNzRjMDQ3MGQwYjIwMDdhODExYjM4MTgwMDZiZGUuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUHJpY2UvMWNjYmRkYjI3NDI3NGMwNDcwZDBiMjAwN2E4MTFiMzgxODAwNmJkZS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUHJpY2UvMWNjYmRkYjI3NDI3NGMwNDcwZDBiMjAwN2E4MTFiMzgxODAwNmJkZS5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUHJpY2UvY3NzOiBbUGh5c2ljYWxJZCgxMWdLQ0NLUVYrTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQ2Fyb3VzZWwsIGNzcylcbkRFQlVHOiBBbWF6b25VSUNhcm91c2VsIEFwb2xsbyBWZXJzaW9uIDEwNzgyNi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUNhcm91c2VsXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQ2Fyb3VzZWxcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUNhcm91c2VsL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlDYXJvdXNlbC84ODU2ZjFjNWU5MmQ1ZGU4N2E2MGZkNjdkNWE4ZjdkNDg0YWJiZjdkLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUNhcm91c2VsLzg4NTZmMWM1ZTkyZDVkZTg3YTYwZmQ2N2Q1YThmN2Q0ODRhYmJmN2QuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUNhcm91c2VsLzg4NTZmMWM1ZTkyZDVkZTg3YTYwZmQ2N2Q1YThmN2Q0ODRhYmJmN2QuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUNhcm91c2VsL2NzczogW1BoeXNpY2FsSWQoMTEwNjFIeG5FdkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUNvbXBvbmVudHMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUNvbXBvbmVudHMgQXBvbGxvIFZlcnNpb24gMTA5NzI5LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQ29tcG9uZW50c1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUNvbXBvbmVudHNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUNvbXBvbmVudHMvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJ1dHRvbiwgY3NzKVxuREVCVUc6IEFtYXpvblVJQnV0dG9uIEFwb2xsbyBWZXJzaW9uIDkxNDU4LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQnV0dG9uXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQnV0dG9uL2Nzc1xuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlDb21wb25lbnRzLzRhZjhhYTBmZjMwNDUxMDUyNjhjODRjNWI0MTUzOTQ3MmYyMmYwNy5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlDb21wb25lbnRzLzRhZjhhYTBmZjMwNDUxMDUyNjhjODRjNWI0MTUzOTQ3MmYyMmYwNy5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQ29tcG9uZW50cy80YWY4YWEwZmYzMDQ1MTA1MjY4Yzg0YzViNDE1Mzk0NzJmMjJmMDcuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUNvbXBvbmVudHMvY3NzOiBbUGh5c2ljYWxJZCgxMW9IdDJIWXhuTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJVGFicywgY3NzKVxuREVCVUc6IEFtYXpvblVJVGFicyBBcG9sbG8gVmVyc2lvbiA5MTYxMi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVRhYnNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUYWJzXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlUYWJzL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9jc3NcbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJVGFicy84YmM1MDE3OWY5NDc2OTc5YzdjNGU5ZTcyZDhkMGE0Mjg1ZTVkMDdlLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVRhYnMvOGJjNTAxNzlmOTQ3Njk3OWM3YzRlOWU3MmQ4ZDBhNDI4NWU1ZDA3ZS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVGFicy84YmM1MDE3OWY5NDc2OTc5YzdjNGU5ZTcyZDhkMGE0Mjg1ZTVkMDdlLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlUYWJzL2NzczogW1BoeXNpY2FsSWQoMDEzUkRodzlob0wpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUFjY29yZGlvbiwgY3NzKVxuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uIEFwb2xsbyBWZXJzaW9uIDkwNjkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQWNjb3JkaW9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWNjb3JkaW9uXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlBY2NvcmRpb24vY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0cywgY3NzKVxuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0cyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0c1xuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0cy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlBY2NvcmRpb25AanNBc3NldHMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0cyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlBY2NvcmRpb25AanNBc3NldHNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlBY2NvcmRpb25AanNBc3NldHNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0cy9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlMvY3NzXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlBY2NvcmRpb25AanNBc3NldHMvY3NzOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzLzhjNzg4OWIwNWYyOTBiZmQ1N2JjODQ0NGYwNDQ3ZDJhY2ExZmQwODcuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0cy84Yzc4ODliMDVmMjkwYmZkNTdiYzg0NDRmMDQ0N2QyYWNhMWZkMDg3Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzLzhjNzg4OWIwNWYyOTBiZmQ1N2JjODQ0NGYwNDQ3ZDJhY2ExZmQwODcuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUFjY29yZGlvbkBjc3NBc3NldHMvY3NzOiBbUGh5c2ljYWxJZCgxMUpRdG5MLTZlTCldXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlBY2NvcmRpb24vY3NzOiBbUGh5c2ljYWxJZCgxMUpRdG5MLTZlTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRXhwYW5kZXIsIGNzcylcbkRFQlVHOiBBbWF6b25VSUV4cGFuZGVyIEFwb2xsbyBWZXJzaW9uIDkyNTg3LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwYW5kZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlFeHBhbmRlclxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJRXhwYW5kZXIvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUFsZXJ0LCBjc3MpXG5ERUJVRzogQW1hem9uVUlBbGVydCBBcG9sbG8gVmVyc2lvbiA3NjI4Ny4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFsZXJ0XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWxlcnRcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlBbGVydC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFttYXJrZXRwbGFjZTp1c11cbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJRXhwYW5kZXIvN2NiMDZhYmQwNGM0NWNiNWRkZjhlMjIxOGM1N2Q3MTFlZTZjNzQyNi5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlFeHBhbmRlci83Y2IwNmFiZDA0YzQ1Y2I1ZGRmOGUyMjE4YzU3ZDcxMWVlNmM3NDI2Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlFeHBhbmRlci83Y2IwNmFiZDA0YzQ1Y2I1ZGRmOGUyMjE4YzU3ZDcxMWVlNmM3NDI2Lmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlFeHBhbmRlci9jc3M6IFtQaHlzaWNhbElkKDExNnY2dVl2TjZMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlTd2l0Y2gsIGNzcylcbkRFQlVHOiBBbWF6b25VSVN3aXRjaCBBcG9sbG8gVmVyc2lvbiA5MTkwNi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVN3aXRjaFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVN3aXRjaFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJU3dpdGNoL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVN3aXRjaC83NDY0YTVhN2NmNTI5N2JlM2NhZmU3MmMxZTA1NzU3OTlhZDQ4NmIzLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVN3aXRjaC83NDY0YTVhN2NmNTI5N2JlM2NhZmU3MmMxZTA1NzU3OTlhZDQ4NmIzLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlTd2l0Y2gvNzQ2NGE1YTdjZjUyOTdiZTNjYWZlNzJjMWUwNTc1Nzk5YWQ0ODZiMy5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJU3dpdGNoL2NzczogW1BoeXNpY2FsSWQoMTFqdFhSbXBwd0wpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVByb2dyZXNzQmFyLCBjc3MpXG5ERUJVRzogQW1hem9uVUlQcm9ncmVzc0JhciBBcG9sbG8gVmVyc2lvbiA5MzAxNS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb2dyZXNzQmFyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUHJvZ3Jlc3NCYXJcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVByb2dyZXNzQmFyL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9jc3NcbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJUHJvZ3Jlc3NCYXIvN2FiOWVmNzQyOTUzY2Y2NDkwNGNlM2NmYzk3OTdhMjY2MWIxZmVmMy5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQcm9ncmVzc0Jhci83YWI5ZWY3NDI5NTNjZjY0OTA0Y2UzY2ZjOTc5N2EyNjYxYjFmZWYzLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9ncmVzc0Jhci83YWI5ZWY3NDI5NTNjZjY0OTA0Y2UzY2ZjOTc5N2EyNjYxYjFmZWYzLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQcm9ncmVzc0Jhci9jc3M6IFtQaHlzaWNhbElkKDAxUXJXdVJyWi1MKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQb3BvdmVyLCBjc3MpXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyIEFwb2xsbyBWZXJzaW9uIDExMDUwMi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQb3BvdmVyL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVBvcG92ZXJAYmFzZSwgY3NzKVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlckBiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBvcG92ZXJAYmFzZVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3ZlckBiYXNlL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlMvY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJSWNvbiwgY3NzKVxuREVCVUc6IEFtYXpvblVJSWNvbiBBcG9sbG8gVmVyc2lvbiA1Njg0OC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUljb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlJY29uXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJSWNvbi9jc3NcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUZvcm0sIGNzcylcbkRFQlVHOiBBbWF6b25VSUZvcm0gQXBvbGxvIFZlcnNpb24gNzI5MjQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlGb3JtXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJRm9ybVxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUZvcm0vY3NzXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQnV0dG9uLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCdXR0b24gQXBvbGxvIFZlcnNpb24gOTE0NTguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCdXR0b25cbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCdXR0b24vY3NzXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVBvcG92ZXJAYmFzZS9mZDE5ZWNhYmQ0YzdkZGIwOTI2YTdlNTQ0ZWI2N2NhODI2MWU3MGEzLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAYmFzZS9mZDE5ZWNhYmQ0YzdkZGIwOTI2YTdlNTQ0ZWI2N2NhODI2MWU3MGEzLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyQGJhc2UvZmQxOWVjYWJkNGM3ZGRiMDkyNmE3ZTU0NGViNjdjYTgyNjFlNzBhMy5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUG9wb3ZlckBiYXNlL2NzczogW1BoeXNpY2FsSWQoMjF6dVJ6dEtqdEwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVBvcG92ZXJAZm9ybUVsZW1lbnRzLCBjc3MpXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyQGZvcm1FbGVtZW50cyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQb3BvdmVyQGZvcm1FbGVtZW50c1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBvcG92ZXJAZm9ybUVsZW1lbnRzXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQb3BvdmVyQGZvcm1FbGVtZW50cy9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVBvcG92ZXJAZm9ybUVsZW1lbnRzLzk4MzM3ZmI2NTAxODQ2ZWZkYTBkMTg5MDA3OWE4MTVmNWVmYzBiYzMuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckBmb3JtRWxlbWVudHMvOTgzMzdmYjY1MDE4NDZlZmRhMGQxODkwMDc5YTgxNWY1ZWZjMGJjMy5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBmb3JtRWxlbWVudHMvOTgzMzdmYjY1MDE4NDZlZmRhMGQxODkwMDc5YTgxNWY1ZWZjMGJjMy5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUG9wb3ZlckBmb3JtRWxlbWVudHMvY3NzOiBbUGh5c2ljYWxJZCgxMVF5cUc4eWlxTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUG9wb3ZlckBtb2RhbCwgY3NzKVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlckBtb2RhbCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQb3BvdmVyQG1vZGFsXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBtb2RhbFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3ZlckBtb2RhbC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9jc3NcbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJUG9wb3ZlckBtb2RhbC9iMmM0NGQ0ZmNjODZhYTMxZDNlOTQ0NTIxMWU3MmFmZDQwMWU3ZWYzLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAbW9kYWwvYjJjNDRkNGZjYzg2YWEzMWQzZTk0NDUyMTFlNzJhZmQ0MDFlN2VmMy5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBtb2RhbC9iMmM0NGQ0ZmNjODZhYTMxZDNlOTQ0NTIxMWU3MmFmZDQwMWU3ZWYzLmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW3JlbmRlcmluZ19lbmdpbmU6bm90LXRyaWRlbnRdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQb3BvdmVyQG1vZGFsL2NzczogW1BoeXNpY2FsSWQoMTFLMjRlT0pnNEwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVBvcG92ZXJAY2hhbmdlb3ZlciwgY3NzKVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAY2hhbmdlb3ZlclxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBvcG92ZXJAY2hhbmdlb3ZlclxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlQb3BvdmVyQGNoYW5nZW92ZXIvNjQwNDc0ZjRkM2EyYjdkYjNlZGY4ZmQ1MzE5ZDAyYjZhMmRlM2FiNS5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQb3BvdmVyQGNoYW5nZW92ZXIvNjQwNDc0ZjRkM2EyYjdkYjNlZGY4ZmQ1MzE5ZDAyYjZhMmRlM2FiNS5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyLzY0MDQ3NGY0ZDNhMmI3ZGIzZWRmOGZkNTMxOWQwMmI2YTJkZTNhYjUuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVBvcG92ZXJAY2hhbmdlb3Zlci9jc3M6IFtQaHlzaWNhbElkKDExRjIrT0J6THlMKV1cbkRFQlVHOiBTY2FuIGRpZCBub3QgbWF0Y2ggYW55IGZsYWdzOiB7fVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQb3BvdmVyQHJlYWR5LXRyZWF0bWVudCwgY3NzKVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnQgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyQHJlYWR5LXRyZWF0bWVudFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnQvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnQvY3NzOiBbUGh5c2ljYWxJZCgwMTg5MCtWd2s4TCldXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQb3BvdmVyL2NzczogW1BoeXNpY2FsSWQoMjF6dVJ6dEtqdEwpLCBQaHlzaWNhbElkKDExUXlxRzh5aXFMKSwgUGh5c2ljYWxJZCgxMUsyNGVPSmc0TCksIFBoeXNpY2FsSWQoMTFGMitPQnpMeUwpLCBQaHlzaWNhbElkKDAxODkwK1Z3azhMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCb3R0b21TaGVldCwgY3NzKVxuREVCVUc6IEFtYXpvblVJQm90dG9tU2hlZXQgQXBvbGxvIFZlcnNpb24gOTg3MDkuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCb3R0b21TaGVldFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJvdHRvbVNoZWV0XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCb3R0b21TaGVldC9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTL2Nzc1xuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCb3R0b21TaGVldC8xNDA2ZGMwZjcwNjI2OGZkNzc4NTU1MTU0ZGNiZTE2ZjJhYmIwZTg1Lmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJvdHRvbVNoZWV0LzE0MDZkYzBmNzA2MjY4ZmQ3Nzg1NTUxNTRkY2JlMTZmMmFiYjBlODUuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJvdHRvbVNoZWV0LzE0MDZkYzBmNzA2MjY4ZmQ3Nzg1NTUxNTRkY2JlMTZmMmFiYjBlODUuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJvdHRvbVNoZWV0L2NzczogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQcm9maWxlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlQcm9maWxlIEFwb2xsbyBWZXJzaW9uIDc0NDYwLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUHJvZmlsZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVByb2ZpbGVcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVByb2ZpbGUvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlQcm9maWxlLzZlNTJlOTAwNWM1ZTgxMTBlOGVjY2JjMTViNThhMTA4N2Q1MzY0Y2MuanNvblxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUHJvZmlsZS82ZTUyZTkwMDVjNWU4MTEwZThlY2NiYzE1YjU4YTEwODdkNTM2NGNjLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9maWxlLzZlNTJlOTAwNWM1ZTgxMTBlOGVjY2JjMTViNThhMTA4N2Q1MzY0Y2MuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVByb2ZpbGUvY3NzOiBbUGh5c2ljYWxJZCgxMVkwNURURUw2TCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRGV2YmFyLCBjc3MpXG5ERUJVRzogQW1hem9uVUlEZXZiYXIgQXBvbGxvIFZlcnNpb24gODYwMTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlEZXZiYXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlEZXZiYXJcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSURldmJhci9jc3NcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlEZXZiYXIvY3NzOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVRydW5jYXRlLCBjc3MpXG5ERUJVRzogQW1hem9uVUlUcnVuY2F0ZSBBcG9sbG8gVmVyc2lvbiA4NDUwMC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVRydW5jYXRlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVHJ1bmNhdGVcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVRydW5jYXRlL2Nzc1xuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgY3NzKVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9jc3NcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVRydW5jYXRlL2NzczogW1BoeXNpY2FsSWQoMDFjYlMzVUsxMUwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUNhcmRVSSwgY3NzKVxuREVCVUc6IEFtYXpvblVJQ2FyZFVJIEFwb2xsbyBWZXJzaW9uIDgxMDk0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQ2FyZFVJXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQ2FyZFVJXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlDYXJkVUkvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSUNhcmRVSS9kOGViNWJjOWViNzdlODNkZmJmMzMwNThmYmRlOTZkOWNjYWMwMjE0Lmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUNhcmRVSS9kOGViNWJjOWViNzdlODNkZmJmMzMwNThmYmRlOTZkOWNjYWMwMjE0Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlDYXJkVUkvZDhlYjViYzllYjc3ZTgzZGZiZjMzMDU4ZmJkZTk2ZDljY2FjMDIxNC5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtyZW5kZXJpbmdfZW5naW5lOm5vdC10cmlkZW50XVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQ2FyZFVJL2NzczogW1BoeXNpY2FsSWQoMjFGODVhbTB5RkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUNvbXBhdEpTLCBjc3MpXG5ERUJVRzogQW1hem9uVUlDb21wYXRKUyBBcG9sbG8gVmVyc2lvbiA4NjIyMC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUNvbXBhdEpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQ29tcGF0SlNcbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSUNvbXBhdEpTL2Nzc1xuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUFPSywgY3NzKVxuREVCVUc6IEFtYXpvblVJQU9LIEFwb2xsbyBWZXJzaW9uIDc0NzkwLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQU9LXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQU9LXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlBT0svY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGNzcylcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvY3NzXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlBT0svYjNmNDk0NjFlNTE1YmUyNjljN2E1ZTRhMmRkYmEzOWJhMjBjOGU3Ny5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlBT0svYjNmNDk0NjFlNTE1YmUyNjljN2E1ZTRhMmRkYmEzOWJhMjBjOGU3Ny5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQU9LL2IzZjQ5NDYxZTUxNWJlMjY5YzdhNWU0YTJkZGJhMzliYTIwYzhlNzcuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbcmVuZGVyaW5nX2VuZ2luZTpub3QtdHJpZGVudF1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUFPSy9jc3M6IFtQaHlzaWNhbElkKDAxZ2lNRVArZGpMKV1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSS9jc3M6IFtQaHlzaWNhbElkKDExRUlRNUlHcWFMLCAwMVpUSFRaT2JuTCksIFBoeXNpY2FsSWQoNDF3Wmt5VGFXb0wsIDMxWThtMWR6VGRMLCAwMTN6MzN1S2gyTCwgMDE3RHNLak5RSkwsIDAxMzF2cXdQNVVMLCA0MUVXT09sQko5TCwgMTFUSXV5U3FyNkwsIDAxRWxuUGlEeFdMLCAxMWJHU2dENXBETCwgMDFEbTVlS1Z4d0wsIDAxSWRLY0J1QWRMLCAwMXktWEFsSSsyTCksIFBoeXNpY2FsSWQoMjFONGtVSDdweEwpLCBQaHlzaWNhbElkKDAxb0RSM0lVTE5MKSwgUGh5c2ljYWxJZCg0MUNZTkdwR2xyTCksIFBoeXNpY2FsSWQoMDFYUEhKazYwLUwpLCBQaHlzaWNhbElkKDExNHkwU0lQK3lMKSwgUGh5c2ljYWxJZCgyMWFQaEZ5K3JpTCksIFBoeXNpY2FsSWQoMTFnbmVBM010SkwpLCBQaHlzaWNhbElkKDIxZmVjRzhwVXpMKSwgUGh5c2ljYWxJZCgwMXVsR3pCVzg4TCksIFBoeXNpY2FsSWQoMDFDRlVnc0EtWUwpLCBQaHlzaWNhbElkKDMxQzgwSWlYYWxMKSwgUGh5c2ljYWxJZCgxMXFvdXIzTkQwTCksIFBoeXNpY2FsSWQoMTFnS0NDS1FWK0wpLCBQaHlzaWNhbElkKDExMDYxSHhuRXZMKSwgUGh5c2ljYWxJZCgxMW9IdDJIWXhuTCksIFBoeXNpY2FsSWQoMDEzUkRodzlob0wpLCBQaHlzaWNhbElkKDExSlF0bkwtNmVMKSwgUGh5c2ljYWxJZCgxMTZ2NnVZdk42TCksIFBoeXNpY2FsSWQoMTFqdFhSbXBwd0wpLCBQaHlzaWNhbElkKDAxUXJXdVJyWi1MKSwgUGh5c2ljYWxJZCgyMXp1Unp0S2p0TCwgMTFReXFHOHlpcUwsIDExSzI0ZU9KZzRMLCAxMUYyK09Cekx5TCwgMDE4OTArVndrOEwpLCBQaHlzaWNhbElkKDExWTA1RFRFTDZMKSwgUGh5c2ljYWxJZCgwMWNiUzNVSzExTCksIFBoeXNpY2FsSWQoMjFGODVhbTB5RkwpLCBQaHlzaWNhbElkKDAxZ2lNRVArZGpMKV1cbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlcbkRFQlVHOiBBbWF6b25VSSBBcG9sbG8gVmVyc2lvbiAxMTYwNTYuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlCYXNlSlNAQVxuREVCVUc6IEFtYXpvblVJQmFzZUpTQEEgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQEFcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAQVxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAYmFzZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmUgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUpTQHByZWxvYWRcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BwcmVsb2FkIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BwcmVsb2FkXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQHByZWxvYWRcbkRFQlVHOiBTY2FuIGRpZCBub3QgbWF0Y2ggYW55IGZsYWdzOiB7fVxuREVCVUc6IFNjYW4gZGlkIG5vdCBtYXRjaCBhbnkgZmxhZ3M6IHt9XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUpTQHRvdWNoXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAdG91Y2ggQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQHRvdWNoXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQHRvdWNoXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJVHlwb2dyYXBoeVxuREVCVUc6IEFtYXpvblVJVHlwb2dyYXBoeSBBcG9sbG8gVmVyc2lvbiA0MTE0MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVR5cG9ncmFwaHlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUeXBvZ3JhcGh5XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJVHlwb2dyYXBoeUBjb250cm9sXG5ERUJVRzogQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2wgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVHlwb2dyYXBoeUBjb250cm9sXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVHlwb2dyYXBoeUBjb250cm9sXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlXG5ERUJVRzogQW1hem9uVUlUeXBvZ3JhcGh5QGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVHlwb2dyYXBoeUBiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVHlwb2dyYXBoeUBiYXNlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJSWNvblxuREVCVUc6IEFtYXpvblVJSWNvbiBBcG9sbG8gVmVyc2lvbiA1Njg0OC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUljb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlJY29uXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJRXhwZXJpbWVudEljb25cbkRFQlVHOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uIEFwb2xsbyBWZXJzaW9uIDM5NDcxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlFeHBlcmltZW50SWNvblxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2xcbkRFQlVHOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25AY29udHJvbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2xcbkRFQlVHOiBTY2FuIGRpZCBub3QgbWF0Y2ggYW55IGZsYWdzOiB7fVxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJveEdyb3VwXG5ERUJVRzogQW1hem9uVUlCb3hHcm91cCBBcG9sbG8gVmVyc2lvbiAzOTMzNS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJveEdyb3VwXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQm94R3JvdXBcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlCYXNlQ1NTQGNvbG9yc1xuREVCVUc6IEFtYXpvblVJQmFzZUNTU0Bjb2xvcnMgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0Bjb2xvcnNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGNvbG9yc1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJhc2VDU1NAZ3JpZFxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0BncmlkIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAZ3JpZFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAZ3JpZFxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJhc2VDU1NAbGF5b3V0XG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGxheW91dCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGxheW91dFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAbGF5b3V0XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUNTU0B1dGlsXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQHV0aWwgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0B1dGlsXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0B1dGlsXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUNTU0BkaXZpZGVyc1xuREVCVUc6IEFtYXpvblVJQmFzZUNTU0BkaXZpZGVycyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGRpdmlkZXJzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BkaXZpZGVyc1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJhc2VDU1NAbmF2XG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQG5hdiBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQG5hdlxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAbmF2XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGRyYWdnYWJsZXMgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQmFzZUNTU0BzY3JvbGxlcnNcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BzY3JvbGxlcnNcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlCYXNlQ1NTQHRvdWNoXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQHRvdWNoIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAdG91Y2hcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQHRvdWNoXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQWxlcnRcbkRFQlVHOiBBbWF6b25VSUFsZXJ0IEFwb2xsbyBWZXJzaW9uIDc2Mjg3LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQWxlcnRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlBbGVydFxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJhZGdlXG5ERUJVRzogQW1hem9uVUlCYWRnZSBBcG9sbG8gVmVyc2lvbiA3Mzk1Mi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhZGdlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFkZ2VcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlCdXR0b25cbkRFQlVHOiBBbWF6b25VSUJ1dHRvbiBBcG9sbG8gVmVyc2lvbiA5MTQ1OC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJ1dHRvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJ1dHRvblxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUJ1dHRvbkBjb250cm9sXG5ERUJVRzogQW1hem9uVUlCdXR0b25AY29udHJvbCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25AY29udHJvbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJ1dHRvbkBjb250cm9sXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQnV0dG9uQGJ1dHRvbkpTXG5ERUJVRzogQW1hem9uVUlCdXR0b25AYnV0dG9uSlMgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uQGJ1dHRvbkpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQnV0dG9uQGJ1dHRvbkpTXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJSW1hZ2VcbkRFQlVHOiBBbWF6b25VSUltYWdlIEFwb2xsbyBWZXJzaW9uIDc2OTc0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJSW1hZ2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlJbWFnZVxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUxpbmtcbkRFQlVHOiBBbWF6b25VSUxpbmsgQXBvbGxvIFZlcnNpb24gNzQyMDEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlMaW5rXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTGlua1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSU1ldGVyXG5ERUJVRzogQW1hem9uVUlNZXRlciBBcG9sbG8gVmVyc2lvbiA5MjkxNy4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSU1ldGVyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTWV0ZXJcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlUYWJsZVxuREVCVUc6IEFtYXpvblVJVGFibGUgQXBvbGxvIFZlcnNpb24gNzU4MDMuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUYWJsZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVRhYmxlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJTGlzdFxuREVCVUc6IEFtYXpvblVJTGlzdCBBcG9sbG8gVmVyc2lvbiA3Mzk3My4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUxpc3RcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlMaXN0XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUGFnaW5hdGlvblxuREVCVUc6IEFtYXpvblVJUGFnaW5hdGlvbiBBcG9sbG8gVmVyc2lvbiA5NDI1Ni4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBhZ2luYXRpb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQYWdpbmF0aW9uXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJRm9udFxuREVCVUc6IEFtYXpvblVJRm9udCBBcG9sbG8gVmVyc2lvbiA2MTE3NC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUZvbnRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlGb250XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJRm9ybVxuREVCVUc6IEFtYXpvblVJRm9ybSBBcG9sbG8gVmVyc2lvbiA3MjkyNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUZvcm1cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlGb3JtXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJU3Bpbm5lclxuREVCVUc6IEFtYXpvblVJU3Bpbm5lciBBcG9sbG8gVmVyc2lvbiA3NzI5MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVNwaW5uZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlTcGlubmVyXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUHJpY2VcbkRFQlVHOiBBbWF6b25VSVByaWNlIEFwb2xsbyBWZXJzaW9uIDczMTYwLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUHJpY2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcmljZVxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUNhcm91c2VsXG5ERUJVRzogQW1hem9uVUlDYXJvdXNlbCBBcG9sbG8gVmVyc2lvbiAxMDc4MjYuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlDYXJvdXNlbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUNhcm91c2VsXG5ERUJVRzogU2NhbiBkaWQgbm90IG1hdGNoIGFueSBmbGFnczoge31cbkRFQlVHOiBTY2FuIGRpZCBub3QgbWF0Y2ggYW55IGZsYWdzOiB7fVxuREVCVUc6IFNjYW4gZGlkIG5vdCBtYXRjaCBhbnkgZmxhZ3M6IHt9XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQ29tcG9uZW50c1xuREVCVUc6IEFtYXpvblVJQ29tcG9uZW50cyBBcG9sbG8gVmVyc2lvbiAxMDk3MjkuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlDb21wb25lbnRzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQ29tcG9uZW50c1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSVRhYnNcbkRFQlVHOiBBbWF6b25VSVRhYnMgQXBvbGxvIFZlcnNpb24gOTE2MTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUYWJzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVGFic1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUFjY29yZGlvblxuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uIEFwb2xsbyBWZXJzaW9uIDkwNjkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQWNjb3JkaW9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWNjb3JkaW9uXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0c1xuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0cyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWNjb3JkaW9uQGNzc0Fzc2V0c1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0c1xuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uQGpzQXNzZXRzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0c1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0c1xuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSUV4cGFuZGVyXG5ERUJVRzogQW1hem9uVUlFeHBhbmRlciBBcG9sbG8gVmVyc2lvbiA5MjU4Ny4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUV4cGFuZGVyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJRXhwYW5kZXJcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlTd2l0Y2hcbkRFQlVHOiBBbWF6b25VSVN3aXRjaCBBcG9sbG8gVmVyc2lvbiA5MTkwNi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVN3aXRjaFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVN3aXRjaFxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSVByb2dyZXNzQmFyXG5ERUJVRzogQW1hem9uVUlQcm9ncmVzc0JhciBBcG9sbG8gVmVyc2lvbiA5MzAxNS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb2dyZXNzQmFyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUHJvZ3Jlc3NCYXJcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlQb3BvdmVyXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyIEFwb2xsbyBWZXJzaW9uIDExMDUwMi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyXG5ERUJVRzogU2NhbiBkaWQgbm90IG1hdGNoIGFueSBmbGFnczoge31cbkRFQlVHOiBTY2FuIGRpZCBub3QgbWF0Y2ggYW55IGZsYWdzOiB7fVxuREVCVUc6IFNjYW4gZGlkIG5vdCBtYXRjaCBhbnkgZmxhZ3M6IHt9XG5ERUJVRzogU2NhbiBkaWQgbm90IG1hdGNoIGFueSBmbGFnczoge31cbkRFQlVHOiBTY2FuIGRpZCBub3QgbWF0Y2ggYW55IGZsYWdzOiB7fVxuREVCVUc6IFNjYW4gZGlkIG5vdCBtYXRjaCBhbnkgZmxhZ3M6IHt9XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUG9wb3ZlckBiYXNlXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyQGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckBiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBiYXNlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUG9wb3ZlckBmb3JtRWxlbWVudHNcbkRFQlVHOiBBbWF6b25VSVBvcG92ZXJAZm9ybUVsZW1lbnRzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAZm9ybUVsZW1lbnRzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBmb3JtRWxlbWVudHNcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlQb3BvdmVyQG1vZGFsXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyQG1vZGFsIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAbW9kYWxcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyQG1vZGFsXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyQGNoYW5nZW92ZXIgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnRcbkRFQlVHOiBBbWF6b25VSVBvcG92ZXJAcmVhZHktdHJlYXRtZW50IEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAcmVhZHktdHJlYXRtZW50XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnRcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlCb3R0b21TaGVldFxuREVCVUc6IEFtYXpvblVJQm90dG9tU2hlZXQgQXBvbGxvIFZlcnNpb24gOTg3MDkuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCb3R0b21TaGVldFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJvdHRvbVNoZWV0XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUHJvZmlsZVxuREVCVUc6IEFtYXpvblVJUHJvZmlsZSBBcG9sbG8gVmVyc2lvbiA3NDQ2MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb2ZpbGVcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9maWxlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJRGV2YmFyXG5ERUJVRzogQW1hem9uVUlEZXZiYXIgQXBvbGxvIFZlcnNpb24gODYwMTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlEZXZiYXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlEZXZiYXJcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlUcnVuY2F0ZVxuREVCVUc6IEFtYXpvblVJVHJ1bmNhdGUgQXBvbGxvIFZlcnNpb24gODQ1MDAuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUcnVuY2F0ZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVRydW5jYXRlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQ2FyZFVJXG5ERUJVRzogQW1hem9uVUlDYXJkVUkgQXBvbGxvIFZlcnNpb24gODEwOTQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlDYXJkVUlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlDYXJkVUlcbkRFQlVHOiBleGVjdXRlQWN0aW9ucyBmb3IgQW1hem9uVUlBT0tcbkRFQlVHOiBBbWF6b25VSUFPSyBBcG9sbG8gVmVyc2lvbiA3NDc5MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFPS1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUFPS1xuREVCVUc6IE5lZWQoQW1hem9uVUksIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUkgQXBvbGxvIFZlcnNpb24gMTE2MDU2LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUkvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlSlMvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BBLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTQEEgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQEFcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAQVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQmFzZUpTQEEvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlNAYmFzZSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQGJhc2VcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VKU0BiYXNlL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJalF1ZXJ5LCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJalF1ZXJ5IEFwb2xsbyBWZXJzaW9uIDkxMTkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJalF1ZXJ5XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJalF1ZXJ5XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlqUXVlcnkvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJalF1ZXJ5L2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDYxWEt4ckJ0RFZMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQcm9taXNlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUHJvbWlzZSBBcG9sbG8gVmVyc2lvbiA4NjkyOS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb21pc2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9taXNlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQcm9taXNlL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQcm9taXNlL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDExWSs1eCtra1RMKV1cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VKU0BiYXNlL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDYxWEt4ckJ0RFZMKSwgUGh5c2ljYWxJZCgxMVkrNXgra2tUTCksIFBoeXNpY2FsSWQoNTExMDZnU0RuSkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmVcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAZGVjbGFyYXRpdmVcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZS9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSWpRdWVyeSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSWpRdWVyeSBBcG9sbG8gVmVyc2lvbiA5MTE5Mi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSWpRdWVyeVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSWpRdWVyeVxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSWpRdWVyeS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQGJhc2UsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAYmFzZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTQGJhc2UvamF2YXNjcmlwdFxuREVCVUc6IExvb2tpbmcgdXAgaW4gdmFyaWFudHM6IFt3ZWJsYWI6QVVJXzEyNTM3NzpUMSwgd2VibGFiOkFVSV8xMzg1NDU6VDEsIHdlYmxhYjpBVUlfS0lMTFNXSVRDSF9DU0FfTE9HR0VSXzM3Mjk2MzpUMSwgd2VibGFiOkFVSV9VWF8xNjQ1MDk6VDFdXG5ERUJVRzogTG9va3VwIGtleTogMFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDExeUtPUnYtR1RMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlNAcHJlbG9hZCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BwcmVsb2FkIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BwcmVsb2FkXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQHByZWxvYWRcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VKU0BwcmVsb2FkL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUHJvbWlzZSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSVByb21pc2UgQXBvbGxvIFZlcnNpb24gODY5MjkuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQcm9taXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUHJvbWlzZVxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSVByb21pc2UvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0BiYXNlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTQGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTQGJhc2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAYmFzZVxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKU0BiYXNlL2phdmFzY3JpcHRcbkRFQlVHOiBMb2FkaW5nIGZpbGU6IEFtYXpvblVJQmFzZUpTQHByZWxvYWQvYzA5ZjRjMzU3YWQzMzgzNjZlMWE3ZDIyMjQ4Mzk2YmNiZTZiMzk3Ni5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAcHJlbG9hZC9jMDlmNGMzNTdhZDMzODM2NmUxYTdkMjIyNDgzOTZiY2JlNmIzOTc2Lmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAcHJlbG9hZC9jMDlmNGMzNTdhZDMzODM2NmUxYTdkMjIyNDgzOTZiY2JlNmIzOTc2Lmpzb25cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUpTQHByZWxvYWQvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoMTFnaVh0WkN3VkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0B0b3VjaCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0B0b3VjaCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAdG91Y2hcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAdG91Y2hcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJhc2VKU0B0b3VjaC9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSWpRdWVyeSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSWpRdWVyeSBBcG9sbG8gVmVyc2lvbiA5MTE5Mi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSWpRdWVyeVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSWpRdWVyeVxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSWpRdWVyeS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQGJhc2UsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAYmFzZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTQGJhc2UvamF2YXNjcmlwdFxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCYXNlSlNAdG91Y2gvMzUxYTliOTNkZTBhMGRlZDc5ZTI4NWRjMTg1ODcxNWIwOWE0YzMzMC5qc29uXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAdG91Y2gvMzUxYTliOTNkZTBhMGRlZDc5ZTI4NWRjMTg1ODcxNWIwOWE0YzMzMC5qc29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQHRvdWNoLzM1MWE5YjkzZGUwYTBkZWQ3OWUyODVkYzE4NTg3MTViMDlhNGMzMzAuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlSlNAdG91Y2gvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoMDEreit1SWVKLUwpXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VKU0BBL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDYxWEt4ckJ0RFZMLCAxMVkrNXgra2tUTCwgNTExMDZnU0RuSkwpLCBQaHlzaWNhbElkKDExeUtPUnYtR1RMKSwgUGh5c2ljYWxJZCgxMWdpWHRaQ3dWTCksIFBoeXNpY2FsSWQoMDEreit1SWVKLUwpLCBQaHlzaWNhbElkKDAxVlJNVjNGQmRMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlNAYmFzZSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0BiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTQGJhc2VcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAYmFzZS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTQGRlY2xhcmF0aXZlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZVxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKU0BkZWNsYXJhdGl2ZS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTQHByZWxvYWQsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlSlNAcHJlbG9hZCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAcHJlbG9hZFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU0BwcmVsb2FkXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTQHByZWxvYWQvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKU0B0b3VjaCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKU0B0b3VjaCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNAdG91Y2hcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNAdG91Y2hcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlNAdG91Y2gvamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFzZUpTL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDYxWEt4ckJ0RFZMLCAxMVkrNXgra2tUTCwgNTExMDZnU0RuSkwsIDExeUtPUnYtR1RMLCAxMWdpWHRaQ3dWTCwgMDEreit1SWVKLUwsIDAxVlJNVjNGQmRMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlUeXBvZ3JhcGh5LCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJVHlwb2dyYXBoeSBBcG9sbG8gVmVyc2lvbiA0MTE0MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVR5cG9ncmFwaHlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUeXBvZ3JhcGh5XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlUeXBvZ3JhcGh5L2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2wsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2wgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVHlwb2dyYXBoeUBjb250cm9sXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJVHlwb2dyYXBoeUBjb250cm9sXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2wvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVR5cG9ncmFwaHlAYmFzZSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSVR5cG9ncmFwaHlAYmFzZSBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUeXBvZ3JhcGh5QGJhc2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUeXBvZ3JhcGh5QGJhc2VcbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSVR5cG9ncmFwaHlAYmFzZS9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlUeXBvZ3JhcGh5QGNvbnRyb2wvamF2YXNjcmlwdDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVR5cG9ncmFwaHkvamF2YXNjcmlwdDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTQGJhc2UsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGJhc2UgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BiYXNlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYXNlQ1NTQGJhc2UvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUljb24sIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlJY29uIEFwb2xsbyBWZXJzaW9uIDU2ODQ4LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJSWNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUljb25cbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSUljb24vamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUV4cGVyaW1lbnRJY29uLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJRXhwZXJpbWVudEljb24gQXBvbGxvIFZlcnNpb24gMzk0NzEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlFeHBlcmltZW50SWNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUV4cGVyaW1lbnRJY29uXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlFeHBlcmltZW50SWNvbi9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRXhwZXJpbWVudEljb25AY29udHJvbCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25AY29udHJvbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2xcbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uQGNvbnRyb2wvamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJRXhwZXJpbWVudEljb24vamF2YXNjcmlwdDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlUeXBvZ3JhcGh5LCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJVHlwb2dyYXBoeSBBcG9sbG8gVmVyc2lvbiA0MTE0MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVR5cG9ncmFwaHlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUeXBvZ3JhcGh5XG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJVHlwb2dyYXBoeS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQm94R3JvdXAsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCb3hHcm91cCBBcG9sbG8gVmVyc2lvbiAzOTMzNS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJveEdyb3VwXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQm94R3JvdXBcbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSUJveEdyb3VwL2phdmFzY3JpcHRcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJhc2VDU1NAYmFzZS9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAY29sb3JzLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0Bjb2xvcnMgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU0Bjb2xvcnNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGNvbG9yc1xuREVCVUc6IFR5cGUgbm90IGRlZmluZWQgZm9yIHBhY2thZ2U6IEFtYXpvblVJQmFzZUNTU0Bjb2xvcnMvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1NAZ3JpZCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAZ3JpZCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGdyaWRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTQGdyaWRcbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSUJhc2VDU1NAZ3JpZC9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0BsYXlvdXQsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQGxheW91dCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGxheW91dFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAbGF5b3V0XG5ERUJVRzogVHlwZSBub3QgZGVmaW5lZCBmb3IgcGFja2FnZTogQW1hem9uVUlCYXNlQ1NTQGxheW91dC9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0B1dGlsLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0B1dGlsIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAdXRpbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAdXRpbFxuREVCVUc6IFR5cGUgbm90IGRlZmluZWQgZm9yIHBhY2thZ2U6IEFtYXpvblVJQmFzZUNTU0B1dGlsL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTQGRpdmlkZXJzLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0BkaXZpZGVycyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQGRpdmlkZXJzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BkaXZpZGVyc1xuREVCVUc6IFR5cGUgbm90IGRlZmluZWQgZm9yIHBhY2thZ2U6IEFtYXpvblVJQmFzZUNTU0BkaXZpZGVycy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0BuYXYsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTQG5hdiBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQG5hdlxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAbmF2XG5ERUJVRzogVHlwZSBub3QgZGVmaW5lZCBmb3IgcGFja2FnZTogQW1hem9uVUlCYXNlQ1NTQG5hdi9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAZHJhZ2dhYmxlc1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NAZHJhZ2dhYmxlc1xuREVCVUc6IFR5cGUgbm90IGRlZmluZWQgZm9yIHBhY2thZ2U6IEFtYXpvblVJQmFzZUNTU0BkcmFnZ2FibGVzL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTQHNjcm9sbGVycywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0BzY3JvbGxlcnNcbkRFQlVHOiBUeXBlIG5vdCBkZWZpbmVkIGZvciBwYWNrYWdlOiBBbWF6b25VSUJhc2VDU1NAc2Nyb2xsZXJzL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTQHRvdWNoLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTU0B0b3VjaCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTQHRvdWNoXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU0B0b3VjaFxuREVCVUc6IFR5cGUgbm90IGRlZmluZWQgZm9yIHBhY2thZ2U6IEFtYXpvblVJQmFzZUNTU0B0b3VjaC9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQWxlcnQsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlBbGVydCBBcG9sbG8gVmVyc2lvbiA3NjI4Ny4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFsZXJ0XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWxlcnRcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUFsZXJ0L2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlBbGVydC9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhZGdlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFkZ2UgQXBvbGxvIFZlcnNpb24gNzM5NTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYWRnZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhZGdlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCYWRnZS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQmFkZ2UvamF2YXNjcmlwdDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCb3hHcm91cCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJveEdyb3VwIEFwb2xsbyBWZXJzaW9uIDM5MzM1LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQm94R3JvdXBcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCb3hHcm91cFxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJveEdyb3VwL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCdXR0b24sIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCdXR0b24gQXBvbGxvIFZlcnNpb24gOTE0NTguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCdXR0b25cbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJ1dHRvbi9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQnV0dG9uQGNvbnRyb2wsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCdXR0b25AY29udHJvbCBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25AY29udHJvbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJ1dHRvbkBjb250cm9sXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCdXR0b25AY29udHJvbC9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJ1dHRvbkBidXR0b25KUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJ1dHRvbkBidXR0b25KUyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25AYnV0dG9uSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCdXR0b25AYnV0dG9uSlNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUJ1dHRvbkBidXR0b25KUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQnV0dG9uQGJ1dHRvbkpTL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDIxU0RKdEJVLVBMKV1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJ1dHRvbkBjb250cm9sL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDIxU0RKdEJVLVBMKV1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJ1dHRvbi9qYXZhc2NyaXB0OiBbUGh5c2ljYWxJZCgyMVNESnRCVS1QTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJSW1hZ2UsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlJbWFnZSBBcG9sbG8gVmVyc2lvbiA3Njk3NC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUltYWdlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSW1hZ2VcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUltYWdlL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlJbWFnZS9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUljb24sIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlJY29uIEFwb2xsbyBWZXJzaW9uIDU2ODQ4LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJSWNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUljb25cbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlJY29uL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlFeHBlcmltZW50SWNvbiwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUV4cGVyaW1lbnRJY29uIEFwb2xsbyBWZXJzaW9uIDM5NDcxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwZXJpbWVudEljb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlFeHBlcmltZW50SWNvblxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUV4cGVyaW1lbnRJY29uL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlMaW5rLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJTGluayBBcG9sbG8gVmVyc2lvbiA3NDIwMS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUxpbmtcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlMaW5rXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlMaW5rL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlMaW5rL2phdmFzY3JpcHQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJTWV0ZXIsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlNZXRlciBBcG9sbG8gVmVyc2lvbiA5MjkxNy4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSU1ldGVyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTWV0ZXJcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSU1ldGVyL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlMvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSU1ldGVyL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDAxMkZWYzMxMzFMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlUYWJsZSwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSVRhYmxlIEFwb2xsbyBWZXJzaW9uIDc1ODAzLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJVGFibGVcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUYWJsZVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJVGFibGUvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVRhYmxlL2phdmFzY3JpcHQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJTGlzdCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUxpc3QgQXBvbGxvIFZlcnNpb24gNzM5NzMuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlMaXN0XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJTGlzdFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJTGlzdC9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJTGlzdC9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVBhZ2luYXRpb24sIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlQYWdpbmF0aW9uIEFwb2xsbyBWZXJzaW9uIDk0MjU2LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUGFnaW5hdGlvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBhZ2luYXRpb25cbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVBhZ2luYXRpb24vamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCdXR0b24sIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCdXR0b24gQXBvbGxvIFZlcnNpb24gOTE0NTguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCdXR0b25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCdXR0b25cbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCdXR0b24vamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJUGFnaW5hdGlvbi9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUZvbnQsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlGb250IEFwb2xsbyBWZXJzaW9uIDYxMTc0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRm9udFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUZvbnRcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUZvbnQvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUZvbnQvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoMTFyUmpETGRBVkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUZvcm0sIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlGb3JtIEFwb2xsbyBWZXJzaW9uIDcyOTI0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRm9ybVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUZvcm1cbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUZvcm0vamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUZvcm0vamF2YXNjcmlwdDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlTcGlubmVyLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJU3Bpbm5lciBBcG9sbG8gVmVyc2lvbiA3NzI5MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVNwaW5uZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlTcGlubmVyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlTcGlubmVyL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlTcGlubmVyL2phdmFzY3JpcHQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUHJpY2UsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlQcmljZSBBcG9sbG8gVmVyc2lvbiA3MzE2MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByaWNlXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUHJpY2VcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVByaWNlL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQcmljZS9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUNhcm91c2VsLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQ2Fyb3VzZWwgQXBvbGxvIFZlcnNpb24gMTA3ODI2LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQ2Fyb3VzZWxcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlDYXJvdXNlbFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQ2Fyb3VzZWwvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlDYXJvdXNlbC9qYXZhc2NyaXB0OiBbUGh5c2ljYWxJZCg1MUgxOWhKUllyTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQ29tcG9uZW50cywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUNvbXBvbmVudHMgQXBvbGxvIFZlcnNpb24gMTA5NzI5LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQ29tcG9uZW50c1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUNvbXBvbmVudHNcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUNvbXBvbmVudHMvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQnV0dG9uLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQnV0dG9uIEFwb2xsbyBWZXJzaW9uIDkxNDU4LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQnV0dG9uXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQnV0dG9uL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlDb21wb25lbnRzL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDExa1d1M2NOallMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlUYWJzLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJVGFicyBBcG9sbG8gVmVyc2lvbiA5MTYxMi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVRhYnNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlUYWJzXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlUYWJzL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlMvamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJVGFicy9qYXZhc2NyaXB0OiBbUGh5c2ljYWxJZCgxMXRNb2hqV21WTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQWNjb3JkaW9uLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uIEFwb2xsbyBWZXJzaW9uIDkwNjkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQWNjb3JkaW9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWNjb3JkaW9uXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlBY2NvcmRpb24vamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUFjY29yZGlvbkBjc3NBc3NldHMsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFjY29yZGlvbkBjc3NBc3NldHNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlBY2NvcmRpb25AY3NzQXNzZXRzL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQWNjb3JkaW9uQGpzQXNzZXRzLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQWNjb3JkaW9uQGpzQXNzZXRzIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0c1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUFjY29yZGlvbkBqc0Fzc2V0c1xuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJQWNjb3JkaW9uQGpzQXNzZXRzL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQWNjb3JkaW9uQGpzQXNzZXRzL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDExT1JFbnUxZXBMKV1cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUFjY29yZGlvbkBjc3NBc3NldHMvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoMTFPUkVudTFlcEwpXVxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQWNjb3JkaW9uL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDExT1JFbnUxZXBMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlFeHBhbmRlciwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUV4cGFuZGVyIEFwb2xsbyBWZXJzaW9uIDkyNTg3LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRXhwYW5kZXJcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlFeHBhbmRlclxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJRXhwYW5kZXIvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQWxlcnQsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlBbGVydCBBcG9sbG8gVmVyc2lvbiA3NjI4Ny4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUFsZXJ0XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQWxlcnRcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlBbGVydC9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlFeHBhbmRlci9qYXZhc2NyaXB0OiBbUGh5c2ljYWxJZCgxMXdjV2Rocm5ETCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJU3dpdGNoLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJU3dpdGNoIEFwb2xsbyBWZXJzaW9uIDkxOTA2LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJU3dpdGNoXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJU3dpdGNoXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlTd2l0Y2gvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlTd2l0Y2gvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoMjFzc2lMTkladkwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVByb2dyZXNzQmFyLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUHJvZ3Jlc3NCYXIgQXBvbGxvIFZlcnNpb24gOTMwMTUuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQcm9ncmVzc0JhclxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVByb2dyZXNzQmFyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQcm9ncmVzc0Jhci9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTL2phdmFzY3JpcHRcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVByb2dyZXNzQmFyL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDAxOTB2eHRsemNMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQb3BvdmVyLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlciBBcG9sbG8gVmVyc2lvbiAxMTA1MDIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQb3BvdmVyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlclxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3Zlci9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUG9wb3ZlckBiYXNlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlckBiYXNlIEFwb2xsbyBWZXJzaW9uIFVua25vd25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAYmFzZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBvcG92ZXJAYmFzZVxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3ZlckBiYXNlL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUpTIEFwb2xsbyBWZXJzaW9uIDEwNDE5MS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VKU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VKUy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJSWNvbiwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUljb24gQXBvbGxvIFZlcnNpb24gNTY4NDguMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlJY29uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJSWNvblxuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUljb24vamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlGb3JtLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJRm9ybSBBcG9sbG8gVmVyc2lvbiA3MjkyNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUZvcm1cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlGb3JtXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJRm9ybS9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQnV0dG9uLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQnV0dG9uIEFwb2xsbyBWZXJzaW9uIDkxNDU4LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQnV0dG9uXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQnV0dG9uXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQnV0dG9uL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogTG9hZGluZyBmaWxlOiBBbWF6b25VSVBvcG92ZXJAYmFzZS81ZmM0YmM5ZGIyMTFiMjNkYTFhM2U4MzE0ZDRjMWY5ZjIyMDRkMzczLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVBvcG92ZXJAYmFzZS81ZmM0YmM5ZGIyMTFiMjNkYTFhM2U4MzE0ZDRjMWY5ZjIyMDRkMzczLmpzb25cbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyQGJhc2UvNWZjNGJjOWRiMjExYjIzZGExYTNlODMxNGQ0YzFmOWYyMjA0ZDM3My5qc29uXG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVBvcG92ZXJAYmFzZS9qYXZhc2NyaXB0OiBbUGh5c2ljYWxJZCg1MStOMjZ2RmNCTCldXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUG9wb3ZlckBmb3JtRWxlbWVudHMsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyQGZvcm1FbGVtZW50cyBBcG9sbG8gVmVyc2lvbiBVbmtub3duXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlQb3BvdmVyQGZvcm1FbGVtZW50c1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBvcG92ZXJAZm9ybUVsZW1lbnRzXG5ERUJVRzogVHlwZSBub3QgZGVmaW5lZCBmb3IgcGFja2FnZTogQW1hem9uVUlQb3BvdmVyQGZvcm1FbGVtZW50cy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJUG9wb3ZlckBtb2RhbCwgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSVBvcG92ZXJAbW9kYWwgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckBtb2RhbFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVBvcG92ZXJAbW9kYWxcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSVBvcG92ZXJAbW9kYWwvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQb3BvdmVyQG1vZGFsL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDAxSllIYzJvSWxMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQb3BvdmVyQGNoYW5nZW92ZXIsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlQb3BvdmVyQGNoYW5nZW92ZXIgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJUG9wb3ZlckBjaGFuZ2VvdmVyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQb3BvdmVyQGNoYW5nZW92ZXIvamF2YXNjcmlwdFxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVBvcG92ZXJAY2hhbmdlb3Zlci9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFNjYW4gZGlkIG5vdCBtYXRjaCBhbnkgZmxhZ3M6IHt9XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVBvcG92ZXJAcmVhZHktdHJlYXRtZW50LCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnQgQXBvbGxvIFZlcnNpb24gVW5rbm93blxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnRcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQb3BvdmVyQHJlYWR5LXRyZWF0bWVudFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblVJUG9wb3ZlckByZWFkeS10cmVhdG1lbnQvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQb3BvdmVyQHJlYWR5LXRyZWF0bWVudC9qYXZhc2NyaXB0OiBbUGh5c2ljYWxJZCgzMVI5bThyaWc1TCldXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQb3BvdmVyL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDUxK04yNnZGY0JMKSwgUGh5c2ljYWxJZCgwMUpZSGMyb0lsTCksIFBoeXNpY2FsSWQoMzFSOW04cmlnNUwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJvdHRvbVNoZWV0LCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQm90dG9tU2hlZXQgQXBvbGxvIFZlcnNpb24gOTg3MDkuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCb3R0b21TaGVldFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJvdHRvbVNoZWV0XG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlCb3R0b21TaGVldC9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VKUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VKUyBBcG9sbG8gVmVyc2lvbiAxMDQxOTEuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlSlNcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlSlMvamF2YXNjcmlwdFxuREVCVUc6IExvYWRpbmcgZmlsZTogQW1hem9uVUlCb3R0b21TaGVldC82MjFiYTYyNjk0YTZjNDg3NDdiMWY0MDk0YmQyOTBhODJmMDgzNDllLmpzb25cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJvdHRvbVNoZWV0LzYyMWJhNjI2OTRhNmM0ODc0N2IxZjQwOTRiZDI5MGE4MmYwODM0OWUuanNvblxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJvdHRvbVNoZWV0LzYyMWJhNjI2OTRhNmM0ODc0N2IxZjQwOTRiZDI5MGE4MmYwODM0OWUuanNvblxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUJvdHRvbVNoZWV0L2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDAxZXpqNVJrejFMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlQcm9maWxlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJUHJvZmlsZSBBcG9sbG8gVmVyc2lvbiA3NDQ2MC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb2ZpbGVcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9maWxlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlQcm9maWxlL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlQ1NTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQmFzZUNTUyBBcG9sbG8gVmVyc2lvbiA4NjQzNC4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUNTUy9qYXZhc2NyaXB0XG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlQcm9maWxlL2phdmFzY3JpcHQ6IFtdXG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJRGV2YmFyLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJRGV2YmFyIEFwb2xsbyBWZXJzaW9uIDg2MDEyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJRGV2YmFyXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJRGV2YmFyXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlEZXZiYXIvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSURldmJhci9qYXZhc2NyaXB0OiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSVRydW5jYXRlLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJVHJ1bmNhdGUgQXBvbGxvIFZlcnNpb24gODQ1MDAuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlUcnVuY2F0ZVxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSVRydW5jYXRlXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlUcnVuY2F0ZS9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlCYXNlSlMsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlSlMgQXBvbGxvIFZlcnNpb24gMTA0MTkxLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUpTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUpTXG5ERUJVRzogQXNzZXQvdHlwZSBhbHJlYWR5IGxvYWRlZC4gRGVkdXBpbmcuIEFtYXpvblVJQmFzZUpTL2phdmFzY3JpcHRcbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSVRydW5jYXRlL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDExK1J4VmRoTmNMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlDYXJkVUksIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlDYXJkVUkgQXBvbGxvIFZlcnNpb24gODEwOTQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlDYXJkVUlcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlDYXJkVUlcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUNhcmRVSS9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUJhc2VDU1MsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlCYXNlQ1NTIEFwb2xsbyBWZXJzaW9uIDg2NDM0LjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQmFzZUNTU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUJhc2VDU1NcbkRFQlVHOiBBc3NldC90eXBlIGFscmVhZHkgbG9hZGVkLiBEZWR1cGluZy4gQW1hem9uVUlCYXNlQ1NTL2phdmFzY3JpcHRcbkRFQlVHOiBTY2FuIG1hdGNoZWQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUlDYXJkVUkvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoMzFvMk5HVFhUaEwpXVxuREVCVUc6IFN1Yi1uZWVkaW5nXG5ERUJVRzogTmVlZChBbWF6b25VSUNvbXBhdEpTLCBqYXZhc2NyaXB0KVxuREVCVUc6IEFtYXpvblVJQ29tcGF0SlMgQXBvbGxvIFZlcnNpb24gODYyMjAuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlDb21wYXRKU1xuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25VSUNvbXBhdEpTXG5ERUJVRzogRXhlY3V0aW5nIHNlbGVjdG9yczogQW1hem9uVUlDb21wYXRKUy9qYXZhc2NyaXB0XG5ERUJVRzogU2NhbiBtYXRjaGVkOiBbXVxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBSZXN1bHRzOiBBbWF6b25VSUNvbXBhdEpTL2phdmFzY3JpcHQ6IFtQaHlzaWNhbElkKDAxcnBhdVRlcDRMKV1cbkRFQlVHOiBTdWItbmVlZGluZ1xuREVCVUc6IE5lZWQoQW1hem9uVUlBT0ssIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uVUlBT0sgQXBvbGxvIFZlcnNpb24gNzQ3OTAuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlBT0tcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlBT0tcbkRFQlVHOiBFeGVjdXRpbmcgc2VsZWN0b3JzOiBBbWF6b25VSUFPSy9qYXZhc2NyaXB0XG5ERUJVRzogU3ViLW5lZWRpbmdcbkRFQlVHOiBOZWVkKEFtYXpvblVJQmFzZUNTUywgamF2YXNjcmlwdClcbkRFQlVHOiBBbWF6b25VSUJhc2VDU1MgQXBvbGxvIFZlcnNpb24gODY0MzQuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uVUlCYXNlQ1NTXG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJQmFzZUNTU1xuREVCVUc6IEFzc2V0L3R5cGUgYWxyZWFkeSBsb2FkZWQuIERlZHVwaW5nLiBBbWF6b25VSUJhc2VDU1MvamF2YXNjcmlwdFxuREVCVUc6IFJlc3VsdHM6IEFtYXpvblVJQU9LL2phdmFzY3JpcHQ6IFtdXG5ERUJVRzogUmVzdWx0czogQW1hem9uVUkvamF2YXNjcmlwdDogW1BoeXNpY2FsSWQoNjFYS3hyQnREVkwsIDExWSs1eCtra1RMLCA1MTEwNmdTRG5KTCwgMTF5S09Sdi1HVEwsIDExZ2lYdFpDd1ZMLCAwMSt6K3VJZUotTCwgMDFWUk1WM0ZCZEwpLCBQaHlzaWNhbElkKDIxU0RKdEJVLVBMKSwgUGh5c2ljYWxJZCgwMTJGVmMzMTMxTCksIFBoeXNpY2FsSWQoMTFyUmpETGRBVkwpLCBQaHlzaWNhbElkKDUxSDE5aEpSWXJMKSwgUGh5c2ljYWxJZCgxMWtXdTNjTmpZTCksIFBoeXNpY2FsSWQoMTF0TW9oaldtVkwpLCBQaHlzaWNhbElkKDExT1JFbnUxZXBMKSwgUGh5c2ljYWxJZCgxMXdjV2Rocm5ETCksIFBoeXNpY2FsSWQoMjFzc2lMTkladkwpLCBQaHlzaWNhbElkKDAxOTB2eHRsemNMKSwgUGh5c2ljYWxJZCg1MStOMjZ2RmNCTCwgMDFKWUhjMm9JbEwsIDMxUjltOHJpZzVMKSwgUGh5c2ljYWxJZCgwMWV6ajVSa3oxTCksIFBoeXNpY2FsSWQoMTErUnhWZGhOY0wpLCBQaHlzaWNhbElkKDMxbzJOR1RYVGhMKSwgUGh5c2ljYWxJZCgwMXJwYXVUZXA0TCksIFBoeXNpY2FsSWQoMDFLRmtYSnhNVEwpXVxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25VSWpRdWVyeVxuREVCVUc6IEFtYXpvblVJalF1ZXJ5IEFwb2xsbyBWZXJzaW9uIDkxMTkyLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJalF1ZXJ5XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblVJalF1ZXJ5XG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJUHJvbWlzZVxuREVCVUc6IEFtYXpvblVJUHJvbWlzZSBBcG9sbG8gVmVyc2lvbiA4NjkyOS4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25VSVByb21pc2VcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlQcm9taXNlXG5ERUJVRzogZXhlY3V0ZUFjdGlvbnMgZm9yIEFtYXpvblVJQ29tcGF0SlNcbkRFQlVHOiBBbWF6b25VSUNvbXBhdEpTIEFwb2xsbyBWZXJzaW9uIDg2MjIwLjAtMFxuREVCVUc6IENhY2hlIGhpdCB3aGlsZSBsb2FkaW5nIEFtYXpvblVJQ29tcGF0SlNcbkRFQlVHOiBMb2FkaW5nIHBhdGg6IGFzc2V0cy9tYW5pZmVzdHMvdjMvQW1hem9uVUlDb21wYXRKU1xuREVCVUc6IE5lZWQoQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdClcbkRFQlVHOiBOZWVkKEFtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQsIGNzcylcbkRFQlVHOiBBbWF6b25TYWZlRnJhbWVDbGllbnRKYXZhU2NyaXB0IEFwb2xsbyBWZXJzaW9uIDk5Mi4wLTBcbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBBbWF6b25TYWZlRnJhbWVDbGllbnRKYXZhU2NyaXB0XG5ERUJVRzogTG9hZGluZyBwYXRoOiBhc3NldHMvbWFuaWZlc3RzL3YzL0FtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHRcbkRFQlVHOiBJbmxpbmluZyBiZWNhdXNlIG9mIG1hbmlmZXN0OiBBbWF6b25TYWZlRnJhbWVDbGllbnRKYXZhU2NyaXB0XG5ERUJVRzogVHlwZSBub3QgZGVmaW5lZCBmb3IgcGFja2FnZTogQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdC9jc3NcbkRFQlVHOiBOZWVkKEFtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQsIGphdmFzY3JpcHQpXG5ERUJVRzogQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdCBBcG9sbG8gVmVyc2lvbiA5OTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25TYWZlRnJhbWVDbGllbnRKYXZhU2NyaXB0XG5ERUJVRzogSW5saW5pbmcgYmVjYXVzZSBvZiBtYW5pZmVzdDogQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdFxuREVCVUc6IEV4ZWN1dGluZyBzZWxlY3RvcnM6IEFtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQvamF2YXNjcmlwdFxuREVCVUc6IFNjYW4gbWF0Y2hlZDogW11cbkRFQlVHOiBBdHRlbXB0aW5nIHRvIGlubGluZTogT3B0aW9uYWxbYXNzZXRzL0FtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQuMTJkYWQwODBhMmVmMWUxOTFiM2YxZmI4Y2FkN2NiMGY1MzljNzJmNS5qc11cbkRFQlVHOiBDYWNoZSBoaXQgd2hpbGUgbG9hZGluZyBhc3NldHMvQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdC4xMmRhZDA4MGEyZWYxZTE5MWIzZjFmYjhjYWQ3Y2IwZjUzOWM3MmY1LmpzXG5ERUJVRzogTG9hZGluZyBwYXRoOiAvYXBvbGxvL2Vudi9TZWFyY2hXZWJBcHAvYXNzZXRzL0FtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQuMTJkYWQwODBhMmVmMWUxOTFiM2YxZmI4Y2FkN2NiMGY1MzljNzJmNS5qc1xuREVCVUc6IExvYWRpbmcgSW5saW5lZDogYXNzZXRzL0FtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQuMTJkYWQwODBhMmVmMWUxOTFiM2YxZmI4Y2FkN2NiMGY1MzljNzJmNS5qc1xuREVCVUc6IFJlc3VsdHM6IEFtYXpvblNhZmVGcmFtZUNsaWVudEphdmFTY3JpcHQvamF2YXNjcmlwdDogW0lubGluZSgoZnVuY3Rpb24oYyl7ZnVuY3Rpb24geihiLHIsYyxsKXtiLmFkZEV2ZW50TGlzdGVuZXI/Yi5hZGRFdmVudExpc3RlbmVyKHIsYywhMD09PWwpOmIuYXR0YWNoRXZlbnQmYW1wOyZhbXA7Yi4pXVxuREVCVUc6IGV4ZWN1dGVBY3Rpb25zIGZvciBBbWF6b25TYWZlRnJhbWVDbGllbnRKYXZhU2NyaXB0XG5ERUJVRzogQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdCBBcG9sbG8gVmVyc2lvbiA5OTIuMC0wXG5ERUJVRzogQ2FjaGUgaGl0IHdoaWxlIGxvYWRpbmcgQW1hem9uU2FmZUZyYW1lQ2xpZW50SmF2YVNjcmlwdFxuREVCVUc6IExvYWRpbmcgcGF0aDogYXNzZXRzL21hbmlmZXN0cy92My9BbWF6b25TYWZlRnJhbWVDbGllbnRKYXZhU2NyaXB0XG4tLSZndDtcbiZsdDsvaGVhZCZndDtcbiZsdDtib2R5IHN0eWxlPSZxdW90O21hcmdpbjowO3BhZGRpbmc6MDsmcXVvdDsmZ3Q7XG4gICAgJmx0OyEtLVNJTkdMRVRPTiBDT05URU5ULS0mZ3Q7XG5cbiAgICAmbHQ7c2NyaXB0Jmd0O1xuICAgICAgICB3aW5kb3cuU2FmZUZyYW1lQ2xpZW50ICZhbXA7JmFtcDsgU2FmZUZyYW1lQ2xpZW50Lm9uKCYjMzk7Y2xpZW50UmVhZHkmIzM5OywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIFNhZmVGcmFtZUNsaWVudC5jb3VudE1ldHJpYygmIzM5O2NsaWVudFJlYWR5JiMzOTssIDEpO1xuICAgICAgICB9KTtcbiAgICAmbHQ7L3NjcmlwdCZndDtcbiZsdDsvYm9keSZndDtcbiZsdDsvaHRtbCZndDtcblwiXG4gICAgICAgICAgICAgICAgZGF0YS11c2Utc3JjZG9jLWZhbGxiYWNrPVwiZmFsc2VcIlxuICAgICAgICAgICAgICAgIGRhdGEtYXV0by1sb2FkPVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgb25sb2FkPVwiKGZ1bmN0aW9uKGVsLCB0cyl7IFAud2hlbignYW16bi1zYWZlLWZyYW1lLWF1dG8tbG9hZGVyJykuZXhlY3V0ZShmdW5jdGlvbihmbil7IGZuKGVsLCB0cyk7IH0pOyB9KHRoaXMsICsobmV3IERhdGUoKSkpKTtcIlxuICAgICAgICAgICAgICAgIGRhdGEtZnJhbWUtaWQ9XCI2Yjc5ZWVmNC05ZDNlLTQ0YjktYjZmYy1jZTgyM2FkOGNmY2ZcIlxuICAgICAgICAgICAgICAgIGRhdGEtZnJhbWUtYXR0cmlidXRpb249XCJTYWZlTW9kYWxWaWV3OlVuc2V0XCJcbiAgICAgICAgICAgICAgICBkYXRhLWFkZGl0aW9uYWwtYXR0cmlidXRpb249XCJcIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLW1ldHJpY3Mtc2NvcGU9XCJzZWFyY2hTYWZlRnJhbWU6bW9kYWw6cy1zYWZlLW1vZGFsLXNpbmdsZXRvblwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtY2FwYWJpbGl0aWVzPVwiQVVJLEFKQVhcIlxuICAgICAgICAgICAgICAgIGhlaWdodD1cIjMwMFwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJhbXpuLXNhZmUtZnJhbWUgYW9rLWJsb2NrXCJcbiAgICAgICAgICAgICAgICBmcmFtZWJvcmRlcj1cIjBcIlxuICAgICAgICAgICAgICAgIHNjcm9sbGluZz1cIm5vXCI+PC9pZnJhbWU+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbXpuLXNhZmUtZnJhbWUtZm9vdGVyIGFvay1oaWRkZW5cIj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICAgICAgPHNjcmlwdD4gd2luZG93LnVldCAmJiB1ZXQoJ2JlJywgJ3NlYXJjaFNhZmVGcmFtZTptb2RhbDpzLXNhZmUtbW9kYWwtc2luZ2xldG9uJywge3diOiAxfSk7IDwvc2NyaXB0PlxuPC9kaXY+XG5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj5cblxuXG4gICAgXG5cblxuPC9kaXY+XG48IS0tIHNwOmVuZC1mZWF0dXJlOmhvc3QtYXRmIC0tPlxuPCEtLSBzcDpmZWF0dXJlOm5hdi1idGYgLS0+XG48IS0tIE5BVllBQU4gQlRGIFNUQVJUIC0tPlxuXG5cblxuXG4gIFxuXG5cblxuICA8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+KGZ1bmN0aW9uICgkTmF2KSB7XG5cInVzZSBzdHJpY3RcIjtcblxuaWYgKHR5cGVvZiAkTmF2ID09PSAndW5kZWZpbmVkJyB8fCAkTmF2ID09PSBudWxsIHx8IHR5cGVvZiAkTmF2LndoZW4gIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm47XG59XG5cbiROYXYud2hlbignJCcsICdkYXRhJywgJ2ZseW91dC55b3VyQWNjb3VudCcsICdzaWRlcGFuZWwuY3NZb3VyQWNjb3VudCcsXG4gICAgICAgICAgJ2NvbmZpZycpXG4gICAgLnJ1bihcIkJ1eWl0QWdhaW4tWW91ckFjY291bnQtU2lkZVBhbmVsXCIsXG4gICAgZnVuY3Rpb24gKCQsIGRhdGEsIHlhRmx5b3V0LCBjc1lvdXJBY2NvdW50LCBjb25maWcpIHtcbiAgICAgICAgaWYgKGNvbmZpZy5kaXNhYmxlQnV5SXRBZ2Fpbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZW5kZXIgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgaWYgKGRhdGEuZHJhbVJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHZhciB3aWRnZXRIdG1sID0gZGF0YS5kcmFtUmVzdWx0O1xuICAgICAgICAgICAgICAgIG5hdmJhci5zaWRlUGFuZWwoe1xuICAgICAgICAgICAgICAgICAgICBmbHlvdXROYW1lOiAneW91ckFjY291bnQnLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7aHRtbDogd2lkZ2V0SHRtbH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgcmVuZGVyQnV5SXRBZ2FpbiA9IGZ1bmN0aW9uIChiaWFEYXRhKSB7XG4gICAgICAgICAgICBpZiAoY3NZb3VyQWNjb3VudCkge1xuICAgICAgICAgICAgICAgIGNzWW91ckFjY291bnQucmVnaXN0ZXIocmVuZGVyLCBiaWFEYXRhKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVuZGVyKGJpYURhdGEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHlhRmx5b3V0LnNpZGVQYW5lbC5vbkRhdGEoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAod2luZG93LlApIHtcbiAgICAgICAgICAgICAgICBQLndoZW4oJ0EnLCAnYS10cnVuY2F0ZScpLmV4ZWN1dGUoZnVuY3Rpb24oQSwgdHJ1bmNhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHRydW5jYXRlRWxlbWVudHMgPSBBLiQoJy5hLXRydW5jYXRlJyk7XG4gICAgICAgICAgICAgICAgICAgIEEuZWFjaCh0cnVuY2F0ZUVsZW1lbnRzLCBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnVuY2F0ZS5nZXQoZWxlbWVudCkudXBkYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuXG4gICAgeWFGbHlvdXQub25SZW5kZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIHVybDogJy9ncC9iaWEvZXh0ZXJuYWwvYmlhLWhjYi1hamF4LWhhbmRsZXIuaHRtbCcsXG4gICAgICAgICAgICAgICAgZGF0YTogeyBiaWFIY2JSaWQ6ICcxUTcwTTc4Q0NTOEFTOTlSTUNBOCcgfSxcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDQqMTAwMCxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiByZW5kZXJCdXlJdEFnYWluLFxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKSB7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSkod2luZG93LiROYXYpOzwvc2NyaXB0PlxuXG5cbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICB3aW5kb3cuJE5hdiAmJiAkTmF2LndoZW4oXCJkYXRhXCIpLnJ1bihmdW5jdGlvbiAoZGF0YSkge1xuICAgIGRhdGEoe1xuICAgICAgXCJhY2NvdW50TGlzdENvbnRlbnRcIjogeyBcImh0bWxcIjogXCI8ZGl2IGlkPSduYXYtYWwtY29udGFpbmVyJz48ZGl2IGlkPSduYXYtYWwtc2lnbmluJz48ZGl2IGlkPSduYXYtZmx5b3V0LXlhLXNpZ25pbicgY2xhc3M9J25hdi1mbHlvdXQtY29udGVudCBuYXYtZmx5b3V0LWFjY2Vzc2liaWxpdHknPjxhIGhyZWY9J2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvc2lnbmluP29wZW5pZC5wYXBlLm1heF9hdXRoX2FnZT0wJm9wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRnMlMkYlM0ZfZW5jb2RpbmclM0RVVEY4JTI2ayUzRGlwaG9uZSUyNnBhZ2UlM0Q0JTI2cWlkJTNEMTY0MTMwMzMzMyUyNnJlZiUzRHNyX3BnXzQlMjZzcHJlZml4JTNEaXBob25lJTI1MkNhcHMlMjUyQzI2MiUyNnJlZl8lM0RuYXZfc2lnbmluJm9wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJm9wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0Jm9wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAmJyByZWw9J25vZm9sbG93JyBjbGFzcz0nbmF2LWFjdGlvbi1idXR0b24nIGRhdGEtbmF2LXJvbGU9J3NpZ25pbicgZGF0YS1uYXYtcmVmPSduYXZfc2lnbmluJz48c3BhbiBjbGFzcz0nbmF2LWFjdGlvbi1pbm5lcic+U2lnbiBpbjwvc3Bhbj48L2E+PGRpdiBpZD0nbmF2LWZseW91dC15YS1uZXdDdXN0JyBjbGFzcz0nbmF2X3BvcF9uZXdfY3VzdCBuYXYtZmx5b3V0LWNvbnRlbnQgbmF2LWZseW91dC1hY2Nlc3NpYmlsaXR5Jz5OZXcgY3VzdG9tZXI/IDxhIGhyZWY9J2h0dHBzOi8vd3d3LmFtYXpvbi5jb20vYXAvcmVnaXN0ZXI/b3BlbmlkLnBhcGUubWF4X2F1dGhfYWdlPTAmb3BlbmlkLnJldHVybl90bz1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGcyUyRiUzRl9lbmNvZGluZyUzRFVURjglMjZrJTNEaXBob25lJTI2cGFnZSUzRDQlMjZxaWQlM0QxNjQxMzAzMzMzJTI2cmVmJTNEc3JfcGdfNCUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2cmVmXyUzRG5hdl9uZXdjdXN0Jm9wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJm9wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0Jm9wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAmJyByZWw9J25vZm9sbG93JyBjbGFzcz0nbmF2LWEnPlN0YXJ0IGhlcmUuPC9hPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgaWQ9J25hdi1hbC13aXNobGlzdCcgY2xhc3M9J25hdi1hbC1jb2x1bW4gbmF2LXRwbC1pdGVtTGlzdCBuYXYtZmx5b3V0LWNvbnRlbnQgbmF2LWZseW91dC1hY2Nlc3NpYmlsaXR5Jz48ZGl2IGNsYXNzPSduYXYtdGl0bGUnIGlkPSduYXYtYWwtdGl0bGUnPllvdXIgTGlzdHM8L2Rpdj48YSBocmVmPScvaHovd2lzaGxpc3QvbHM/dHJpZ2dlckVsZW1lbnRJRD1jcmVhdGVMaXN0JnJlZl89bmF2X0xpc3RGbHlvdXRfbmF2Rmx5b3V0X2NyZWF0ZUxpc3RfbHZfcmVkaXJlY3QnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5DcmVhdGUgYSBMaXN0PC9zcGFuPjwvYT4gPGEgaHJlZj0nL3JlZ2lzdHJpZXM/cmVmXz1uYXZfTGlzdEZseW91dF9maW5kJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPjxzcGFuIGNsYXNzPSduYXYtdGV4dCc+RmluZCBhIExpc3Qgb3IgUmVnaXN0cnk8L3NwYW4+PC9hPiA8YSBocmVmPScvZ3AvY2xwZj9yZWZfPW5hdl9MaXN0Rmx5b3V0X3NtaV9zZV95YV9sbGxfbGwnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5BbWF6b25TbWlsZSBDaGFyaXR5IExpc3RzPC9zcGFuPjwvYT48L2Rpdj48ZGl2IGlkPSduYXYtYWwteW91ci1hY2NvdW50JyBjbGFzcz0nbmF2LWFsLWNvbHVtbiBuYXYtdGVtcGxhdGUgbmF2LWZseW91dC1jb250ZW50IG5hdi10cGwtaXRlbUxpc3QgbmF2LWZseW91dC1hY2Nlc3NpYmlsaXR5Jz48ZGl2IGNsYXNzPSduYXYtdGl0bGUnPllvdXIgQWNjb3VudDwvZGl2PjxhIGhyZWY9Jy9ncC9jc3MvaG9tZXBhZ2UuaHRtbD9yZWZfPW5hdl9BY2NvdW50Rmx5b3V0X3lhJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPjxzcGFuIGNsYXNzPSduYXYtdGV4dCc+QWNjb3VudDwvc3Bhbj48L2E+IDxhIGlkPSduYXZfcHJlZmV0Y2hfeW91cm9yZGVycycgaHJlZj0nL2dwL2Nzcy9vcmRlci1oaXN0b3J5P3JlZl89bmF2X0FjY291bnRGbHlvdXRfb3JkZXJzJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPjxzcGFuIGNsYXNzPSduYXYtdGV4dCc+T3JkZXJzPC9zcGFuPjwvYT4gPGEgaHJlZj0nL2dwL3lvdXJzdG9yZT9yZWZfPW5hdl9BY2NvdW50Rmx5b3V0X3JlY3MnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5SZWNvbW1lbmRhdGlvbnM8L3NwYW4+PC9hPiA8YSBocmVmPScvZ3AvaGlzdG9yeT9yZWZfPW5hdl9BY2NvdW50Rmx5b3V0X2Jyb3dzaW5naGlzdG9yeScgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz48c3BhbiBjbGFzcz0nbmF2LXRleHQnPkJyb3dzaW5nIEhpc3Rvcnk8L3NwYW4+PC9hPiA8YSBocmVmPScvZ3AvdmlkZW8vd2F0Y2hsaXN0P3JlZl89bmF2X0FjY291bnRGbHlvdXRfeXdsJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPjxzcGFuIGNsYXNzPSduYXYtdGV4dCc+V2F0Y2hsaXN0PC9zcGFuPjwvYT4gPGEgaHJlZj0nL2dwL3ZpZGVvL2xpYnJhcnk/cmVmXz1uYXZfQWNjb3VudEZseW91dF95dmwnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5WaWRlbyBQdXJjaGFzZXMgJiBSZW50YWxzPC9zcGFuPjwvYT4gPGEgaHJlZj0nL2dwL2tpbmRsZS9rdS9rdV9jZW50cmFsP3JlZl89bmF2X0FjY291bnRGbHlvdXRfa3UnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5LaW5kbGUgVW5saW1pdGVkPC9zcGFuPjwvYT4gPGEgaHJlZj0nL2h6L215Y2QvbXl4P3BhZ2VUeXBlPWNvbnRlbnQmcmVmXz1uYXZfQWNjb3VudEZseW91dF9teWsnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5Db250ZW50ICYgRGV2aWNlczwvc3Bhbj48L2E+IDxhIGhyZWY9Jy9ncC9zdWJzY3JpYmUtYW5kLXNhdmUvbWFuYWdlci92aWV3c3Vic2NyaXB0aW9ucz9yZWZfPW5hdl9BY2NvdW50Rmx5b3V0X3NucycgY2xhc3M9J25hdi1saW5rIG5hdi1pdGVtJz48c3BhbiBjbGFzcz0nbmF2LXRleHQnPlN1YnNjcmliZSAmIFNhdmUgSXRlbXM8L3NwYW4+PC9hPiA8YSBocmVmPScvaHo1L3lvdXJtZW1iZXJzaGlwc2FuZHN1YnNjcmlwdGlvbnM/cmVmXz1uYXZfQWNjb3VudEZseW91dF9kaWdpdGFsX3N1YnNjcmlwdGlvbnMnIGNsYXNzPSduYXYtbGluayBuYXYtaXRlbSc+PHNwYW4gY2xhc3M9J25hdi10ZXh0Jz5NZW1iZXJzaGlwcyAmIFN1YnNjcmlwdGlvbnM8L3NwYW4+PC9hPiA8YSBocmVmPSdodHRwczovL211c2ljLmFtYXpvbi5jb20/cmVmPW5hdl95b3VyYWNjb3VudF9jbGRwbHlyJyBjbGFzcz0nbmF2LWxpbmsgbmF2LWl0ZW0nPjxzcGFuIGNsYXNzPSduYXYtdGV4dCc+TXVzaWMgTGlicmFyeTwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+XCIgfSxcbiAgICAgIFwic2lnbmluQ29udGVudFwiOiB7IFwiaHRtbFwiOiBcIjxkaXYgaWQ9J25hdi1zaWduaW4tdG9vbHRpcCc+PGEgaHJlZj0naHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hcC9zaWduaW4/b3BlbmlkLnBhcGUubWF4X2F1dGhfYWdlPTAmb3BlbmlkLnJldHVybl90bz1odHRwcyUzQSUyRiUyRnd3dy5hbWF6b24uY29tJTJGcyUyRiUzRl9lbmNvZGluZyUzRFVURjglMjZrJTNEaXBob25lJTI2cGFnZSUzRDQlMjZxaWQlM0QxNjQxMzAzMzMzJTI2cmVmJTNEc3JfcGdfNCUyNnNwcmVmaXglM0RpcGhvbmUlMjUyQ2FwcyUyNTJDMjYyJTI2cmVmXyUzRG5hdl9jdXN0cmVjX3NpZ25pbiZvcGVuaWQuaWRlbnRpdHk9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJTJGaWRlbnRpZmllcl9zZWxlY3Qmb3BlbmlkLmFzc29jX2hhbmRsZT11c2ZsZXgmb3BlbmlkLm1vZGU9Y2hlY2tpZF9zZXR1cCZvcGVuaWQuY2xhaW1lZF9pZD1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZvcGVuaWQubnM9aHR0cCUzQSUyRiUyRnNwZWNzLm9wZW5pZC5uZXQlMkZhdXRoJTJGMi4wJicgY2xhc3M9J25hdi1hY3Rpb24tYnV0dG9uJyBkYXRhLW5hdi1yb2xlPSdzaWduaW4nIGRhdGEtbmF2LXJlZj0nbmF2X2N1c3RyZWNfc2lnbmluJz48c3BhbiBjbGFzcz0nbmF2LWFjdGlvbi1pbm5lcic+U2lnbiBpbjwvc3Bhbj48L2E+PGRpdiBjbGFzcz0nbmF2LXNpZ25pbi10b29sdGlwLWZvb3Rlcic+TmV3IGN1c3RvbWVyPyA8YSBocmVmPSdodHRwczovL3d3dy5hbWF6b24uY29tL2FwL3JlZ2lzdGVyP29wZW5pZC5wYXBlLm1heF9hdXRoX2FnZT0wJm9wZW5pZC5yZXR1cm5fdG89aHR0cHMlM0ElMkYlMkZ3d3cuYW1hem9uLmNvbSUyRnMlMkYlM0ZfZW5jb2RpbmclM0RVVEY4JTI2ayUzRGlwaG9uZSUyNnBhZ2UlM0Q0JTI2cWlkJTNEMTY0MTMwMzMzMyUyNnJlZiUzRHNyX3BnXzQlMjZzcHJlZml4JTNEaXBob25lJTI1MkNhcHMlMjUyQzI2MiUyNnJlZl8lM0RuYXZfY3VzdHJlY19uZXdjdXN0Jm9wZW5pZC5pZGVudGl0eT1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAlMkZpZGVudGlmaWVyX3NlbGVjdCZvcGVuaWQuYXNzb2NfaGFuZGxlPXVzZmxleCZvcGVuaWQubW9kZT1jaGVja2lkX3NldHVwJm9wZW5pZC5jbGFpbWVkX2lkPWh0dHAlM0ElMkYlMkZzcGVjcy5vcGVuaWQubmV0JTJGYXV0aCUyRjIuMCUyRmlkZW50aWZpZXJfc2VsZWN0Jm9wZW5pZC5ucz1odHRwJTNBJTJGJTJGc3BlY3Mub3BlbmlkLm5ldCUyRmF1dGglMkYyLjAmJyBjbGFzcz0nbmF2LWEnPlN0YXJ0IGhlcmUuPC9hPjwvZGl2PjwvZGl2PlwiIH0sXG4gICAgICBcInRlbXBsYXRlc1wiOiB7XCJpdGVtTGlzdFwiOlwiPCMgdmFyIGhhc0NvbHVtbnMgPSAoZnVuY3Rpb24gKCkgeyAgdmFyIGNoZWNrQ29sdW1ucyA9IGZ1bmN0aW9uIChfaXRlbXMpIHsgICAgaWYgKCFfaXRlbXMpIHsgICAgICByZXR1cm4gZmFsc2U7ICAgIH0gICAgZm9yICh2YXIgaT0wOyBpPF9pdGVtcy5sZW5ndGg7IGkrKykgeyAgICAgIGlmIChfaXRlbXNbaV0uY29sdW1uQnJlYWsgfHwgKF9pdGVtc1tpXS5pdGVtcyAmJiBjaGVja0NvbHVtbnMoX2l0ZW1zW2ldLml0ZW1zKSkpIHsgICAgICAgIHJldHVybiB0cnVlOyAgICAgIH0gICAgfSAgICByZXR1cm4gZmFsc2U7ICB9OyAgcmV0dXJuIGNoZWNrQ29sdW1ucyhpdGVtcyk7fSgpKTsgIz48IyBpZihoYXNDb2x1bW5zKSB7ICM+ICA8IyBpZihpdGVtc1swXS5pbWFnZSAmJiBpdGVtc1swXS5pbWFnZS5zcmMpIHsgIz4gICAgPGRpdiBjbGFzcz0nbmF2LWNvbHVtbiBuYXYtY29sdW1uLWZpcnN0IG5hdi1jb2x1bW4taW1hZ2UnPiAgPCMgfSBlbHNlIGlmIChpdGVtc1swXS5ncmVldGluZykgeyAjPiAgICA8ZGl2IGNsYXNzPSduYXYtY29sdW1uIG5hdi1jb2x1bW4tZmlyc3QgbmF2LWNvbHVtbi1ncmVldGluZyc+ICA8IyB9IGVsc2UgeyAjPiAgICA8ZGl2IGNsYXNzPSduYXYtY29sdW1uIG5hdi1jb2x1bW4tZmlyc3QnPiAgPCMgfSAjPjwjIH0gIz48IyB2YXIgcmVuZGVySXRlbXMgPSBmdW5jdGlvbihpdGVtcykgeyAjPiAgPCMgalF1ZXJ5LmVhY2goaXRlbXMsIGZ1bmN0aW9uIChpLCBpdGVtKSB7ICM+ICAgIDwjIGlmKGhhc0NvbHVtbnMgJiYgaXRlbS5jb2x1bW5CcmVhaykgeyAjPiAgICAgIDwjIGlmKGl0ZW0uaW1hZ2UgJiYgaXRlbS5pbWFnZS5zcmMpIHsgIz4gICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9J25hdi1jb2x1bW4gbmF2LWNvbHVtbi1ub3RmaXJzdCBuYXYtY29sdW1uLWJyZWFrIG5hdi1jb2x1bW4taW1hZ2UnPiAgICAgIDwjIH0gZWxzZSBpZiAoaXRlbS5ncmVldGluZykgeyAjPiAgICAgICAgPC9kaXY+PGRpdiBjbGFzcz0nbmF2LWNvbHVtbiBuYXYtY29sdW1uLW5vdGZpcnN0IG5hdi1jb2x1bW4tYnJlYWsgbmF2LWNvbHVtbi1ncmVldGluZyc+ICAgICAgPCMgfSBlbHNlIHsgIz4gICAgICAgIDwvZGl2PjxkaXYgY2xhc3M9J25hdi1jb2x1bW4gbmF2LWNvbHVtbi1ub3RmaXJzdCBuYXYtY29sdW1uLWJyZWFrJz4gICAgICA8IyB9ICM+ICAgIDwjIH0gIz4gICAgPCMgaWYoaXRlbS5kaXZpZGVyQmVmb3JlKSB7ICM+ICAgICAgPGRpdiBjbGFzcz0nbmF2LWRpdmlkZXInPjwvZGl2PiAgICA8IyB9ICM+ICAgIDwjIGlmKGl0ZW0udGV4dCB8fCBpdGVtLmNvbnRlbnQpIHsgIz4gICAgICA8IyBpZihpdGVtLnVybCkgeyAjPiAgICAgICAgPGEgaHJlZj0nPCM9aXRlbS51cmwgIz4nIGNsYXNzPSduYXYtbGluayAgICAgIDwjIH0gZWxzZSB7Iz4gICAgICAgIDxzcGFuIGNsYXNzPScgICAgICA8IyB9ICM+ICAgICAgPCMgaWYoaXRlbS5wYW5lbEtleSkgeyAjPiAgICAgICAgbmF2LWhhc1BhbmVsICAgICAgPCMgfSAjPiAgICAgIDwjIGlmKGl0ZW0uaXRlbXMpIHsgIz4gICAgICAgIG5hdi10aXRsZSAgICAgIDwjIH0gIz4gICAgICA8IyBpZihpdGVtLmRlY29yYXRlID09ICdjYXJhdCcpIHsgIz4gICAgICAgIG5hdi1jYXJhdCAgICAgIDwjIH0gIz4gICAgICA8IyBpZihpdGVtLmRlY29yYXRlID09ICduYXYtYWN0aW9uLWJ1dHRvbicpIHsgIz4gICAgICAgIG5hdi1hY3Rpb24tYnV0dG9uICAgICAgPCMgfSAjPiAgICAgIG5hdi1pdGVtJyAgICAgIDwjIGlmKGl0ZW0uZXh0cmEpIHsgIz4gICAgICAgIDwjPWl0ZW0uZXh0cmEgIz4gICAgICA8IyB9ICM+ICAgICAgPCMgaWYoaXRlbS5pZCkgeyAjPiAgICAgICAgaWQ9JzwjPWl0ZW0uaWQgIz4nICAgICAgPCMgfSAjPiAgICAgIDwjIGlmKGl0ZW0uZGF0YU5hdlJvbGUpIHsgIz4gICAgICAgIGRhdGEtbmF2LXJvbGU9JzwjPWl0ZW0uZGF0YU5hdlJvbGUgIz4nICAgICAgPCMgfSAjPiAgICAgIDwjIGlmKGl0ZW0uZGF0YU5hdlJlZikgeyAjPiAgICAgICAgZGF0YS1uYXYtcmVmPSc8Iz1pdGVtLmRhdGFOYXZSZWYgIz4nICAgICAgPCMgfSAjPiAgICAgIDwjIGlmKGl0ZW0ucGFuZWxLZXkpIHsgIz4gICAgICAgIGRhdGEtbmF2LXBhbmVsa2V5PSc8Iz1pdGVtLnBhbmVsS2V5ICM+JyAgICAgICAgcm9sZT0nbmF2aWdhdGlvbicgICAgICAgIGFyaWEtbGFiZWw9JzwjPWl0ZW0udGV4dCM+JyAgICAgIDwjIH0gIz4gICAgICA8IyBpZihpdGVtLnN1YnRleHRLZXkpIHsgIz4gICAgICAgIGRhdGEtbmF2LXN1YnRleHRrZXk9JzwjPWl0ZW0uc3VidGV4dEtleSAjPicgICAgICA8IyB9ICM+ICAgICAgPCMgaWYoaXRlbS5pbWFnZSAmJiBpdGVtLmltYWdlLmhlaWdodCA+IDE2KSB7ICM+ICAgICAgICBzdHlsZT0nbGluZS1oZWlnaHQ6PCM9aXRlbS5pbWFnZS5oZWlnaHQgIz5weDsnICAgICAgPCMgfSAjPiAgICAgID4gICAgICA8IyBpZihpdGVtLmRlY29yYXRlID09ICdjYXJhdCcpIHsgIz4gICAgICAgIDxpIGNsYXNzPSduYXYtaWNvbic+PC9pPiAgICAgIDwjIH0gIz4gICAgICA8IyBpZihpdGVtLmltYWdlICYmIGl0ZW0uaW1hZ2Uuc3JjKSB7ICM+ICAgICAgICA8aW1nIGNsYXNzPSduYXYtaW1hZ2UnIHNyYz0nPCM9aXRlbS5pbWFnZS5zcmMgIz4nIHN0eWxlPSdoZWlnaHQ6PCM9aXRlbS5pbWFnZS5oZWlnaHQgIz5weDsgd2lkdGg6PCM9aXRlbS5pbWFnZS53aWR0aCAjPnB4OycgLz4gICAgICA8IyB9ICM+ICAgICAgPCMgaWYoaXRlbS50ZXh0KSB7ICM+ICAgICAgICA8c3BhbiBjbGFzcz0nbmF2LXRleHQ8IyBpZihpdGVtLmNsYXNzbmFtZSkgeyAjPiA8Iz1pdGVtLmNsYXNzbmFtZSAjPjwjIH0gIz4nPjwjPWl0ZW0udGV4dCM+PCMgaWYoaXRlbS5iYWRnZVRleHQpIHsgIz4gICAgICAgICAgPHNwYW4gY2xhc3M9J25hdi1iYWRnZSc+PCM9aXRlbS5iYWRnZVRleHQjPjwvc3Bhbj4gICAgICAgIDwjIH0gIz48L3NwYW4+ICAgICAgPCMgfSBlbHNlIGlmIChpdGVtLmNvbnRlbnQpIHsgIz4gICAgICAgIDxzcGFuIGNsYXNzPSduYXYtY29udGVudCc+PCMgalF1ZXJ5LmVhY2goaXRlbS5jb250ZW50LCBmdW5jdGlvbiAoaiwgY0l0ZW0pIHsgIz48IyBpZihjSXRlbS51cmwgJiYgY0l0ZW0udGV4dCkgeyAjPjxhIGhyZWY9JzwjPWNJdGVtLnVybCAjPicgY2xhc3M9J25hdi1hJz48Iz1jSXRlbS50ZXh0ICM+PC9hPjwjIH0gZWxzZSBpZiAoY0l0ZW0udGV4dCkgeyAjPjwjPWNJdGVtLnRleHQjPjwjIH0gIz48IyB9KTsgIz48L3NwYW4+ICAgICAgPCMgfSAjPiAgICAgIDwjIGlmKGl0ZW0uc3VidGV4dCkgeyAjPiAgICAgICAgPHNwYW4gY2xhc3M9J25hdi1zdWJ0ZXh0Jz48Iz1pdGVtLnN1YnRleHQgIz48L3NwYW4+ICAgICAgPCMgfSAjPiAgICAgIDwjIGlmKGl0ZW0udXJsKSB7ICM+ICAgICAgICA8L2E+ICAgICAgPCMgfSBlbHNlIHsjPiAgICAgICAgPC9zcGFuPiAgICAgIDwjIH0gIz4gICAgPCMgfSAjPiAgICA8IyBpZihpdGVtLmltYWdlICYmIGl0ZW0uaW1hZ2Uuc3JjKSB7ICM+ICAgICAgPCMgaWYoaXRlbS51cmwpIHsgIz4gICAgICAgIDxhIGhyZWY9JzwjPWl0ZW0udXJsICM+Jz4gICAgICAgPCMgfSAjPiAgICAgIDxpbWcgY2xhc3M9J25hdi1pbWFnZScgICAgICA8IyBpZihpdGVtLmlkKSB7ICM+ICAgICAgICBpZD0nPCM9aXRlbS5pZCAjPicgICAgICA8IyB9ICM+ICAgICAgc3JjPSc8Iz1pdGVtLmltYWdlLnNyYyAjPicgPCMgaWYgKGl0ZW0uYWx0KSB7ICM+IGFsdD0nPCM9IGl0ZW0uYWx0ICM+JzwjIH0gIz4vPiAgICAgIDwjIGlmKGl0ZW0udXJsKSB7ICM+ICAgICAgICA8L2E+ICAgICAgIDwjIH0gIz4gICAgPCMgfSAjPiAgICA8IyBpZihpdGVtLml0ZW1zKSB7ICM+ICAgICAgPGRpdiBjbGFzcz0nbmF2LXBhbmVsJz4gPCMgcmVuZGVySXRlbXMoaXRlbS5pdGVtcyk7ICM+IDwvZGl2PiAgICA8IyB9ICM+ICA8IyB9KTsgIz48IyB9OyAjPjwjIHJlbmRlckl0ZW1zKGl0ZW1zKTsgIz48IyBpZihoYXNDb2x1bW5zKSB7ICM+ICA8L2Rpdj48IyB9ICM+XCIsXCJzdWJuYXZcIjpcIjwjIGlmIChvYmogJiYgb2JqLnR5cGUgPT09ICd2ZXJ0aWNhbCcpIHsgIz4gIDwjIGpRdWVyeS5lYWNoKG9iai5yb3dzLCBmdW5jdGlvbiAoaSwgcm93KSB7ICM+ICAgIDwjIGlmIChyb3cuZmx5b3V0RWxlbWVudCA9PT0gJ2J1dHRvbicpIHsgIz4gICAgICA8ZGl2IGNsYXNzPSduYXZfc3ZfZm9fdl9idXR0b24nICAgICAgICA8IyBpZiAocm93LmVsZW1lbnRTdHlsZSkgeyAjPiAgICAgICAgICBzdHlsZT0nPCM9IHJvdy5lbGVtZW50U3R5bGUgIz4nICAgICAgICA8IyB9ICM+ICAgICAgPiAgICAgICAgPGEgaHJlZj0nPCM9cm93LnVybCAjPicgY2xhc3M9J25hdi1hY3Rpb24tYnV0dG9uIG5hdi1zcHJpdGUnPiAgICAgICAgICA8Iz1yb3cudGV4dCAjPiAgICAgICAgPC9hPiAgICAgIDwvZGl2PiAgICA8IyB9IGVsc2UgaWYgKHJvdy5mbHlvdXRFbGVtZW50ID09PSAnbGlzdCcgJiYgcm93Lmxpc3QpIHsgIz4gICAgICA8IyBqUXVlcnkuZWFjaChyb3cubGlzdCwgZnVuY3Rpb24gKGosIGxpc3QpIHsgIz4gICAgICAgIDxkaXYgY2xhc3M9J25hdl9zdl9mb192X2NvbHVtbiA8Iz0oaiA9PT0gMCkgPyAnbmF2X3N2X2ZvX3ZfZmlyc3QnIDogJycgIz4nPiAgICAgICAgICA8dWwgY2xhc3M9JzwjPWxpc3QuZWxlbWVudENsYXNzICM+Jz4gICAgICAgICAgPCMgalF1ZXJ5LmVhY2gobGlzdC5saW5rTGlzdCwgZnVuY3Rpb24gKGssIGxpbmspIHsgIz4gICAgICAgICAgICA8IyBpZiAoayA9PT0gMCkgeyBsaW5rLmVsZW1lbnRDbGFzcyArPSAnIG5hdl9zdl9mb192X2ZpcnN0JzsgfSAjPiAgICAgICAgICAgIDxsaSBjbGFzcz0nPCM9bGluay5lbGVtZW50Q2xhc3MgIz4nPiAgICAgICAgICAgICAgPCMgaWYgKGxpbmsudXJsKSB7ICM+ICAgICAgICAgICAgICAgIDxhIGhyZWY9JzwjPWxpbmsudXJsICM+JyBjbGFzcz0nbmF2X2EnPjwjPWxpbmsudGV4dCAjPjwvYT4gICAgICAgICAgICAgIDwjIH0gZWxzZSB7ICM+ICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSduYXZfc3ZfZm9fdl9zcGFuJz48Iz1saW5rLnRleHQgIz48L3NwYW4+ICAgICAgICAgICAgICA8IyB9ICM+ICAgICAgICAgICAgPC9saT4gICAgICAgICAgPCMgfSk7ICM+ICAgICAgICAgIDwvdWw+ICAgICAgICA8L2Rpdj4gICAgICA8IyB9KTsgIz4gICAgPCMgfSBlbHNlIGlmIChyb3cuZmx5b3V0RWxlbWVudCA9PT0gJ2xpbmsnKSB7ICM+ICAgICAgPCMgaWYgKHJvdy50b3BTcGFjZXIpIHsgIz4gICAgICAgIDxkaXYgY2xhc3M9J25hdl9zdl9mb192X2NsZWFyJz48L2Rpdj4gICAgICA8IyB9ICM+ICAgICAgPGRpdiBjbGFzcz0nPCM9cm93LmVsZW1lbnRDbGFzcyAjPic+ICAgICAgICA8YSBocmVmPSc8Iz1yb3cudXJsICM+JyBjbGFzcz0nbmF2X3N2X2ZvX3ZfbG1hcmdpbiBuYXZfYSc+ICAgICAgICAgIDwjPXJvdy50ZXh0ICM+ICAgICAgICA8L2E+ICAgICAgPC9kaXY+ICAgIDwjIH0gIz4gIDwjIH0pOyAjPjwjIH0gZWxzZSBpZiAob2JqKSB7ICM+ICA8ZGl2IGNsYXNzPSduYXZfc3ZfZm9fc2NoZWR1bGVkJz4gICAgPCM9IG9iaiAjPiAgPC9kaXY+PCMgfSAjPlwiLFwiaHRtbExpc3RcIjpcIjwjIGpRdWVyeS5lYWNoKGl0ZW1zLCBmdW5jdGlvbiAoaSwgaXRlbSkgeyAjPiAgPGRpdiBjbGFzcz0nbmF2LWl0ZW0nPiAgICA8Iz1pdGVtICM+ICA8L2Rpdj48IyB9KTsgIz5cIn1cbiAgICB9KVxuICB9KVxuPC9zY3JpcHQ+XG5cbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2NvbmZpZy5mbHlvdXRVUkwnLCBudWxsKTtcbiAgd2luZG93LiROYXYgJiYgJE5hdi5kZWNsYXJlKCdidGYubGl0ZScpO1xuICB3aW5kb3cuJE5hdiAmJiAkTmF2LmRlY2xhcmUoJ2J0Zi5mdWxsJyk7XG4gIHdpbmRvdy4kTmF2ICYmICROYXYuZGVjbGFyZSgnYnRmLmV4aXN0cycpO1xuICAod2luZG93LkFtYXpvblVJUGFnZUpTID8gQW1hem9uVUlQYWdlSlMgOiBQKS5yZWdpc3RlcignbmF2Q0YnKTtcbjwvc2NyaXB0PlxuXG4gIDxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICAgICAgd2luZG93LiROYXYgJiYgJE5hdi53aGVuKCckJykucnVuKCdDQklNYXJrZXRwbGFjZVJlZGlyZWN0T3ZlcmxheU5hdnlhYW4nLCBmdW5jdGlvbigkKSB7XG4gICAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICB1cmw6ICcvY3Jvc3NfYm9yZGVyX2ludGVyc3RpdGlhbC9yZW5kZXInLFxuICAgICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICAgIG1hcmtldHBsYWNlSWQ6ICdBVFZQREtJS1gwREVSJyxcbiAgICAgICAgICAgICAgICAgICAgICBsb2NhbENvdW50cnlDb2RlOiAnVVMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgIGN1c3RvbWVySWQ6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbklkOiAnMTQ3XFx4MkQ4NjkzNjY3XFx4MkQ1OTAxMDMxJyxcbiAgICAgICAgICAgICAgICAgICAgICBkZXZpY2VUeXBlOiAnREVTS1RPUCcsXG4gICAgICAgICAgICAgICAgICAgICAgcmVmZXJyZXI6ICcnLFxuICAgICAgICAgICAgICAgICAgICAgIHVybDogJ1xceDJGcycsXG4gICAgICAgICAgICAgICAgICAgICAgcGFnZVR5cGU6ICdTZWFyY2gnLFxuICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlT2ZQcmVmZXJlbmNlOiAnZW5fVVMnLFxuICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1zOiB7XCJzZWFyY2hLZXl3b3JkXCI6XCJpcGhvbmVcIn0sXG4gICAgICAgICAgICAgICAgICAgICAgd2VibGFiVHJlYXRtZW50TWFwOiB7XCJDUk9TU19CT1JERVJfSU5URVJTVElUSUFMX0VTX1VTXzM0MDAxN1wiOlwiQ1wiLFwiTkFSWF9JTlRFUlNUSVRJQUxfTU9CSUxFX0RQX1JFRElSRUNUSU9OXzMzNjI0OVwiOlwiVDFcIixcIkNST1NTX0JPUkRFUl9JTlRFUlNUSVRJQUxfRUdfMzAyMDgwXCI6XCJDXCIsXCJOQVJYX0dPTERCT1hfUkVESVJFQ1RJT05fMzE5OTY5XCI6XCJUMVwiLFwiQ1JPU1NfQk9SREVSX0lOVEVSU1RJVElBTF9TRUFSQ0hfUkVESVJFQ1RJT05fMzU1MTU3XCI6XCJUMVwiLFwiQ1JPU1NfQk9SREVSX0lOVEVSU1RJVElBTF9NWF9VU18zNDE3MThcIjpcIkNcIixcIkNCSV8zNTUwNTVcIjpcIkNcIixcIk5BUlhfSU5URVJTVElUSUFMX05FV19DWF8zNzIyOTFcIjpcIlQxXCIsXCJOQVJYX0lOVEVSU1RJVElBTF9NSUdSQVRJT05fMzE1NTE4XCI6XCJUMlwiLFwiTVdFQl9DUk9TU19CT1JERVJfSU5URVJTVElUSUFMX1NHXzM2Njc2MlwiOlwiQ1wiLFwiTVdFQl9DUk9TU19CT1JERVJfSU5URVJTVElUSUFMX1NFXzM2Njc2NlwiOlwiVDFcIixcIk1XRUJfQ1JPU1NfQk9SREVSX0lOVEVSU1RJVElBTF9TQV8zNjY3NjdcIjpcIlQxXCIsXCJNV0VCX0NST1NTX0JPUkRFUl9JTlRFUlNUSVRJQUxfUExfMzY2NzY4XCI6XCJUMVwiLFwiTVdFQl9DUk9TU19CT1JERVJfSU5URVJTVElUSUFMX05MXzM2Njc2OVwiOlwiVDFcIixcIk1XRUJfQ1JPU1NfQk9SREVSX0lOVEVSU1RJVElBTF9BVV8zNjY3NzNcIjpcIkNcIixcIk1XRUJfQ1JPU1NfQk9SREVSX0lOVEVSU1RJVElBTF9BRV8zNjY3NzFcIjpcIkNcIixcIk1XRUJfQ1JPU1NfQk9SREVSX0lOVEVSU1RJVElBTF9FR18zODcyMzRcIjpcIlQxXCJ9XG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImh0bWxcIixcbiAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAkKCdib2R5JykuYXBwZW5kKGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgPC9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiPlxuICB3aW5kb3cuJE5hdiAmJiB3aW5kb3cuJE5hdi5idWlsZCgnUGxkbkxvY2FsU3RvcmFnZScsIGZ1bmN0aW9uKCkge1xuICAgIHZhciBQbGRuTG9jYWxTdG9yYWdlID0gZnVuY3Rpb24oKSB7fTtcblxuICAgIFBsZG5Mb2NhbFN0b3JhZ2UucHJvdG90eXBlLnNldEl0ZW0gPSBmdW5jdGlvbihrZXksIG9iaikge1xuICAgICAgaWYgKHR5cGVvZiBvYmogIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG9iaiA9IHdpbmRvdy5KU09OICYmIHdpbmRvdy5KU09OLnN0cmluZ2lmeShvYmopO1xuICAgICAgfVxuXG4gICAgICB0cnkge1xuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIG9iaik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBjYXRjaCAoZXhjZXB0aW9uKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH07XG4gICAgfTtcblxuICAgIFBsZG5Mb2NhbFN0b3JhZ2UucHJvdG90eXBlLmdldEl0ZW0gPSBmdW5jdGlvbihrZXkpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgfSBjYXRjaChleGNlcHRpb24pIHt9O1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IFBsZG5Mb2NhbFN0b3JhZ2UoKTtcbiAgfSk7XG5cbiAgd2luZG93LiROYXYgJiYgd2luZG93LiROYXYud2hlbignUGxkbkxvY2FsU3RvcmFnZScpLnJ1bignUGxkblVjb2xDaGVjaycsIGZ1bmN0aW9uKHN0b3JhZ2UpIHtcbiAgICBpZiAoIXN0b3JhZ2UuZ2V0SXRlbSgnYW1hem9uU21pbGVDYW1wYWlnbnMnKSkge1xuICAgICAgc3RvcmFnZS5zZXRJdGVtKCdhbWF6b25TbWlsZUNhbXBhaWducycsIHtcbiAgICAgICAgXCJ1Y29sXCI6IHtcbiAgICAgICAgICBcIm9wdE91dFwiOiBmYWxzZSxcbiAgICAgICAgICBcImhpdHNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImRhdGVcIjogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgXCJyZWRpcmVjdFwiOiBmYWxzZSxcbiAgICAgICAgICAgICAgXCJvcHRPdXRcIjogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG48L3NjcmlwdD5cblxuPCEtLSBOQVZZQUFOIEJURiBFTkQgLS0+PCEtLSBzcDplbmQtZmVhdHVyZTpuYXYtYnRmIC0tPlxuPCEtLSBzcDpmZWF0dXJlOmhvc3QtYnRmIC0tPlxuPCEtLSBzcDplbmQtZmVhdHVyZTpob3N0LWJ0ZiAtLT5cbjwhLS0gc3A6ZmVhdHVyZTphdWktcHJlbG9hZCAtLT5cbjwhLS0gc3A6ZW5kLWZlYXR1cmU6YXVpLXByZWxvYWQgLS0+XG48IS0tIHNwOmZlYXR1cmU6bmF2LWZvb3RlciAtLT5cblxuICA8IS0tIE5BVllBQU4gRk9PVEVSIFNUQVJUIC0tPlxuICA8IS0tIFdJVEggTU9aQVJUIC0tPlxuXG5cbiAgICAgICAgXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbjxkaXYgaWQ9XCJyaGZcIiBjbGFzcz1cImNvcGlsb3Qtc2VjdXJlLWRpc3BsYXlcIiBzdHlsZT1cImNsZWFyOmJvdGhcIiByb2xlPVwiY29tcGxlbWVudGFyeVwiIGFyaWEtbGFiZWw9XCJZb3VyIHJlY2VudGx5IHZpZXdlZCBpdGVtcyBhbmQgZmVhdHVyZWQgcmVjb21tZW5kYXRpb25zXCI+XG5cbiAgICA8ZGl2IGNsYXNzPVwicmhmLWZyYW1lXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5cbiAgICAgICAgPGJyIC8+XG4gICAgICAgIDxkaXYgaWQ9XCJyaGYtY29udGFpbmVyXCI+XG5cblxuXG5cblxuXG4gICAgPGRpdiBjbGFzcz0ncmhmLWxvYWRpbmctb3V0ZXInPlxuICAgICAgICA8dGFibGUgY2xhc3M9J3JoZi1sb2FkaW5nLW1pZGRsZSc+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdyaGYtbG9hZGluZy1pbm5lcic+XG4gICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL3BlcnNvbmFsaXphdGlvbi95YmgvbG9hZGluZy00eC1ncmF5Ll9DQjQ4NTkxNjkyMF8uZ2lmXCIgLz5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgPC90YWJsZT5cbiAgICA8L2Rpdj5cblxuXG5cblxuXG5cblxuXG48ZGl2IGlkPVwicmhmLWNvbnRleHRcIj5cbiAgICA8c2NyaXB0IHR5cGU9J2FwcGxpY2F0aW9uL2pzb24nPlxuICAgICAgICB7XCJyaGZIYW5kbGVyUGFyYW1zXCI6e1wic2VhcmNoXCI6XCJcIixcInJoZkFzaW5zXCI6XCJcIixcIm5vUDEzTkNhY2hlXCI6XCJcIixcIndlYmxhYlRyaWdnZXJzXCI6XCJcIixcInJoZkd1cnVwYURlcHJlY2F0aW9uV2VibGFiXCI6XCIxXCIsXCJhdWlEZWJ1Z1wiOlwiXCIsXCJrZXl3b3Jkc1wiOlwiXCIsXCJrXCI6XCJpcGhvbmVcIixcInJ2aUFzaW5zXCI6XCJcIixcInVybFwiOlwiXCIsXCJwYXJlbnRTZXNzaW9uXCI6XCIxNDctODY5MzY2Ny01OTAxMDMxXCIsXCJyaGZTdGF0ZVwiOlwiXCIsXCJjb250ZXh0TWV0YWRhdGFPdmVycmlkZVwiOlwiXCIsXCJjdXJyZW50U3ViUGFnZVR5cGVcIjpcIkxpc3RcIixcImZpZWxkLWtleXdvcmRzXCI6XCJcIixcInJlbGF0ZWRSZXF1ZXN0SWRcIjpcIjFRNzBNNzhDQ1M4QVM5OVJNQ0E4XCIsXCJyZWNzQXNpbnNcIjpcIlwiLFwicmhmSG9yaXpvbnRlV2VibGFiXCI6XCIxXCIsXCJleGNsdWRlQVNJTlwiOlwiXCIsXCJhdWRpdEVuYWJsZWRcIjpcIlwiLFwiY3VzdG9tZXJJZFwiOlwiXCIsXCJ0ZXN0UmVjc0ZhaWx1cmVcIjpcIlwiLFwicHJldmlld0NhbXBhaWduc1wiOlwiXCIsXCJmb3JjZVdpZGdldHNcIjpcIlwiLFwiY3VycmVudFBhZ2VUeXBlXCI6XCJTZWFyY2hcIixcInN0cmluZ0RlYnVnXCI6XCJcIn0sXCJzdWJQYWdlVHlwZVwiOlwiTGlzdFwiLFwicmVxdWVzdElkXCI6XCIxUTcwTTc4Q0NTOEFTOTlSTUNBOFwiLFwic2Vzc2lvbklkXCI6XCIxNDctODY5MzY2Ny01OTAxMDMxXCIsXCJjdXN0b21lcklkXCI6XCJcIixcInBhZ2VUeXBlXCI6XCJTZWFyY2hcIixcInliaEhhbmRsZXJQYXJhbXNcIjp7XCJyZWxhdGVkUmVxdWVzdElkXCI6XCIxUTcwTTc4Q0NTOEFTOTlSTUNBOFwiLFwiY3VycmVudFBhZ2VUeXBlXCI6XCJTZWFyY2hcIixcInBhcmVudFNlc3Npb25cIjpcIjE0Ny04NjkzNjY3LTU5MDEwMzFcIn19XG4gICAgPC9zY3JpcHQ+XG48L2Rpdj5cblxuPC9kaXY+PG5vc2NyaXB0PlxuXG48ZGl2IGNsYXNzPVwicmhmLWJvcmRlclwiPlxuXG4gICAgICAgIDxkaXYgY2xhc3M9XCJyaGYtaGVhZGVyXCI+XG4gICAgICAgIFlvdXIgcmVjZW50bHkgdmlld2VkIGl0ZW1zIGFuZCBmZWF0dXJlZCByZWNvbW1lbmRhdGlvbnNcbiAgICA8L2Rpdj5cblxuPGRpdiBjbGFzcz1cInJoZi1mb290ZXJcIj5cbiAgICA8ZGl2IGNsYXNzPVwicnZpLWNvbnRhaW5lclwiPlxuXG48ZGl2IGNsYXNzPVwieWJoLWVkaXRcIj5cbiAgICA8ZGl2IGNsYXNzPVwieWJoLWVkaXQtYXJyb3dcIj4gJiM4MjUwOyA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwieWJoLWVkaXQtbGlua1wiPjxhIGhyZWY9XCIvZ3AveW91cnN0b3JlL3B5bS9yZWY9cGRfcHltbF9yaGYvMTQ3LTg2OTM2NjctNTkwMTAzMVwiPlZpZXcgb3IgZWRpdCB5b3VyIGJyb3dzaW5nIGhpc3Rvcnk8L2E+PC9kaXY+XG48L2Rpdj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJuby1ydmktbWVzc2FnZVwiPkFmdGVyIHZpZXdpbmcgcHJvZHVjdCBkZXRhaWwgcGFnZXMsIGxvb2sgaGVyZSB0byBmaW5kIGFuIGVhc3kgd2F5IHRvIG5hdmlnYXRlIGJhY2sgdG8gcGFnZXMgeW91IGFyZSBpbnRlcmVzdGVkIGluLjwvc3Bhbj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuPC9kaXY+XG48L25vc2NyaXB0PjxkaXYgaWQ9XCJyaGYtZXJyb3JcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj5cblxuPGRpdiBjbGFzcz1cInJoZi1ib3JkZXJcIj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwicmhmLWhlYWRlclwiPlxuICAgICAgICBZb3VyIHJlY2VudGx5IHZpZXdlZCBpdGVtcyBhbmQgZmVhdHVyZWQgcmVjb21tZW5kYXRpb25zXG4gICAgPC9kaXY+XG5cbjxkaXYgY2xhc3M9XCJyaGYtZm9vdGVyXCI+XG4gICAgPGRpdiBjbGFzcz1cInJ2aS1jb250YWluZXJcIj5cblxuPGRpdiBjbGFzcz1cInliaC1lZGl0XCI+XG4gICAgPGRpdiBjbGFzcz1cInliaC1lZGl0LWFycm93XCI+ICYjODI1MDsgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInliaC1lZGl0LWxpbmtcIj48YSBocmVmPVwiL2dwL3lvdXJzdG9yZS9weW0vcmVmPXBkX3B5bWxfcmhmLzE0Ny04NjkzNjY3LTU5MDEwMzFcIj5WaWV3IG9yIGVkaXQgeW91ciBicm93c2luZyBoaXN0b3J5PC9hPjwvZGl2PlxuPC9kaXY+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwibm8tcnZpLW1lc3NhZ2VcIj5BZnRlciB2aWV3aW5nIHByb2R1Y3QgZGV0YWlsIHBhZ2VzLCBsb29rIGhlcmUgdG8gZmluZCBhbiBlYXN5IHdheSB0byBuYXZpZ2F0ZSBiYWNrIHRvIHBhZ2VzIHlvdSBhcmUgaW50ZXJlc3RlZCBpbi48L3NwYW4+XG4gICAgPC9kaXY+XG48L2Rpdj5cbjwvZGl2PlxuPC9kaXY+XG4gICAgICAgIDxiciAvPlxuICAgIDwvZGl2PlxuPC9kaXY+XG5cbjxkaXYgY2xhc3M9XCJuYXZMZWZ0Rm9vdGVyIG5hdi1zcHJpdGUtdjFcIiBpZD1cIm5hdkZvb3RlclwiPlxuICBcbjxhIGhyZWY9XCIjbmF2LXRvcFwiIGlkPVwibmF2QmFja1RvVG9wXCIgYXJpYS1sYWJlbD1cIkJhY2sgdG8gdG9wXCI+XG4gIDxkaXYgY2xhc3M9XCJuYXZGb290ZXJCYWNrVG9Ub3BcIj5cbiAgPHNwYW4gY2xhc3M9XCJuYXZGb290ZXJCYWNrVG9Ub3BUZXh0XCI+XG4gICAgQmFjayB0byB0b3BcbiAgPC9zcGFuPlxuICA8L2Rpdj5cbjwvYT5cblxuICBcbjxkaXYgY2xhc3M9XCJuYXZGb290ZXJWZXJ0aWNhbENvbHVtbiBuYXZBY2Nlc3NpYmlsaXR5XCIgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyVmVydGljYWxSb3cgbmF2QWNjZXNzaWJpbGl0eVwiIHN0eWxlPVwiZGlzcGxheTogdGFibGUtcm93O1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGlua0NvbCBuYXZBY2Nlc3NpYmlsaXR5XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdkZvb3RlckNvbEhlYWRcIj5HZXQgdG8gS25vdyBVczwvZGl2PlxuICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJuYXZfZmlyc3RcIj5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5qb2JzXCIgY2xhc3M9XCJuYXZfYVwiPkNhcmVlcnM8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpID5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vYmxvZy5hYm91dGFtYXpvbi5jb20vP3V0bV9zb3VyY2U9Z2F0ZXdheSZ1dG1fbWVkaXVtPWZvb3RlclwiIGNsYXNzPVwibmF2X2FcIj5CbG9nPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSA+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3d3dy5hYm91dGFtYXpvbi5jb20vP3V0bV9zb3VyY2U9Z2F0ZXdheSZ1dG1fbWVkaXVtPWZvb3RlclwiIGNsYXNzPVwibmF2X2FcIj5BYm91dCBBbWF6b248L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpID5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vaXJcIiBjbGFzcz1cIm5hdl9hXCI+SW52ZXN0b3IgUmVsYXRpb25zPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5hdl9sYXN0IFwiPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2dwL2Jyb3dzZS5odG1sP25vZGU9MjEwMjMxMzAxMSZyZWZfPWZvb3Rlcl9kZXZpY2VzXCIgY2xhc3M9XCJuYXZfYVwiPkFtYXpvbiBEZXZpY2VzPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sU3BhY2VySW5uZXIgbmF2QWNjZXNzaWJpbGl0eVwiPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGlua0NvbCBuYXZBY2Nlc3NpYmlsaXR5XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdkZvb3RlckNvbEhlYWRcIj5NYWtlIE1vbmV5IHdpdGggVXM8L2Rpdj5cbiAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpIGNsYXNzPVwibmF2X2ZpcnN0XCI+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3NlcnZpY2VzLmFtYXpvbi5jb20vc2VsbC5odG1sP2xkPUFaRlNTT0EmcmVmXz1mb290ZXJfc29hXCIgY2xhc3M9XCJuYXZfYVwiPlNlbGwgcHJvZHVjdHMgb24gQW1hem9uPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSA+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL3NlcnZpY2VzLmFtYXpvbi5jb20vYW1hem9uLWJ1c2luZXNzLmh0bWw/bGQ9dXNiMmJ1bmlmb290ZXImcmVmXz1mb290ZXJfYjJiXCIgY2xhc3M9XCJuYXZfYVwiPlNlbGwgb24gQW1hem9uIEJ1c2luZXNzPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSA+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2RldmVsb3Blci5hbWF6b24uY29tXCIgY2xhc3M9XCJuYXZfYVwiPlNlbGwgYXBwcyBvbiBBbWF6b248L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpID5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vYWZmaWxpYXRlLXByb2dyYW0uYW1hem9uLmNvbS9cIiBjbGFzcz1cIm5hdl9hXCI+QmVjb21lIGFuIEFmZmlsaWF0ZTwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9hZHZlcnRpc2luZy5hbWF6b24uY29tLz9yZWY9ZXh0X2Ftem5fZnRyXCIgY2xhc3M9XCJuYXZfYVwiPkFkdmVydGlzZSBZb3VyIFByb2R1Y3RzPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSA+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCIvZ3Avc2VsbGVyLWFjY291bnQvbW0tc3VtbWFyeS1wYWdlLmh0bWw/bGQ9QVpGb290ZXJTZWxmUHVibGlzaCZ0b3BpYz0yMDAyNjA1MjAmcmVmXz1mb290ZXJfcHVibGlzaGluZ1wiIGNsYXNzPVwibmF2X2FcIj5TZWxmLVB1Ymxpc2ggd2l0aCBVczwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cDovL2dvLnRoZWh1Yi1hbWF6b24uY29tL2FtYXpvbi1odWItbG9ja2VyXCIgY2xhc3M9XCJuYXZfYVwiPkhvc3QgYW4gQW1hem9uIEh1YjwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJuYXZfbGFzdCBuYXZfYV9jYXJhdFwiPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm5hdl9hX2NhcmF0XCI+4oC6PC9zcGFuPjxhIGhyZWY9XCIvYi8/bm9kZT0xODE5MDEzMTAxMSZsZD1BWlVTU09BLXNlZW1vcmUmcmVmXz1mb290ZXJfc2VlbW9yZVwiIGNsYXNzPVwibmF2X2FcIj5TZWUgTW9yZSBNYWtlIE1vbmV5IHdpdGggVXM8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJuYXZGb290ZXJDb2xTcGFjZXJJbm5lciBuYXZBY2Nlc3NpYmlsaXR5XCI+PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJuYXZGb290ZXJMaW5rQ29sIG5hdkFjY2Vzc2liaWxpdHlcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sSGVhZFwiPkFtYXpvbiBQYXltZW50IFByb2R1Y3RzPC9kaXY+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5hdl9maXJzdFwiPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2RwL0IwNzk4NEpOM0w/cGxhdHRyPUFDT01GTyZpZT1VVEYtOFwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQnVzaW5lc3MgQ2FyZDwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2dwL2Jyb3dzZS5odG1sP25vZGU9MTYyMTg2MTkwMTEmcmVmXz1mb290ZXJfc3dwXCIgY2xhc3M9XCJuYXZfYVwiPlNob3Agd2l0aCBQb2ludHM8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpID5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cIi9ncC9icm93c2UuaHRtbD9ub2RlPTEwMjMyNDQwMDExJnJlZl89Zm9vdGVyX3JlbG9hZF91c1wiIGNsYXNzPVwibmF2X2FcIj5SZWxvYWQgWW91ciBCYWxhbmNlPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5hdl9sYXN0IFwiPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2dwL2Jyb3dzZS5odG1sP25vZGU9Mzg4MzA1MDExJnJlZl89Zm9vdGVyX3RmeFwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQ3VycmVuY3kgQ29udmVydGVyPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgPC91bD5cbiAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyQ29sU3BhY2VySW5uZXIgbmF2QWNjZXNzaWJpbGl0eVwiPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGlua0NvbCBuYXZBY2Nlc3NpYmlsaXR5XCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm5hdkZvb3RlckNvbEhlYWRcIj5MZXQgVXMgSGVscCBZb3U8L2Rpdj5cbiAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpIGNsYXNzPVwibmF2X2ZpcnN0XCI+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCIvZ3AvaGVscC9jdXN0b21lci9kaXNwbGF5Lmh0bWw/bm9kZUlkPUdERlUzSlM1QUw2U1lIUkQmcmVmXz1mb290ZXJfY292aWRcIiBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIGFuZCBDT1ZJRC0xOTwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC9jc3MvaG9tZXBhZ2UuaHRtbD9yZWZfPWZvb3Rlcl95YVwiIGNsYXNzPVwibmF2X2FcIj5Zb3VyIEFjY291bnQ8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpID5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vZ3AvY3NzL29yZGVyLWhpc3Rvcnk/cmVmXz1mb290ZXJfeW9cIiBjbGFzcz1cIm5hdl9hXCI+WW91ciBPcmRlcnM8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpID5cbiAgICAgICAgICAgICAgPGEgaHJlZj1cIi9ncC9oZWxwL2N1c3RvbWVyL2Rpc3BsYXkuaHRtbD9ub2RlSWQ9NDY4NTIwJnJlZl89Zm9vdGVyX3NoaXByYXRlc1wiIGNsYXNzPVwibmF2X2FcIj5TaGlwcGluZyBSYXRlcyAmIFBvbGljaWVzPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSA+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCIvZ3AvY3NzL3JldHVybnMvaG9tZXBhZ2UuaHRtbD9yZWZfPWZvb3Rlcl9oeV9mXzRcIiBjbGFzcz1cIm5hdl9hXCI+UmV0dXJucyAmIFJlcGxhY2VtZW50czwvYT5cbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGkgPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2dwL2RpZ2l0YWwvZmlvbmEvbWFuYWdlP3JlZl89Zm9vdGVyX215a1wiIGNsYXNzPVwibmF2X2FcIj5NYW5hZ2UgWW91ciBDb250ZW50IGFuZCBEZXZpY2VzPC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSA+XG4gICAgICAgICAgICAgIDxhIGhyZWY9XCIvZ3AvQklUL3JlZj1mb290ZXJfYml0X3YyX3VzX0EwMDI5P2JpdENhbXBhaWduQ29kZT1BMDAyOVwiIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQXNzaXN0YW50PC9hPlxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaSBjbGFzcz1cIm5hdl9sYXN0IFwiPlxuICAgICAgICAgICAgICA8YSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sP25vZGVJZD01MDg1MTAmcmVmXz1mb290ZXJfZ3dfbV9iX2hlXCIgY2xhc3M9XCJuYXZfYVwiPkhlbHA8L2E+XG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICA8L3VsPlxuICAgICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG48ZGl2IGNsYXNzPVwibmF2LWZvb3Rlci1saW5lXCI+PC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cIm5hdkZvb3RlckxpbmUgbmF2Rm9vdGVyTGlua0xpbmUgbmF2Rm9vdGVyUGFkSXRlbUxpbmVcIj5cbiAgICA8c3Bhbj5cbiAgICAgIDxkaXYgY2xhc3M9XCJuYXZGb290ZXJMaW5lIG5hdkZvb3RlckxvZ29MaW5lXCI+XG4gICAgICAgIDxhICBocmVmPVwiLz9yZWZfPWZvb3Rlcl9sb2dvXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJuYXYtbG9nby1iYXNlIG5hdi1zcHJpdGVcIj48L2Rpdj5cbiAgICAgICAgPC9hPlxuICAgICAgPC9kaXY+XG48L3NwYW4+XG4gICAgXG4gICAgICA8c3BhbiBjbGFzcz1cImljcC1jb250YWluZXItZGVza3RvcFwiPjxkaXZcbiAgICAgICAgICBjbGFzcz1cIm5hdkZvb3RlckxpbmVcIj5cbjxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5cbiAgI2ljcC10b3VjaC1saW5rLWxhbmd1YWdlIHsgZGlzcGxheTogbm9uZTsgfVxuPC9zdHlsZT5cblxuXG48YSBocmVmPVwiL2dwL2N1c3RvbWVyLXByZWZlcmVuY2VzL3NlbGVjdC1sYW5ndWFnZS9yZWY9Zm9vdGVyX2xhbmc/aWU9VVRGOCZwcmVmZXJlbmNlc1JldHVyblVybD0lMkZcIiBjbGFzcz1cImljcC1idXR0b25cIiBpZD1cImljcC10b3VjaC1saW5rLWxhbmd1YWdlXCI+XG4gIDxkaXYgY2xhc3M9XCJpY3AtbmF2LWdsb2JlLWltZy0yIGljcC1idXR0b24tZ2xvYmUtMlwiPjwvZGl2PjxzcGFuIGNsYXNzPVwiaWNwLWNvbG9yLWJhc2VcIj5FbmdsaXNoPC9zcGFuPjxzcGFuIGNsYXNzPVwibmF2LWFycm93IGljcC11cC1kb3duLWFycm93XCI+PC9zcGFuPjxzcGFuIGNsYXNzPVwiYW9rLWhpZGRlblwiIHN0eWxlPVwiZGlzcGxheTpub25lXCI+Q2hvb3NlIGEgbGFuZ3VhZ2UgZm9yIHNob3BwaW5nLjwvc3Bhbj5cbjwvYT5cblxuXG5cbjxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5cbiAgI2ljcC10b3VjaC1saW5rLWNvcCB7IGRpc3BsYXk6IG5vbmU7IH1cbjwvc3R5bGU+XG5cbjxhIGhyZWY9XCIvZ3AvY3VzdG9tZXItcHJlZmVyZW5jZXMvc2VsZWN0LWN1cnJlbmN5P2llPVVURjgmcmVmXz1mb290ZXJfY29wJnByZWZlcmVuY2VzUmV0dXJuVXJsPSUyRnNcIiBjbGFzcz1cImljcC1idXR0b25cIiBpZD1cImljcC10b3VjaC1saW5rLWNvcFwiPlxuICA8c3BhbiBjbGFzcz1cImljcC1jdXJyZW5jeS1zeW1ib2xcIj4kPC9zcGFuPjxzcGFuIGNsYXNzPVwiaWNwLWNvbG9yLWJhc2VcIj5VU0QgLSBVLlMuIERvbGxhcjwvc3Bhbj5cbjwvYT5cblxuPHN0eWxlIHR5cGU9XCJ0ZXh0L2Nzc1wiPlxuI2ljcC10b3VjaC1saW5rLWNvdW50cnkgeyBkaXNwbGF5OiBub25lOyB9XG48L3N0eWxlPlxuPGEgaHJlZj1cIi9ncC9uYXZpZ2F0aW9uLWNvdW50cnkvc2VsZWN0LWNvdW50cnkvcmVmPWZvb3Rlcl9pY3BfY3A/aWU9VVRGOCZwcmVmZXJlbmNlc1JldHVyblVybD0lMkZcIiBjbGFzcz1cImljcC1idXR0b25cIiBpZD1cImljcC10b3VjaC1saW5rLWNvdW50cnlcIj5cbiAgPHNwYW4gY2xhc3M9XCJpY3AtZmxhZy0zIGljcC1mbGFnLTMtdXNcIj48L3NwYW4+PHNwYW4gY2xhc3M9XCJpY3AtY29sb3ItYmFzZVwiPlVuaXRlZCBTdGF0ZXM8L3NwYW4+PHNwYW4gY2xhc3M9XCJhb2staGlkZGVuXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmVcIj5DaG9vc2UgYSBjb3VudHJ5L3JlZ2lvbiBmb3Igc2hvcHBpbmcuPC9zcGFuPlxuPC9hPlxuPC9kaXY+PC9zcGFuPlxuICAgIFxuICA8L2Rpdj5cbiAgXG4gIFxuICA8ZGl2IGNsYXNzPVwibmF2Rm9vdGVyTGluZSBuYXZGb290ZXJMaW5rTGluZSBuYXZGb290ZXJEZXNjTGluZVwiIHJvbGU9XCJuYXZpZ2F0aW9uXCIgYXJpYS1sYWJsZT1cIk1vcmUgb24gQW1hem9uLmNvbVwiPlxuICAgIDx0YWJsZSBjbGFzcz1cIm5hdkZvb3Rlck1vcmVPbkFtYXpvblwiIGNlbGxzcGFjaW5nPVwiMFwiPlxuICAgICAgPHRyPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vbXVzaWMuYW1hem9uLmNvbT9yZWY9ZG1fYWZmX2Ftel9jb20gY2xhc3M9XCJuYXZfYVwiPkFtYXpvbiBNdXNpYzxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U3RyZWFtIG1pbGxpb25zPGJyPm9mIHNvbmdzPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly9hZHZlcnRpc2luZy5hbWF6b24uY29tLz9yZWY9Zm9vdGVyX2FkdnRzaW5nX2Ftem5fY29tIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gQWR2ZXJ0aXNpbmc8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkZpbmQsIGF0dHJhY3QsIGFuZDxicj5lbmdhZ2UgY3VzdG9tZXJzPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9L2dwL2Jyb3dzZS5odG1sP25vZGU9MTU1NDcxMzAwMTEmcmVmXz1fdXNfZm9vdGVyX2RyaXZlIGNsYXNzPVwibmF2X2FcIj5BbWF6b24gRHJpdmU8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkNsb3VkIHN0b3JhZ2U8YnI+ZnJvbSBBbWF6b248L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3d3dy42cG0uY29tIGNsYXNzPVwibmF2X2FcIj42cG08YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlNjb3JlIGRlYWxzPGJyPm9uIGZhc2hpb24gYnJhbmRzPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly93d3cuYWJlYm9va3MuY29tIGNsYXNzPVwibmF2X2FcIj5BYmVCb29rczxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+Qm9va3MsIGFydDxicj4mIGNvbGxlY3RpYmxlczwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vd3d3LmFjeC5jb20vIGNsYXNzPVwibmF2X2FcIj5BQ1ggPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5BdWRpb2Jvb2sgUHVibGlzaGluZzxicj5NYWRlIEVhc3k8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3d3dy5hbGV4YS5jb20gY2xhc3M9XCJuYXZfYVwiPkFsZXhhPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5BY3Rpb25hYmxlIEFuYWx5dGljczxicj5mb3IgdGhlIFdlYjwvc3Bhbj48L2E+PC90ZD48L3RyPlxuPHRyPjx0ZD4mbmJzcDs8L3RkPjwvdHI+XG48dHI+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly9zZWxsLmFtYXpvbi5jb20vP2xkPUFaVVNTT0EtZm9vdGVyLWFmZiZyZWZfPWZvb3Rlcl9zZWxsIGNsYXNzPVwibmF2X2FcIj5TZWxsIG9uIEFtYXpvbjxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U3RhcnQgYSBTZWxsaW5nIEFjY291bnQ8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj0vYnVzaW5lc3M/cmVmXz1mb290ZXJfcmV0YWlsX2IyYiBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIEJ1c2luZXNzPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5FdmVyeXRoaW5nIEZvcjxicj5Zb3VyIEJ1c2luZXNzPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9L2dwL2Jyb3dzZS5odG1sP25vZGU9MjMwNjU5MDExJnJlZl89Zm9vdGVyX2FtYXpvbmdsb2JhbCBjbGFzcz1cIm5hdl9hXCI+QW1hem9uR2xvYmFsPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5TaGlwIE9yZGVyczxicj5JbnRlcm5hdGlvbmFsbHk8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj0vc2VydmljZXM/cmVmXz1mb290ZXJfc2VydmljZXMgY2xhc3M9XCJuYXZfYVwiPkhvbWUgU2VydmljZXM8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkV4cGVyaWVuY2VkIFByb3M8YnI+SGFwcGluZXNzIEd1YXJhbnRlZTwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vaWduaXRlLmFtYXpvbi5jb20vP3JlZj1hbWF6b25fZm9vdGVyX2lnbml0ZSBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIElnbml0ZTxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U2VsbCB5b3VyIG9yaWdpbmFsPGJyPkRpZ2l0YWwgRWR1Y2F0aW9uYWw8YnI+UmVzb3VyY2VzPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly9hd3MuYW1hem9uLmNvbS93aGF0LWlzLWNsb3VkLWNvbXB1dGluZy8/c2NfY2hhbm5lbD1FTCZzY19jYW1wYWlnbj1hbWF6b25mb290ZXIgY2xhc3M9XCJuYXZfYVwiPkFtYXpvbiBXZWIgU2VydmljZXM8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlNjYWxhYmxlIENsb3VkPGJyPkNvbXB1dGluZyBTZXJ2aWNlczwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vd3d3LmF1ZGlibGUuY29tIGNsYXNzPVwibmF2X2FcIj5BdWRpYmxlPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5MaXN0ZW4gdG8gQm9va3MgJiBPcmlnaW5hbDxicj5BdWRpbyBQZXJmb3JtYW5jZXM8L3NwYW4+PC9hPjwvdGQ+PC90cj5cbjx0cj48dGQ+Jm5ic3A7PC90ZD48L3RyPlxuPHRyPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vd3d3LmJvb2tkZXBvc2l0b3J5LmNvbSBjbGFzcz1cIm5hdl9hXCI+Qm9vayBEZXBvc2l0b3J5PGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5Cb29rcyBXaXRoIEZyZWU8YnI+RGVsaXZlcnkgV29ybGR3aWRlPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly93d3cuYm94b2ZmaWNlbW9qby5jb20vP3JlZl89YW16bl9uYXZfZnRyIGNsYXNzPVwibmF2X2FcIj5Cb3ggT2ZmaWNlIE1vam88YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkZpbmQgTW92aWU8YnI+Qm94IE9mZmljZSBEYXRhPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly93d3cuY29taXhvbG9neS5jb20gY2xhc3M9XCJuYXZfYVwiPkNvbWlYb2xvZ3k8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlRob3VzYW5kcyBvZjxicj5EaWdpdGFsIENvbWljczwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vd3d3LmRwcmV2aWV3LmNvbSBjbGFzcz1cIm5hdl9hXCI+RFBSZXZpZXc8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkRpZ2l0YWw8YnI+UGhvdG9ncmFwaHk8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3d3dy5lYXN0ZGFuZS5jb20vd2VsY29tZSBjbGFzcz1cIm5hdl9hXCI+RWFzdCBEYW5lPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5EZXNpZ25lciBNZW4nczxicj5GYXNoaW9uPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly93d3cuZmFicmljLmNvbSBjbGFzcz1cIm5hdl9hXCI+RmFicmljPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5TZXdpbmcsIFF1aWx0aW5nPGJyPiYgS25pdHRpbmc8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3d3dy5nb29kcmVhZHMuY29tIGNsYXNzPVwibmF2X2FcIj5Hb29kcmVhZHM8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkJvb2sgcmV2aWV3czxicj4mIHJlY29tbWVuZGF0aW9uczwvc3Bhbj48L2E+PC90ZD48L3RyPlxuPHRyPjx0ZD4mbmJzcDs8L3RkPjwvdHI+XG48dHI+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly93d3cuaW1kYi5jb20gY2xhc3M9XCJuYXZfYVwiPklNRGI8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPk1vdmllcywgVFY8YnI+JiBDZWxlYnJpdGllczwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vcHJvLmltZGIuY29tP3JlZl89YW16bl9uYXZfZnRyIGNsYXNzPVwibmF2X2FcIj5JTURiUHJvPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5HZXQgSW5mbyBFbnRlcnRhaW5tZW50PGJyPlByb2Zlc3Npb25hbHMgTmVlZDwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8va2RwLmFtYXpvbi5jb20gY2xhc3M9XCJuYXZfYVwiPktpbmRsZSBEaXJlY3QgUHVibGlzaGluZzxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+SW5kaWUgRGlnaXRhbCAmIFByaW50IFB1Ymxpc2hpbmc8YnI+TWFkZSBFYXN5XG48L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3ZpZGVvZGlyZWN0LmFtYXpvbi5jb20vaG9tZS9sYW5kaW5nIGNsYXNzPVwibmF2X2FcIj5QcmltZSBWaWRlbyBEaXJlY3Q8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlZpZGVvIERpc3RyaWJ1dGlvbjxicj5NYWRlIEVhc3k8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3d3dy5zaG9wYm9wLmNvbS93ZWxjb21lIGNsYXNzPVwibmF2X2FcIj5TaG9wYm9wPGJyPjxzcGFuIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1RleHRcIj5EZXNpZ25lcjxicj5GYXNoaW9uIEJyYW5kczwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vd3d3Lndvb3QuY29tLyBjbGFzcz1cIm5hdl9hXCI+V29vdCE8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPkRlYWxzIGFuZCA8YnI+U2hlbmFuaWdhbnM8L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL3d3dy56YXBwb3MuY29tIGNsYXNzPVwibmF2X2FcIj5aYXBwb3M8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlNob2VzICY8YnI+Q2xvdGhpbmc8L3NwYW4+PC9hPjwvdGQ+PC90cj5cbjx0cj48dGQ+Jm5ic3A7PC90ZD48L3RyPlxuPHRyPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vcmluZy5jb20gY2xhc3M9XCJuYXZfYVwiPlJpbmc8YnI+PHNwYW4gY2xhc3M9XCJuYXZGb290ZXJEZXNjVGV4dFwiPlNtYXJ0IEhvbWU8YnI+U2VjdXJpdHkgU3lzdGVtc1xuPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly9lZXJvLmNvbS8gY2xhc3M9XCJuYXZfYVwiPmVlcm8gV2lGaTxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U3RyZWFtIDRLIFZpZGVvPGJyPmluIEV2ZXJ5IFJvb208L3NwYW4+PC9hPjwvdGQ+PHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY1NwYWNlclwiIHN0eWxlPVwid2lkdGg6IDQlXCI+PC90ZD5cbjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NJdGVtXCI+PGEgaHJlZj1odHRwczovL2JsaW5rZm9yaG9tZS5jb20vP3JlZj1uYXZfZm9vdGVyIGNsYXNzPVwibmF2X2FcIj5CbGluazxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+U21hcnQgU2VjdXJpdHk8YnI+Zm9yIEV2ZXJ5IEhvbWVcbjwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPWh0dHBzOi8vc2hvcC5yaW5nLmNvbS9wYWdlcy9uZWlnaGJvcnMtYXBwIGNsYXNzPVwibmF2X2FcIj5OZWlnaGJvcnMgQXBwIDxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+IFJlYWwtVGltZSBDcmltZTxicj4mIFNhZmV0eSBBbGVydHNcbjwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj48YSBocmVmPS9ncC9icm93c2UuaHRtbD9ub2RlPTE0NDk4NjkwMDExJnJlZl89YW16bl9uYXZfZnRyX3N3YSBjbGFzcz1cIm5hdl9hXCI+QW1hem9uIFN1YnNjcmlwdGlvbiBCb3hlczxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+VG9wIHN1YnNjcmlwdGlvbiBib3hlcyDigJMgcmlnaHQgdG8geW91ciBkb29yPC9zcGFuPjwvYT48L3RkPjx0ZCBjbGFzcz1cIm5hdkZvb3RlckRlc2NTcGFjZXJcIiBzdHlsZT1cIndpZHRoOiA0JVwiPjwvdGQ+XG48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjSXRlbVwiPjxhIGhyZWY9aHR0cHM6Ly93d3cucGlsbHBhY2suY29tIGNsYXNzPVwibmF2X2FcIj5QaWxsUGFjazxicj48c3BhbiBjbGFzcz1cIm5hdkZvb3RlckRlc2NUZXh0XCI+UGhhcm1hY3kgU2ltcGxpZmllZDwvc3Bhbj48L2E+PC90ZD48dGQgY2xhc3M9XCJuYXZGb290ZXJEZXNjU3BhY2VyXCIgc3R5bGU9XCJ3aWR0aDogNCVcIj48L3RkPlxuPHRkIGNsYXNzPVwibmF2Rm9vdGVyRGVzY0l0ZW1cIj4mbmJzcDs8L3RkPlxuPC90cj5cblxuICAgIDwvdGFibGU+XG4gIDwvZGl2PlxuXG4gIFxuPGRpdiBjbGFzcz1cIm5hdkZvb3RlckxpbmUgbmF2Rm9vdGVyTGlua0xpbmUgbmF2Rm9vdGVyUGFkSXRlbUxpbmUgbmF2Rm9vdGVyQ29weXJpZ2h0XCI+XG4gIDx1bD48bGkgY2xhc3M9XCJuYXZfZmlyc3RcIj48YSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sP25vZGVJZD01MDgwODgmcmVmXz1mb290ZXJfY291XCIgY2xhc3M9XCJuYXZfYVwiPkNvbmRpdGlvbnMgb2YgVXNlPC9hPjwvbGk+PGxpID48YSBocmVmPVwiL2dwL2hlbHAvY3VzdG9tZXIvZGlzcGxheS5odG1sP25vZGVJZD00Njg0OTYmcmVmXz1mb290ZXJfcHJpdmFjeVwiIGNsYXNzPVwibmF2X2FcIj5Qcml2YWN5IE5vdGljZTwvYT48L2xpPjxsaSBjbGFzcz1cIm5hdl9sYXN0XCI+PGEgaHJlZj1cIi9pbnRlcmVzdGJhc2VkYWRzL3JlZj1mb290ZXJfaWJhXCIgY2xhc3M9XCJuYXZfYVwiPkludGVyZXN0LUJhc2VkIEFkczwvYT48L2xpPjwvdWw+PHNwYW4+wqkgMTk5Ni0yMDIyLCBBbWF6b24uY29tLCBJbmMuIG9yIGl0cyBhZmZpbGlhdGVzPC9zcGFuPlxuPC9kaXY+XG5cbiAgXG48L2Rpdj5cblxuPGRpdiBpZD1cInNpc19waXhlbF9yMlwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHN0eWxlPVwiaGVpZ2h0OjFweDsgcG9zaXRpb246IGFic29sdXRlOyBsZWZ0OiAtMTAwMDAwMHB4OyB0b3A6IC0xMDAwMDAwcHg7XCI+PC9kaXY+PHNjcmlwdD4oZnVuY3Rpb24oYSxiKXthLmF0dGFjaEV2ZW50P2EuYXR0YWNoRXZlbnQoXCJvbmxvYWRcIixiKTphLmFkZEV2ZW50TGlzdGVuZXImJmEuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixiLCExKX0pKHdpbmRvdyxmdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgZWw9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaXNfcGl4ZWxfcjJcIik7ZWwmJihlbC5pbm5lckhUTUw9JzxpZnJhbWUgaWQ9XCJEQXNpc1wiIHNyYz1cIi8vcy5hbWF6b24tYWRzeXN0ZW0uY29tL2l1Mz9kPWFtYXpvbi5jb20mc2xvdD1uYXZGb290ZXImYTI9MDEwMTAzZDFiMDA2OTE4MWY1YWJlZDk4NzkxNDQ5YzJkOWQ2OGYzZDJiOTI3N2UzYWZlYWY3NTM1NzBhYmJmZDY4NDYmb2xkX29vPTAmdHM9MTY0MTc1OTQ0OTA0OSZzPUFlNmpmVWpreW84cENkWjliRTMwLUdCdUlzU24tVmpmOW5qeFR1cU03cGFTJmdkcHJfY29uc2VudD0mZ2Rwcl9jb25zZW50X2F2bD0mY2I9MTY0MTc1OTQ0OTA0OVwiIHdpZHRoPVwiMVwiIGhlaWdodD1cIjFcIiBmcmFtZWJvcmRlcj1cIjBcIiBtYXJnaW53aWR0aD1cIjBcIiBtYXJnaW5oZWlnaHQ9XCIwXCIgc2Nyb2xsaW5nPVwibm9cIj48L2lmcmFtZT4nKX0sMzAwKX0pOzwvc2NyaXB0PlxuXG4gIDwhLS0gTkFWWUFBTiBGT09URVIgRU5EIC0tPlxuXG48IS0tIHNwOmVuZC1mZWF0dXJlOm5hdi1mb290ZXIgLS0+XG48IS0tIHNwOmZlYXR1cmU6YXNzb2NpYXRlLXRyYWNrZXItcGl4ZWwgLS0+XG48aW1nIHNyYz1cImh0dHBzOi8vYXNzb2MtbmEuYXNzb2NpYXRlcy1hbWF6b24uY29tL2FiaWQvdW0/cz0xNDctODY5MzY2Ny01OTAxMDMxJm09QVRWUERLSUtYMERFUlwiIHN0eWxlPVwiZGlzcGxheTpub25lXCIgYWx0PVwiXCIvPjwhLS0gc3A6ZW5kLWZlYXR1cmU6YXNzb2NpYXRlLXRyYWNrZXItcGl4ZWwgLS0+XG48IS0tIHNwOmZlYXR1cmU6Y29uZmlndXJlZC1zaXRld2lkZS1hc3NldHMgLS0+XG48IS0tIHNwOmVuZC1mZWF0dXJlOmNvbmZpZ3VyZWQtc2l0ZXdpZGUtYXNzZXRzIC0tPlxuPCEtLSBzcDpmZWF0dXJlOmN1c3RvbWVyLWJlaGF2aW9yLWpzIC0tPlxuPHNjcmlwdCB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCI+aWYgKHdpbmRvdy51ZSAmJiB1ZS50YWcpIHsgdWUudGFnKCdGV0NJTUVuYWJsZWQnKTsgfTwvc2NyaXB0PlxuPHNjcmlwdD5cbih3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLndoZW4oJ2FmdGVyTG9hZCcpLmV4ZWN1dGUoZnVuY3Rpb24oKSB7XG4gICh3aW5kb3cuQW1hem9uVUlQYWdlSlMgPyBBbWF6b25VSVBhZ2VKUyA6IFApLmxvYWQuanMoJ2h0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS83MVVab29ZZ3pITC5qcz9BVUlDbGllbnRzL0ZXQ0lNQXNzZXRzJyk7XG59KTtcbjwvc2NyaXB0PlxuPCEtLSBzcDplbmQtZmVhdHVyZTpjdXN0b21lci1iZWhhdmlvci1qcyAtLT5cbjxkaXYgaWQ9J2JlJyBzdHlsZT1cImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbjtcIj48Zm9ybSBuYW1lPSd1ZV9iYWNrZGV0ZWN0JyBhY3Rpb249XCJnZXRcIj48aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9J3VlX2JhY2snIHZhbHVlPScxJyAvPjwvZm9ybT5cblxuXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cbndpbmRvdy51ZV9pYmUgPSAod2luZG93LnVlX2liZSB8fCAwKSArIDE7XG5pZiAod2luZG93LnVlX2liZSA9PT0gMSkge1xuKGZ1bmN0aW9uKGUsYyl7ZnVuY3Rpb24gaChiLGEpe2YucHVzaChbYixhXSl9ZnVuY3Rpb24gZyhiLGEpe2lmKGIpe3ZhciBjPWUuaGVhZHx8ZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF18fGUuZG9jdW1lbnRFbGVtZW50LGQ9ZS5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO2QuYXN5bmM9XCJhc3luY1wiO2Quc3JjPWI7ZC5zZXRBdHRyaWJ1dGUoXCJjcm9zc29yaWdpblwiLFwiYW5vbnltb3VzXCIpO2EmJmEub25lcnJvciYmKGQub25lcnJvcj1hLm9uZXJyb3IpO2EmJmEub25sb2FkJiYoZC5vbmxvYWQ9YS5vbmxvYWQpO2MuaW5zZXJ0QmVmb3JlKGQsYy5maXJzdENoaWxkKX19ZnVuY3Rpb24gaygpe3VlLnVlbHM9Zztmb3IodmFyIGI9MDtiPGYubGVuZ3RoO2IrKyl7dmFyIGE9ZltiXTtnKGFbMF0sYVsxXSl9dWUuZGVmZmVyZWQ9MX12YXIgZj1bXTtjLnVlJiYodWUudWVscz1oLGMudWUuYXR0YWNoJiZjLnVlLmF0dGFjaChcImxvYWRcIixrKSl9KShkb2N1bWVudCx3aW5kb3cpO1xuXG5cbmlmICh3aW5kb3cudWUgJiYgd2luZG93LnVlLnVlbHMpIHtcbiAgICAgICAgdmFyIGNlbF93aWRnZXRzID0gWyB7IFwiY1wiOlwiY2Vsd2lkZ2V0XCIgfSx7IFwic1wiOlwiI25hdi1zd21zbG90ID4gZGl2XCIsIFwiaWRfZ2VuXCI6ZnVuY3Rpb24oZWxlbSwgaW5kZXgpeyByZXR1cm4gJ25hdl9zaXRld2lkZV9tc2cnOyB9IH0seyBcImNcIjpcInMtcmVzdWx0LWl0ZW1cIiwgXCJpZF9nZW5cIjpmdW5jdGlvbihlbGVtLCBpbmRleCl7IHJldHVybiAnc2VhcmNoX3Jlc3VsdF8nICsgaW5kZXggOyB9IH0seyBcImlkXCI6XCJsZWZ0TmF2Q29udGFpbmVyXCIgfSx7IFwiaWRcIjpcIm5hdi11cG5hdlwiIH0seyBcImlkXCI6XCJuYXZiYXJcIiB9LHsgXCJpZFwiOlwiaG93cy1teS1zZWFyY2hcIiB9LHsgXCJpZFwiOlwicmhmXCIgfSx7IFwiaWRcIjpcIm5hdkZvb3RlclwiIH0seyBcInNcIjpcIi5ydXNoLWNvbXBvbmVudCA+IC5hLXNlY3Rpb24ucy1ib3JkZXItYm90dG9tID4gLnMtd2lkZ2V0LWJhY2tncm91bmRcIiwgXCJpZF9nZW5cIjpmdW5jdGlvbihlbGVtLCBpbmRleCl7IHJldHVybiAnb3NhX3NlYXJjaF9zaWducG9zdCc7IH0gfSBdO1xuXG4gICAgICAgICAgICAgICAgdWUudWVscyhcImh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvSS8zMVlYclk5M2hmTC5qc1wiKTtcbn1cbnZhciB1ZV9tYmw9dWVfY3NtLnVlLmV4ZWMoZnVuY3Rpb24oZyxhKXtmdW5jdGlvbiBwKGMpe2I9Y3x8e307YS5BTVpOUGVyZm9ybWFuY2U9YjtiLnRyYW5zaXRpb249Yi50cmFuc2l0aW9ufHx7fTtiLnRpbWluZz1iLnRpbWluZ3x8e307aWYoYS5jc2Epe3ZhciBlO2IudGltaW5nLnRyYW5zaXRpb25TdGFydCYmKGU9Yi50aW1pbmcudHJhbnNpdGlvblN0YXJ0KTtiLnRpbWluZy5wcm9jZXNzU3RhcnQmJihlPWIudGltaW5nLnByb2Nlc3NTdGFydCk7ZSYmKGNzYShcIlBhZ2VUaW1pbmdcIikoXCJtYXJrXCIsXCJuYXRpdmVUcmFuc2l0aW9uU3RhcnRcIixlKSxjc2EoXCJQYWdlVGltaW5nXCIpKFwibWFya1wiLFwidHJhbnNpdGlvblN0YXJ0XCIsZSkpfWcudWUuZXhlYyhxLFwiY3NtLWFuZHJvaWQtY2hlY2tcIikoKSYmYi50YWdzIGluc3RhbmNlb2YgQXJyYXkmJihjPS0xIT1iLnRhZ3MuaW5kZXhPZihcInVzZXNBcHBTdGFydFRpbWVcIil8fGIudHJhbnNpdGlvbi50eXBlPyFiLnRyYW5zaXRpb24udHlwZSYmLTE8XG5iLnRhZ3MuaW5kZXhPZihcInVzZXNBcHBTdGFydFRpbWVcIik/XCJ3YXJtLXN0YXJ0XCI6dm9pZCAwOlwidmlldy10cmFuc2l0aW9uXCIsYyYmKGIudHJhbnNpdGlvbi50eXBlPWMpKTtpZihcInJlbG9hZFwiPT09ZC5fbnQmJmcudWVfb3JjdHx8XCJpbnRyYXBhZ2UtdHJhbnNpdGlvblwiPT09ZC5fbnQpYTp7aWYoayYmKGM9ZC5zc3cobCksZT1iLnRpbWluZy50cmFuc2l0aW9uU3RhcnQsYyYmIWMuZSYmZSYmYy52YWwmJmUhPT0rYy52YWwpKWJyZWFrIGE7ZiYmZi50aW1pbmcmJmYudGltaW5nLm5hdmlnYXRpb25TdGFydD9iLnRpbWluZy50cmFuc2l0aW9uU3RhcnQ9Zi50aW1pbmcubmF2aWdhdGlvblN0YXJ0OmRlbGV0ZSBiLnRpbWluZy50cmFuc2l0aW9uU3RhcnR9ZWxzZVwidW5kZWZpbmVkXCI9PT10eXBlb2YgZC5fbnQmJmYmJmYudGltaW5nJiZmLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnQmJmEuaGlzdG9yeSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuSGlzdG9yeSYmXCJvYmplY3RcIj09PXR5cGVvZiBhLmhpc3RvcnkmJlxuYS5oaXN0b3J5Lmxlbmd0aCYmMSE9YS5oaXN0b3J5Lmxlbmd0aCYmKGIudGltaW5nLnRyYW5zaXRpb25TdGFydD1mLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnQpO2smJmQuc3N3KGwsXCJcIisoYi50aW1pbmcudHJhbnNpdGlvblN0YXJ0fHxcIlwiKSk7Yz1iLnRyYW5zaXRpb247ZT1kLl9udD9kLl9udDp2b2lkIDA7Yy5zdWJUeXBlPWU7YS51ZSYmYS51ZS50YWcmJmEudWUudGFnKFwiaGFzLUFNWk5QZXJmb3JtYW5jZVwiKTtkLmlzbCYmYS51ZXgmJmEudWV4KFwiYXRcIixcImNzbS10aW1pbmdcIik7cigpfWZ1bmN0aW9uIHMoYil7YS51ZSYmYS51ZS5jb3VudCYmYS51ZS5jb3VudChcImNzbS1jb3Jkb3ZhLXBsdWdpbi1mYWlsZWRcIiwxKX1mdW5jdGlvbiBxKCl7cmV0dXJuIGEuY29yZG92YSYmYS5jb3Jkb3ZhLnBsYXRmb3JtSWQmJlwiYW5kcm9pZFwiPT1hLmNvcmRvdmEucGxhdGZvcm1JZH1mdW5jdGlvbiByKCl7dHJ5e2EuUC5yZWdpc3RlcihcIkFNWk5QZXJmb3JtYW5jZVwiLGZ1bmN0aW9uKCl7cmV0dXJuIGJ9KX1jYXRjaChjKXt9fVxuZnVuY3Rpb24gbSgpe2lmKCFiKXJldHVyblwiXCI7dWVfbWJsLmNudD1udWxsO2Zvcih2YXIgYz1iLnRpbWluZyxhPWIudHJhbnNpdGlvbixjPVtcIm10c1wiLG4oYy50cmFuc2l0aW9uU3RhcnQpLFwibXBzXCIsbihjLnByb2Nlc3NTdGFydCksXCJtdHRcIixhLnR5cGUsXCJtdHN0XCIsYS5zdWJUeXBlLFwibXRsdFwiLGEubGF1bmNoVHlwZV0sYT1cIlwiLGQ9MDtkPGMubGVuZ3RoO2QrPTIpe3ZhciBmPWNbZF0sZz1jW2QrMV07XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnJiYoYSs9XCImXCIrZitcIj1cIitnKX1yZXR1cm4gYX1mdW5jdGlvbiBuKGEpe2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgYSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBoKXJldHVybiBhLWh9ZnVuY3Rpb24gdChhLGQpe2ImJihoPWQsYi50aW1pbmcudHJhbnNpdGlvblN0YXJ0PWEsYi50cmFuc2l0aW9uLnR5cGU9XCJ2aWV3LXRyYW5zaXRpb25cIixiLnRyYW5zaXRpb24uc3ViVHlwZT1cImFqYXgtdHJhbnNpdGlvblwiLGIudHJhbnNpdGlvbi5sYXVuY2hUeXBlPVxuXCJub3JtYWxcIix1ZV9tYmwuY250PW0pfXZhciBkPWcudWV8fHt9LGg9Zy51ZV90MCxsPVwiY3NtLWxhc3QtbXRzXCIsaz0xPT09Zy51ZV9zc3dtdHMsZj1hLnBlcmZvcm1hbmNlLGI7aWYoYS5QJiZhLlAud2hlbiYmYS5QLnJlZ2lzdGVyKXJldHVybiAxPT09YS51ZV9mbnQmJihoPWEuYVBhZ2VTdGFydHx8Zy51ZV90MCksYS5QLndoZW4oXCJDU01QbHVnaW5cIikuZXhlY3V0ZShmdW5jdGlvbihhKXthLmJ1aWxkQU1aTlBlcmZvcm1hbmNlJiZhLmJ1aWxkQU1aTlBlcmZvcm1hbmNlKHtzdWNjZXNzQ2FsbGJhY2s6cCxmYWlsQ2FsbGJhY2s6c30pfSkse2NudDptLGFqYXg6dH19LFwibW9iaWxlLXRpbWluZ1wiKSh1ZV9jc20sdWVfY3NtLndpbmRvdyk7XG5cbihmdW5jdGlvbihkKXtkLl91ZXNzPWZ1bmN0aW9uKCl7dmFyIGE9XCJcIjtzY3JlZW4mJnNjcmVlbi53aWR0aCYmc2NyZWVuLmhlaWdodCYmKGErPVwiJnN3PVwiK3NjcmVlbi53aWR0aCtcIiZzaD1cIitzY3JlZW4uaGVpZ2h0KTt2YXIgYj1mdW5jdGlvbihhKXt2YXIgYj1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbXCJjbGllbnRcIithXTtyZXR1cm5cIkNTUzFDb21wYXRcIj09PWRvY3VtZW50LmNvbXBhdE1vZGUmJmJ8fGRvY3VtZW50LmJvZHlbXCJjbGllbnRcIithXXx8Yn0sYz1iKFwiV2lkdGhcIiksYj1iKFwiSGVpZ2h0XCIpO2MmJmImJihhKz1cIiZ2dz1cIitjK1wiJnZoPVwiK2IpO3JldHVybiBhfX0pKHVlX2NzbSk7XG5cbihmdW5jdGlvbihhKXt2YXIgYj1kb2N1bWVudC51ZV9iYWNrZGV0ZWN0O2ImJmIudWVfYmFjayYmYS51ZSYmKGEudWUuYmZpbmk9Yi51ZV9iYWNrLnZhbHVlKTthLnVldCYmYS51ZXQoXCJiZVwiKTthLm9uTGRFbmQmJih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcj93aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixhLm9uTGRFbmQsITEpOndpbmRvdy5hdHRhY2hFdmVudCYmd2luZG93LmF0dGFjaEV2ZW50KFwib25sb2FkXCIsYS5vbkxkRW5kKSk7YS51ZWgmJmEudWVoKDAsd2luZG93LFwibG9hZFwiLGEub25MZCwxKTthLnVlJiZhLnVlLnRhZyYmKGEudWVfZnVybD8oYj1hLnVlX2Z1cmwucmVwbGFjZSgvXFwuL2csXCItXCIpLGEudWUudGFnKGIpKTphLnVlLnRhZyhcIm5vZmxzXCIpKX0pKHVlX2NzbSk7XG5cbihmdW5jdGlvbihnLGgpe2Z1bmN0aW9uIGQoYSxkKXt2YXIgYj17fTtpZighZXx8IWYpdHJ5e3ZhciBjPWguc2Vzc2lvblN0b3JhZ2U7Yz9hJiYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkP2Muc2V0SXRlbShhLGQpOmIudmFsPWMuZ2V0SXRlbShhKSk6Zj0xfWNhdGNoKGcpe2U9MX1lJiYoYi5lPTEpO3JldHVybiBifXZhciBiPWcudWV8fHt9LGE9XCJcIixmLGUsYyxhPWQoXCJjc210aWRcIik7Zj9hPVwiTkFcIjphLmU/YT1cIkVUXCI6KGE9YS52YWwsYXx8KGE9Yi5vaWR8fFwiTklcIixkKFwiY3NtdGlkXCIsYSkpLGM9ZChiLm9pZCksYy5lfHwoYy52YWw9Yy52YWx8fDAsZChiLm9pZCxjLnZhbCsxKSksYi5zc3c9ZCk7Yi50YWJpZD1hfSkodWVfY3NtLHVlX2NzbS53aW5kb3cpO1xuXG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihlLGYpe3ZhciBhPWUudWV8fHt9LGI9YS5fd2xvLGQ7aWYoYS5zc3cpe2Q9YS5zc3coXCJDU01fcHJldmlvdXNVUkxcIikudmFsO3ZhciBjPWYubG9jYXRpb24sYj1iP2I6YyYmYy5ocmVmP2MuaHJlZi5zcGxpdChcIiNcIilbMF06dm9pZCAwO2M9KGJ8fFwiXCIpPT09YS5zc3coXCJDU01fcHJldmlvdXNVUkxcIikudmFsOyFjJiZiJiZhLnNzdyhcIkNTTV9wcmV2aW91c1VSTFwiLGIpO2Q9Yz9cInJlbG9hZFwiOmQ/XCJpbnRyYXBhZ2UtdHJhbnNpdGlvblwiOlwiZmlyc3Qtdmlld1wifWVsc2UgZD1cInVua25vd25cIjthLl9udD1kfSxcIk5hdlR5cGVNb2R1bGVcIikodWVfY3NtLHdpbmRvdyk7XG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbihjLGEpe2Z1bmN0aW9uIGcoYSl7YS5ydW4oZnVuY3Rpb24oZSl7ZC50YWcoXCJjc20tZmVhdHVyZS1cIithLm5hbWUrXCI6XCIrZSk7ZC5pc2wmJmMudWV4KFwiYXRcIil9KX1pZihhLmFkZEV2ZW50TGlzdGVuZXIpZm9yKHZhciBkPWMudWV8fHt9LGY9W3tuYW1lOlwidG91Y2gtZW5hYmxlZFwiLHJ1bjpmdW5jdGlvbihiKXt2YXIgZT1mdW5jdGlvbigpe2EucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixjLCEwKTthLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixkLCEwKX0sYz1mdW5jdGlvbigpe2IoXCJ0cnVlXCIpO2UoKX0sZD1mdW5jdGlvbigpe2IoXCJmYWxzZVwiKTtlKCl9O2EuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIixjLCEwKTthLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixkLCEwKX19XSxiPTA7YjxmLmxlbmd0aDtiKyspZyhmW2JdKX0sXCJjc20tZmVhdHVyZXNcIikodWVfY3NtLHdpbmRvdyk7XG5cblxuKGZ1bmN0aW9uKGIsYyl7dmFyIGE9Yy5pbWFnZXM7YSYmYS5sZW5ndGgmJmIudWUuY291bnQoXCJ0b3RhbEltYWdlc1wiLGEubGVuZ3RoKX0pKHVlX2NzbSxkb2N1bWVudCk7XG4oZnVuY3Rpb24oYil7ZnVuY3Rpb24gYygpe3ZhciBkPVtdO2EubG9nJiZhLmxvZy5pc1N0dWImJmEubG9nLnJlcGxheShmdW5jdGlvbihhKXtlKGQsYSl9KTthLmNsb2cmJmEuY2xvZy5pc1N0dWImJmEuY2xvZy5yZXBsYXkoZnVuY3Rpb24oYSl7ZShkLGEpfSk7ZC5sZW5ndGgmJihhLl9mbGhzKz0xLG4oZCkscChkKSl9ZnVuY3Rpb24gZygpe2EubG9nJiZhLmxvZy5pc1N0dWImJihhLm9uZmx1c2gmJmEub25mbHVzaC5yZXBsYXkmJmEub25mbHVzaC5yZXBsYXkoZnVuY3Rpb24oYSl7YVswXSgpfSksYS5vbnVubG9hZCYmYS5vbnVubG9hZC5yZXBsYXkmJmEub251bmxvYWQucmVwbGF5KGZ1bmN0aW9uKGEpe2FbMF0oKX0pLGMoKSl9ZnVuY3Rpb24gZShkLGIpe3ZhciBjPWJbMV0sZj1iWzBdLGU9e307YS5fbHBuW2NdPShhLl9scG5bY118fDApKzE7ZVtjXT1mO2QucHVzaChlKX1mdW5jdGlvbiBuKGIpe3EmJihhLl9scG4uY3NtPShhLl9scG4uY3NtfHwwKSsxLGIucHVzaCh7Y3NtOntrOlwiY2hrXCIsXG5mOmEuX2ZsaHMsbDphLl9scG4sczpcImlubG5cIn19KSl9ZnVuY3Rpb24gcChhKXtpZihoKWE9ayhhKSxiLm5hdmlnYXRvci5zZW5kQmVhY29uKGwsYSk7ZWxzZXthPWsoYSk7dmFyIGM9bmV3IGJbZl07Yy5vcGVuKFwiUE9TVFwiLGwsITApO2Muc2V0UmVxdWVzdEhlYWRlciYmYy5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC10eXBlXCIsXCJ0ZXh0L3BsYWluXCIpO2Muc2VuZChhKX19ZnVuY3Rpb24gayhhKXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoe3JpZDpiLnVlX2lkLHNpZDpiLnVlX3NpZCxtaWQ6Yi51ZV9taWQsbWt0OmIudWVfbWt0LHNuOmIudWVfc24scmVxczphfSl9dmFyIGY9XCJYTUxIdHRwUmVxdWVzdFwiLHE9MT09PWIudWVfZGRxLGE9Yi51ZSxyPWJbZl0mJlwid2l0aENyZWRlbnRpYWxzXCJpbiBuZXcgYltmXSxoPWIubmF2aWdhdG9yJiZiLm5hdmlnYXRvci5zZW5kQmVhY29uLGw9XCIvL1wiK2IudWVfZnVybCtcIi8xL2JhdGNoLzEvT0UvXCIsbT1iLnVlX2ZjaV9mdHx8NUUzO2EmJihyfHxoKSYmXG4oYS5fZmxocz1hLl9mbGhzfHwwLGEuX2xwbj1hLl9scG58fHt9LGEuYXR0YWNoJiYoYS5hdHRhY2goXCJiZWZvcmV1bmxvYWRcIixhLmV4ZWMoZyxcImZjbGktYmZ1XCIpKSxhLmF0dGFjaChcInBhZ2VoaWRlXCIsYS5leGVjKGcsXCJmY2xpLXBoXCIpKSksbSYmYi5zZXRUaW1lb3V0KGEuZXhlYyhjLFwiZmNsaS10XCIpLG0pLGEuX2ZmY2k9YS5leGVjKGMpKX0pKHdpbmRvdyk7XG5cblxuKGZ1bmN0aW9uKGssYyl7ZnVuY3Rpb24gbChhLGIpe3JldHVybiBhLmZpbHRlcihmdW5jdGlvbihhKXtyZXR1cm4gYS5pbml0aWF0b3JUeXBlPT1ifSl9ZnVuY3Rpb24gZihhLGMpe2lmKGIudFthXSl7dmFyIGc9Yi50W2FdLWIuX3QwLGU9Yy5maWx0ZXIoZnVuY3Rpb24oYSl7cmV0dXJuIDAhPT1hLnJlc3BvbnNlRW5kJiZtKGEpPGd9KSxmPWwoZSxcInNjcmlwdFwiKSxoPWwoZSxcImxpbmtcIiksaz1sKGUsXCJpbWdcIiksbj1lLm1hcChmdW5jdGlvbihhKXtyZXR1cm4gYS5uYW1lLnNwbGl0KFwiL1wiKVsyXX0pLmZpbHRlcihmdW5jdGlvbihhLGIsYyl7cmV0dXJuIGEmJmMubGFzdEluZGV4T2YoYSk9PWJ9KSxxPWUuZmlsdGVyKGZ1bmN0aW9uKGEpe3JldHVybiBhLmR1cmF0aW9uPHB9KSxzPWctTWF0aC5tYXguYXBwbHkobnVsbCxlLm1hcChtKSk8cnwwO1wiYWZcIj09YSYmKGIuX2FmanM9Zi5sZW5ndGgpO3JldHVybiBhK1wiOlwiK1tlW2RdLGZbZF0saFtkXSxrW2RdLG5bZF0scVtkXSxzXS5qb2luKFwiLVwiKX19XG5mdW5jdGlvbiBtKGEpe3JldHVybiBhLnJlc3BvbnNlRW5kLShiLl90MC1jLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnQpfWZ1bmN0aW9uIG4oKXt2YXIgYT1jW2hdKFwicmVzb3VyY2VcIiksZD1mKFwiY2ZcIixhKSxnPWYoXCJhZlwiLGEpLGE9ZihcImxkXCIsYSk7ZGVsZXRlIGIuX3J0O2IuX2xkPWIudC5sZC1iLl90MDtiLl9hcnQmJmIuX2FydCgpO3JldHVybltkLGcsYV0uam9pbihcIl9cIil9dmFyIHA9MjAscj01MCxkPVwibGVuZ3RoXCIsYj1rLnVlLGg9XCJnZXRFbnRyaWVzQnlUeXBlXCI7Yi5fcnJlPW07Yi5fcnQ9YyYmYy50aW1pbmcmJmNbaF0mJm59KSh1ZV9jc20sd2luZG93LnBlcmZvcm1hbmNlKTtcblxuXG4oZnVuY3Rpb24oYyxkKXt2YXIgYj1jLnVlLGE9ZC5uYXZpZ2F0b3I7YiYmYi50YWcmJmEmJihhPWEuY29ubmVjdGlvbnx8YS5tb3pDb25uZWN0aW9ufHxhLndlYmtpdENvbm5lY3Rpb24pJiZhLnR5cGUmJmIudGFnKFwibmV0SW5mbzpcIithLnR5cGUpfSkodWVfY3NtLHdpbmRvdyk7XG5cblxuKGZ1bmN0aW9uKGMsZCl7ZnVuY3Rpb24gaChhLGIpe2Zvcih2YXIgYz1bXSxkPTA7ZDxhLmxlbmd0aDtkKyspe3ZhciBlPWFbZF0sZj1iLmVuY29kZShlKTtpZihlW2tdKXt2YXIgZz1iLm1ldGFTZXAsZT1lW2tdLGw9Yi5tZXRhUGFpclNlcCxoPVtdLG09dm9pZCAwO2ZvcihtIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShtKSYmaC5wdXNoKG0rXCI9XCIrZVttXSk7ZT1oLmpvaW4obCk7Zis9ZytlfWMucHVzaChmKX1yZXR1cm4gYy5qb2luKGIucmVzb3VyY2VTZXApfWZ1bmN0aW9uIHMoYSl7dmFyIGI9YVtrXT1hW2tdfHx7fTtiW3RdfHwoYlt0XT1jLnVlX21pZCk7Ylt1XXx8KGJbdV09Yy51ZV9zaWQpO2JbZl18fChiW2ZdPWMudWVfaWQpO2IuY3NtPTE7YT1cIi8vXCIrYy51ZV9mdXJsK1wiLzEvXCIrYVt2XStcIi8xL09QL1wiK2Fbd10rXCIvXCIrYVt4XStcIi9cIitoKFthXSx5KTtpZihuKXRyeXtuLmNhbGwoZFtwXSxhKX1jYXRjaChnKXtjLnVlLnNiZj0xLChuZXcgSW1hZ2UpLnNyYz1hfWVsc2UobmV3IEltYWdlKS5zcmM9XG5hfWZ1bmN0aW9uIHEoKXtnJiZnLmlzU3R1YiYmZy5yZXBsYXkoZnVuY3Rpb24oYSxiLGMpe2E9YVswXTtiPWFba109YVtrXXx8e307YltmXT1iW2ZdfHxjO3MoYSl9KTtsLmltcHJlc3Npb249cztnPW51bGx9aWYoISgxPGMudWVpbml0KSl7dmFyIGs9XCJtZXRhZGF0YVwiLHg9XCJpbXByZXNzaW9uVHlwZVwiLHY9XCJmb3Jlc3RlckNoYW5uZWxcIix3PVwicHJvZ3JhbUdyb3VwXCIsdD1cIm1hcmtldHBsYWNlSWRcIix1PVwic2Vzc2lvblwiLGY9XCJyZXF1ZXN0SWRcIixwPVwibmF2aWdhdG9yXCIsbD1jLnVlfHx7fSxuPWRbcF0mJmRbcF0uc2VuZEJlYWNvbixyPWZ1bmN0aW9uKGEsYixjLGQpe3JldHVybntlbmNvZGU6ZCxyZXNvdXJjZVNlcDphLG1ldGFTZXA6YixtZXRhUGFpclNlcDpjfX0seT1yKFwiXCIsXCI/XCIsXCImXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGgoYS5pbXByZXNzaW9uRGF0YSx6KX0pLHo9cihcIi9cIixcIjpcIixcIixcIixmdW5jdGlvbihhKXtyZXR1cm4gYS5mZWF0dXJlTmFtZStcIjpcIitoKGEucmVzb3VyY2VzLFxuQSl9KSxBPXIoXCIsXCIsXCJAXCIsXCJ8XCIsZnVuY3Rpb24oYSl7cmV0dXJuIGEuaWR9KSxnPWwuaW1wcmVzc2lvbjtuP3EoKToobC5hdHRhY2goXCJsb2FkXCIscSksbC5hdHRhY2goXCJiZWZvcmV1bmxvYWRcIixxKSk7dHJ5e2QuUCYmZC5QLnJlZ2lzdGVyJiZkLlAucmVnaXN0ZXIoXCJpbXByZXNzaW9uLWNsaWVudFwiLGZ1bmN0aW9uKCl7fSl9Y2F0Y2goQil7Yy51ZUxvZ0Vycm9yKEIse2xvZ0xldmVsOlwiV0FSTlwifSl9fX0pKHVlX2NzbSx3aW5kb3cpO1xuXG5cblxudmFyIHVlX3B0eSA9IFwiU2VhcmNoXCI7XG5cbnZhciB1ZV9zcHR5ID0gXCJMaXN0XCI7XG5cblxuXG52YXIgdWVfYWRiID0gNDtcbnZhciB1ZV9hZGJfcnRsYSA9IDE7XG51ZV9jc20udWUuZXhlYyhmdW5jdGlvbih5LGEpe2Z1bmN0aW9uIHQoKXtpZihkJiZmKXt2YXIgYTthOnt0cnl7YT1kLmdldEl0ZW0oZyk7YnJlYWsgYX1jYXRjaChjKXt9YT12b2lkIDB9aWYoYSlyZXR1cm4gYj1hLCEwfXJldHVybiExfWZ1bmN0aW9uIHUoKXtpZihhLmZldGNoKWZldGNoKG0pLnRoZW4oZnVuY3Rpb24oYSl7aWYoIWEub2spdGhyb3cgRXJyb3IoYS5zdGF0dXNUZXh0KTtyZXR1cm4gYS50ZXh0P2EudGV4dCgpOm51bGx9KS50aGVuKGZ1bmN0aW9uKGIpe2I/KC0xPGIuaW5kZXhPZihcIndpbmRvdy51ZV9hZGJfY2hrID0gMVwiKSYmKGEudWVfYWRiX2Noaz0xKSxuKCkpOmgoKX0pW1wiY2F0Y2hcIl0oaCk7ZWxzZSBlLnVlbHMobSx7b25lcnJvcjpoLG9ubG9hZDpufSl9ZnVuY3Rpb24gaCgpe2I9aztsKCk7aWYoZil0cnl7ZC5zZXRJdGVtKGcsYil9Y2F0Y2goYSl7fX1mdW5jdGlvbiBuKCl7Yj0xPT09YS51ZV9hZGJfY2hrP3A6aztsKCk7aWYoZil0cnl7ZC5zZXRJdGVtKGcsXG5iKX1jYXRjaChjKXt9fWZ1bmN0aW9uIHEoKXthLnVlX2FkYl9ydGxhJiZjJiYwPGMuZWMmJiExPT09ciYmKGMuZWxoPW51bGwsdWVMb2dFcnJvcih7bTpcIkhpdCBJbmZvXCIsZnJvbU9uRXJyb3I6MX0se2xvZ0xldmVsOlwiSU5GT1wiLGFkYjpifSkscj0hMCl9ZnVuY3Rpb24gbCgpe2UudGFnKGIpO2UuaXNsJiZhLnVleCYmdWV4KFwiYXRcIixiKTtzJiZzLnVwZGF0ZUNzbUhpdChcImFkYlwiLGIpO2MmJjA8Yy5lYz9xKCk6YS51ZV9hZGJfcnRsYSYmYyYmKGMuZWxoPXEpfWZ1bmN0aW9uIHYoKXtyZXR1cm4gYn1pZihhLnVlX2FkYil7YS51ZV9mYWRiPWEudWVfZmFkYnx8MTA7dmFyIGU9YS51ZSxrPVwiYWRibGtfeWVzXCIscD1cImFkYmxrX25vXCIsbT1cImh0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2NzbS9zaG93YWRzLnYyLmpzP2FkdGFnPWNzbSZhZF9ib3hfXCIsYj1cImFkYmxrX3Vua1wiLGQ7YTp7dHJ5e2Q9YS5sb2NhbFN0b3JhZ2U7YnJlYWsgYX1jYXRjaCh6KXt9ZD12b2lkIDB9dmFyIGc9XG5cImNzbTphZGJcIixjPWEudWVfZXJyLHM9ZS5jb29raWUsZj12b2lkIDAhPT1hLmxvY2FsU3RvcmFnZSx3PU1hdGgucmFuZG9tKCk+MS0xL2EudWVfZmFkYixyPSExLHg9dCgpO3d8fCF4P3UoKTpsKCk7YS51ZV9pc0FkYj12O2EudWVfaXNBZGIudW5rPVwiYWRibGtfdW5rXCI7YS51ZV9pc0FkYi5ubz1wO2EudWVfaXNBZGIueWVzPWt9fSxcImFkYlwiKShkb2N1bWVudCx3aW5kb3cpO1xuXG5cbihmdW5jdGlvbihsLG0pe3ZhciBuPS9eKGh0dHBzPzopP1xcL1xcLy9pLGU9MCxmLGc9e307Zj1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2Zvcih2YXIgZD1tLnNjcmlwdHMsaD1bXSxhLGIsaz0hMSxjPTA7YzxkLmxlbmd0aDtjKyspYT1kW2NdLmdldEF0dHJpYnV0ZShcInNyY1wiKSxiPWRbY10uZ2V0QXR0cmlidXRlKFwiY3Jvc3NvcmlnaW5cIil8fFwiXCIsYSYmXCJ1bmRlZmluZWRcIiE9PWEmJm4udGVzdChhKSYmIWcuaGFzT3duUHJvcGVydHkoYSkmJlwiYW5vbnltb3VzXCIhPWImJlwidXNlLWNyZWRlbnRpYWxzXCIhPWImJihnW2FdPWIsaC5wdXNoKGEpLGs9ITApO2smJmwudWUubG9nKHtrOlwiY29yc3NjYW5uZXJcIix2YWx1ZTpofSxcImNzbVwiKTtlKys7NTw9ZSYmY2xlYXJJbnRlcnZhbChmKX0sMUUzKX0pKHVlX2NzbSxkb2N1bWVudCk7XG5cblxuXG4oZnVuY3Rpb24oYyxsLG0pe2Z1bmN0aW9uIGgoYSl7aWYoYSl0cnl7aWYoYS5pZClyZXR1cm5cIi8vKltAaWQ9J1wiK2EuaWQrXCInXVwiO3ZhciBiLGQ9MSxlO2ZvcihlPWEucHJldmlvdXNTaWJsaW5nO2U7ZT1lLnByZXZpb3VzU2libGluZyllLm5vZGVOYW1lPT09YS5ub2RlTmFtZSYmKGQrPTEpO2I9ZDt2YXIgYz1hLm5vZGVOYW1lOzEhPT1iJiYoYys9XCJbXCIrYitcIl1cIik7YS5wYXJlbnROb2RlJiYoYz1oKGEucGFyZW50Tm9kZSkrXCIvXCIrYyk7cmV0dXJuIGN9Y2F0Y2goZil7cmV0dXJuXCJERVRBQ0hFRFwifX1mdW5jdGlvbiBmKGEpe2lmKGEmJmEuZ2V0QXR0cmlidXRlKXJldHVybiBhLmdldEF0dHJpYnV0ZShrKT9hLmdldEF0dHJpYnV0ZShrKTpmKGEucGFyZW50RWxlbWVudCl9dmFyIGs9XCJkYXRhLWNlbC13aWRnZXRcIixnPSExLGQ9W107KGMudWV8fHt9KS5pc0JGPWZ1bmN0aW9uKCl7dHJ5e3ZhciBhPUpTT04ucGFyc2UobG9jYWxTdG9yYWdlW1wiY3NtLWJmXCJdfHxcIltdXCIpLGI9MDw9YS5pbmRleE9mKGMudWVfaWQpO1xuYS51bnNoaWZ0KGMudWVfaWQpO2E9YS5zbGljZSgwLDIwKTtsb2NhbFN0b3JhZ2VbXCJjc20tYmZcIl09SlNPTi5zdHJpbmdpZnkoYSk7cmV0dXJuIGJ9Y2F0Y2goZCl7cmV0dXJuITF9fSgpO2MudWVfdXRpbHM9e2dldFhQYXRoOmgsZ2V0Rmlyc3RBc2NlbmRpbmdXaWRnZXQ6ZnVuY3Rpb24oYSxiKXtjLnVlX2NlbCYmYy51ZV9mZW0/ITA9PT1nP2IoZihhKSk6ZC5wdXNoKHtlbGVtZW50OmEsY2FsbGJhY2s6Yn0pOmIoKX0sbm90aWZ5V2lkZ2V0c0xhYmVsZWQ6ZnVuY3Rpb24oKXtpZighMT09PWcpe2c9ITA7Zm9yKHZhciBhPWYsYj0wO2I8ZC5sZW5ndGg7YisrKWlmKGRbYl0uaGFzT3duUHJvcGVydHkoXCJjYWxsYmFja1wiKSYmZFtiXS5oYXNPd25Qcm9wZXJ0eShcImVsZW1lbnRcIikpe3ZhciBjPWRbYl0uY2FsbGJhY2ssZT1kW2JdLmVsZW1lbnQ7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiZjKGEoZSkpfWQ9bnVsbH19LGV4dHJhY3RTdHJpbmdWYWx1ZTpmdW5jdGlvbihhKXtpZihcInN0cmluZ1wiPT09XG50eXBlb2YgYSlyZXR1cm4gYX19fSkodWVfY3NtLHdpbmRvdyxkb2N1bWVudCk7XG5cblxuKGZ1bmN0aW9uKGEpe2EudWVfY2VsfHwoYS51ZV9jZWw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBmKGEsYyl7Yz9jLnI9djpjPXtyOnYsYzoxfTshdWVfY3NtLnVlX3NjbG9nJiZjLmNsb2cmJmQuY2xvZz9kLmNsb2coYSxjLm5zfHxxLGMpOmMuZ2xvZyYmZC5nbG9nP2QuZ2xvZyhhLGMubnN8fHEsYyk6ZC5sb2coYSxjLm5zfHxxLGMpfWZ1bmN0aW9uIG0oYSxkKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmZyhcImxvZ1wiLHtzY2hlbWFJZDpzK1wiLlJkQ1NJLjFcIixldmVudFR5cGU6YSxjbGllbnREYXRhOmR9LHtlbnQ6e3BhZ2U6W1wicmVxdWVzdElkXCJdfX0pfWZ1bmN0aW9uIGMoKXt2YXIgYT1uLmxlbmd0aDtpZigwPGEpe2Zvcih2YXIgYz1bXSxiPTA7YjxhO2IrKyl7dmFyIEY9bltiXS5hcGk7Ri5yZWFkeSgpPyhGLm9uKHt0czpkLmQsbnM6cX0pLGUucHVzaChuW2JdKSxmKHtrOlwibXNvXCIsbjpuW2JdLm5hbWUsdDpkLmQoKX0pKTpjLnB1c2gobltiXSl9bj1jfX1mdW5jdGlvbiBoKCl7aWYoIWguZXhlY3V0ZWQpe2Zvcih2YXIgYT1cbjA7YTxlLmxlbmd0aDthKyspZVthXS5hcGkub2ZmJiZlW2FdLmFwaS5vZmYoe3RzOmQuZCxuczpxfSk7QSgpO2Yoe2s6XCJlb2RcIix0MDpkLnQwLHQ6ZC5kKCl9LHtjOjEsaWw6MX0pO2guZXhlY3V0ZWQ9MTtmb3IoYT0wO2E8ZS5sZW5ndGg7YSsrKW4ucHVzaChlW2FdKTtlPVtdO2IodCk7Yih4KX19ZnVuY3Rpb24gQShhKXtmKHtrOlwiaHJ0XCIsdDpkLmQoKX0se2M6MSxpbDoxLG46YX0pO2w9TWF0aC5taW4odyxyKmwpO3koKX1mdW5jdGlvbiB5KCl7Yih4KTt4PWsoZnVuY3Rpb24oKXtBKCEwKX0sbCl9ZnVuY3Rpb24gdSgpe2guZXhlY3V0ZWR8fEEoKX12YXIgcD1hLndpbmRvdyxrPXAuc2V0VGltZW91dCxiPXAuY2xlYXJUaW1lb3V0LHI9MS41LHc9cC51ZV9jZWxfbWF4X2hydHx8M0U0LHM9XCJyb2JvdGRldGVjdGlvblwiLG49W10sZT1bXSxxPWEudWVfY2VsX25zfHxcImNlbFwiLHQseCxkPWEudWUsRT1hLnVldCxCPWEudWV4LHY9ZC5yaWQsQz1wLmNzYSxnLGw9cC51ZV9jZWxfaHJ0X2ludHx8XG4zRTMsej1wLnJlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24oYSl7YSgpfTshYS51ZV9jZWxfbGNsaWEmJkMmJihnPUMoXCJFdmVudHNcIix7cHJvZHVjZXJJZDpzfSkpO2lmKGQuaXNCRilmKHtrOlwiYmZ0XCIsdDpkLmQoKX0pO2Vsc2V7XCJmdW5jdGlvblwiPT10eXBlb2YgRSYmRShcImJiXCIsXCJjc21DRUxMU2ZyYW1ld29ya1wiLHt3YjoxfSk7ayhjLDApO2Qub251bmxvYWQoaCk7aWYoZC5vbmZsdXNoKWQub25mbHVzaCh1KTt0PWsoaCw2RTUpO3koKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBCJiZCKFwibGRcIixcImNzbUNFTExTZnJhbWV3b3JrXCIse3diOjF9KTtyZXR1cm57cmVnaXN0ZXJNb2R1bGU6ZnVuY3Rpb24oYSxiKXtuLnB1c2goe25hbWU6YSxhcGk6Yn0pO2Yoe2s6XCJtcmdcIixuOmEsdDpkLmQoKX0pO2MoKX0scmVzZXQ6ZnVuY3Rpb24oYSl7Zih7azpcInJzdFwiLHQwOmQudDAsdDpkLmQoKX0pO249bi5jb25jYXQoZSk7ZT1bXTtmb3IodmFyIHI9bi5sZW5ndGgsZz0wO2c8cjtnKyspbltnXS5hcGkub2ZmKCksXG5uW2ddLmFwaS5yZXNldCgpO3Y9YXx8ZC5yaWQ7YygpO2IodCk7dD1rKGgsNkU1KTtoLmV4ZWN1dGVkPTB9LHRpbWVvdXQ6ZnVuY3Rpb24oYSxkKXtyZXR1cm4gayhmdW5jdGlvbigpe3ooZnVuY3Rpb24oKXtoLmV4ZWN1dGVkfHxhKCl9KX0sZCl9LGxvZzpmLGNzYUV2ZW50TG9nOm0sb2ZmOmh9fX0oKSl9KSh1ZV9jc20pO1xuKGZ1bmN0aW9uKGEpe2EudWVfcGRtfHwhYS51ZV9jZWx8fGEudWUuaXNCRnx8KGEudWVfcGRtPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZigpe3RyeXt2YXIgZD1iLnNjcmVlbjtpZihkKXt2YXIgYz17dzpkLndpZHRoLGF3OmQuYXZhaWxXaWR0aCxoOmQuaGVpZ2h0LGFoOmQuYXZhaWxIZWlnaHQsY2Q6ZC5jb2xvckRlcHRoLHBkOmQucGl4ZWxEZXB0aH07ZSYmZS53PT09Yy53JiZlLmg9PT1jLmgmJmUuYXc9PT1jLmF3JiZlLmFoPT09Yy5haCYmZS5wZD09PWMucGQmJmUuY2Q9PT1jLmNkfHwoZT1jLGUudD1zKCksZS5rPVwic2NpXCIsRShlKSwhQyYmZyYmbChcInNjaVwiLHtoOihlLmh8fFwiMFwiKStcIlwifSkpfXZhciBrPXIuYm9keXx8e30saD1yLmRvY3VtZW50RWxlbWVudHx8e30sbT17dzpNYXRoLm1heChrLnNjcm9sbFdpZHRofHwwLGsub2Zmc2V0V2lkdGh8fDAsaC5jbGllbnRXaWR0aHx8MCxoLnNjcm9sbFdpZHRofHwwLGgub2Zmc2V0V2lkdGh8fDApLGg6TWF0aC5tYXgoay5zY3JvbGxIZWlnaHR8fFxuMCxrLm9mZnNldEhlaWdodHx8MCxoLmNsaWVudEhlaWdodHx8MCxoLnNjcm9sbEhlaWdodHx8MCxoLm9mZnNldEhlaWdodHx8MCl9O3EmJnEudz09PW0udyYmcS5oPT09bS5ofHwocT1tLHEudD1zKCkscS5rPVwiZG9pXCIsRShxKSk7dz1hLnVlX2NlbC50aW1lb3V0KGYsbik7eCs9MX1jYXRjaChwKXtiLnVlTG9nRXJyb3ImJnVlTG9nRXJyb3IocCx7YXR0cmlidXRpb246XCJjc20tY2VsLXBhZ2UtbW9kdWxlXCIsbG9nTGV2ZWw6XCJXQVJOXCJ9KX19ZnVuY3Rpb24gbSgpe3UoXCJlYmxcIixcImRlZmF1bHRcIiwhMSl9ZnVuY3Rpb24gYygpe3UoXCJlZm9cIixcImRlZmF1bHRcIiwhMCl9ZnVuY3Rpb24gaCgpe3UoXCJlYmxcIixcImFwcFwiLCExKX1mdW5jdGlvbiBBKCl7dShcImVmb1wiLFwiYXBwXCIsITApfWZ1bmN0aW9uIHkoKXtiLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtyW0hdP3UoXCJlYmxcIixcInBhZ2V2aXpcIiwhMSk6dShcImVmb1wiLFwicGFnZXZpelwiLCEwKX0sMCl9ZnVuY3Rpb24gdShhLGQsYyl7dCE9PWMmJihFKHtrOmEsXG50OnMoKSxzOmR9LHtmZjohMD09PWM/MDoxfSksIUMmJmcmJmwoYSx7dDoocygpfHxcIjBcIikrXCJcIixzOmR9KSk7dD1jfWZ1bmN0aW9uIHAoKXtkLmF0dGFjaCYmKHomJmQuYXR0YWNoKEQseSxyKSxJJiZQLndoZW4oXCJtYXNoXCIpLmV4ZWN1dGUoZnVuY3Rpb24oYSl7YSYmYS5hZGRFdmVudExpc3RlbmVyJiYoYS5hZGRFdmVudExpc3RlbmVyKFwiYXBwUGF1c2VcIixoKSxhLmFkZEV2ZW50TGlzdGVuZXIoXCJhcHBSZXN1bWVcIixBKSl9KSxkLmF0dGFjaChcImJsdXJcIixtLGIpLGQuYXR0YWNoKFwiZm9jdXNcIixjLGIpKX1mdW5jdGlvbiBrKCl7ZC5kZXRhY2gmJih6JiZkLmRldGFjaChELHksciksSSYmUC53aGVuKFwibWFzaFwiKS5leGVjdXRlKGZ1bmN0aW9uKGEpe2EmJmEucmVtb3ZlRXZlbnRMaXN0ZW5lciYmKGEucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFwcFBhdXNlXCIsaCksYS5yZW1vdmVFdmVudExpc3RlbmVyKFwiYXBwUmVzdW1lXCIsQSkpfSksZC5kZXRhY2goXCJibHVyXCIsbSxiKSxkLmRldGFjaChcImZvY3VzXCIsXG5jLGIpKX12YXIgYj1hLndpbmRvdyxyPWEuZG9jdW1lbnQsdyxzLG4sZSxxLHQ9bnVsbCx4PTAsZD1hLnVlLEU9YS51ZV9jZWwubG9nLEI9YS51ZXQsdj1hLnVleCxDPWEudWVfY2VsX2xjbGlhLGc9Yi5jc2EsbD1hLnVlX2NlbC5jc2FFdmVudExvZyx6PSEhZC5wYWdlVml6LEQ9eiYmZC5wYWdlVml6LmV2ZW50LEg9eiYmZC5wYWdlVml6LnByb3BIaWQsST1iLlAmJmIuUC53aGVuO1wiZnVuY3Rpb25cIj09dHlwZW9mIEImJkIoXCJiYlwiLFwiY3NtQ0VMTFNwZG1cIix7d2I6MX0pO3JldHVybntvbjpmdW5jdGlvbihhKXtuPWEudGltZXNwYW58fDUwMDtzPWEudHM7cCgpO2E9Yi5sb2NhdGlvbjtFKHtrOlwicG1kXCIsbzphLm9yaWdpbixwOmEucGF0aG5hbWUsdDpzKCl9KTtmKCk7XCJmdW5jdGlvblwiPT10eXBlb2YgdiYmdihcImxkXCIsXCJjc21DRUxMU3BkbVwiLHt3YjoxfSl9LG9mZjpmdW5jdGlvbihhKXtjbGVhclRpbWVvdXQodyk7aygpO2QuY291bnQmJmQuY291bnQoXCJjZWwuUERNLlRvdGFsRXhlY3V0aW9uc1wiLFxueCl9LHJlYWR5OmZ1bmN0aW9uKCl7cmV0dXJuIHIuYm9keSYmYS51ZV9jZWwmJmEudWVfY2VsLmxvZ30scmVzZXQ6ZnVuY3Rpb24oKXtlPXE9bnVsbH19fSgpLGEudWVfY2VsJiZhLnVlX2NlbC5yZWdpc3Rlck1vZHVsZShcInBhZ2UgbW9kdWxlXCIsYS51ZV9wZG0pKX0pKHVlX2NzbSk7XG4oZnVuY3Rpb24oYSl7YS51ZV92cG18fCFhLnVlX2NlbHx8YS51ZS5pc0JGfHwoYS51ZV92cG09ZnVuY3Rpb24oKXtmdW5jdGlvbiBmKCl7dmFyIGE9eSgpLGI9e3c6ay5pbm5lcldpZHRoLGg6ay5pbm5lckhlaWdodCx4OmsucGFnZVhPZmZzZXQseTprLnBhZ2VZT2Zmc2V0fTtjJiZjLnc9PWIudyYmYy5oPT1iLmgmJmMueD09Yi54JiZjLnk9PWIueXx8KGIudD1hLGIuaz1cInZwaVwiLGM9YixyKGMse2Nsb2c6MX0pLCFxJiZ0JiZ4KFwidnBpXCIse3Q6KGMudHx8XCIwXCIpK1wiXCIsaDooYy5ofHxcIjBcIikrXCJcIix5OihjLnl8fFwiMFwiKStcIlwiLHc6KGMud3x8XCIwXCIpK1wiXCIseDooYy54fHxcIjBcIikrXCJcIn0pKTtoPTA7dT15KCktYTtwKz0xfWZ1bmN0aW9uIG0oKXtofHwoaD1hLnVlX2NlbC50aW1lb3V0KGYsQSkpfXZhciBjLGgsQSx5LHU9MCxwPTAsaz1hLndpbmRvdyxiPWEudWUscj1hLnVlX2NlbC5sb2csdz1hLnVldCxzPWEudWV4LG49Yi5hdHRhY2gsZT1iLmRldGFjaCxxPWEudWVfY2VsX2xjbGlhLHQ9XG5rLmNzYSx4PWEudWVfY2VsLmNzYUV2ZW50TG9nO1wiZnVuY3Rpb25cIj09dHlwZW9mIHcmJncoXCJiYlwiLFwiY3NtQ0VMTFN2cG1cIix7d2I6MX0pO3JldHVybntvbjpmdW5jdGlvbihhKXt5PWEudHM7QT1hLnRpbWVzcGFufHwxMDA7ZigpO24mJihuKFwic2Nyb2xsXCIsbSksbihcInJlc2l6ZVwiLG0pKTtcImZ1bmN0aW9uXCI9PXR5cGVvZiBzJiZzKFwibGRcIixcImNzbUNFTExTdnBtXCIse3diOjF9KX0sb2ZmOmZ1bmN0aW9uKGEpe2NsZWFyVGltZW91dChoKTtlJiYoZShcInNjcm9sbFwiLG0pLGUoXCJyZXNpemVcIixtKSk7Yi5jb3VudCYmKGIuY291bnQoXCJjZWwuVlBJLlRvdGFsRXhlY3V0aW9uc1wiLHApLGIuY291bnQoXCJjZWwuVlBJLlRvdGFsRXhlY3V0aW9uVGltZVwiLHUpLGIuY291bnQoXCJjZWwuVlBJLkF2ZXJhZ2VFeGVjdXRpb25UaW1lXCIsdS9wKSl9LHJlYWR5OmZ1bmN0aW9uKCl7cmV0dXJuIGEudWVfY2VsJiZhLnVlX2NlbC5sb2d9LHJlc2V0OmZ1bmN0aW9uKCl7Yz12b2lkIDB9LGdldFZwaTpmdW5jdGlvbigpe3JldHVybiBjfX19KCksXG5hLnVlX2NlbCYmYS51ZV9jZWwucmVnaXN0ZXJNb2R1bGUoXCJ2aWV3cG9ydCBtb2R1bGVcIixhLnVlX3ZwbSkpfSkodWVfY3NtKTtcbihmdW5jdGlvbihhKXtpZighYS51ZV9mZW0mJmEudWVfY2VsJiZhLnVlX3V0aWxzKXt2YXIgZj1hLnVlfHx7fSxtPWEud2luZG93LGM9bS5kb2N1bWVudDshZi5pc0JGJiYhYS51ZV9mZW0mJmMucXVlcnlTZWxlY3RvciYmbS5nZXRDb21wdXRlZFN0eWxlJiZbXS5mb3JFYWNoJiYoYS51ZV9mZW09ZnVuY3Rpb24oKXtmdW5jdGlvbiBoKGEsZCl7cmV0dXJuIGE+ZD8zPmEtZDozPmQtYX1mdW5jdGlvbiBBKGEsZCl7dmFyIGM9bS5wYWdlWE9mZnNldCxiPW0ucGFnZVlPZmZzZXQsazthOnt0cnl7aWYoYSl7dmFyIGc9YS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxlLHI9MD09PWEub2Zmc2V0V2lkdGgmJjA9PT1hLm9mZnNldEhlaWdodDtjOntmb3IodmFyIGY9YS5wYXJlbnROb2RlLHc9Zy5sZWZ0fHwwLG49Zy50b3B8fDAscD1nLndpZHRofHwwLHE9Zy5oZWlnaHR8fDA7ZiYmZiE9PWRvY3VtZW50LmJvZHk7KXt2YXIgbDtkOnt0cnl7dmFyIHM9dm9pZCAwO2lmKGYpdmFyIEc9Zi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcbnM9e3g6Ry5sZWZ0fHwwLHk6Ry50b3B8fDAsdzpHLndpZHRofHwwLGg6Ry5oZWlnaHR8fDB9O2Vsc2Ugcz12b2lkIDA7bD1zO2JyZWFrIGR9Y2F0Y2godil7fWw9dm9pZCAwfXZhciB0PXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGYpLHU9XCJoaWRkZW5cIj09PXQub3ZlcmZsb3cseT11fHxcImhpZGRlblwiPT09dC5vdmVyZmxvd1gsej11fHxcImhpZGRlblwiPT09dC5vdmVyZmxvd1ksSj1uK3EtMTxsLnkrMXx8bisxPmwueStsLmgtMTtpZigodytwLTE8bC54KzF8fHcrMT5sLngrbC53LTEpJiZ5fHxKJiZ6KXtlPSEwO2JyZWFrIGN9Zj1mLnBhcmVudE5vZGV9ZT0hMX1rPXt4OmcubGVmdCtjfHwwLHk6Zy50b3ArYnx8MCx3Omcud2lkdGh8fDAsaDpnLmhlaWdodHx8MCxkOihyfHxlKXwwfX1lbHNlIGs9dm9pZCAwO2JyZWFrIGF9Y2F0Y2goQSl7fWs9dm9pZCAwfWlmKGsmJiFhLmNlbF9iKWEuY2VsX2I9ayxDKHtuOmEuZ2V0QXR0cmlidXRlKHgpLHc6YS5jZWxfYi53LGg6YS5jZWxfYi5oLGQ6YS5jZWxfYi5kLFxueDphLmNlbF9iLngseTphLmNlbF9iLnksdDpkLGs6XCJld2lcIixjbDphLmNsYXNzTmFtZX0se2Nsb2c6MX0pO2Vsc2V7aWYoYz1rKWM9YS5jZWxfYixiPWssYz1iLmQ9PT1jLmQmJjE9PT1iLmQ/ITE6IShoKGMueCxiLngpJiZoKGMueSxiLnkpJiZoKGMudyxiLncpJiZoKGMuaCxiLmgpJiZjLmQ9PT1iLmQpO2MmJihhLmNlbF9iPWssQyh7bjphLmdldEF0dHJpYnV0ZSh4KSx3OmEuY2VsX2IudyxoOmEuY2VsX2IuaCxkOmEuY2VsX2IuZCx4OmEuY2VsX2IueCx5OmEuY2VsX2IueSx0OmQsazpcImV3aVwifSx7Y2xvZzoxfSkpfX1mdW5jdGlvbiB5KGIsZyl7dmFyIGg7aD1iLmM/Yy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKGIuYyk6Yi5pZD9bYy5nZXRFbGVtZW50QnlJZChiLmlkKV06Yy5xdWVyeVNlbGVjdG9yQWxsKGIucyk7Yi53PVtdO2Zvcih2YXIgZj0wO2Y8aC5sZW5ndGg7ZisrKXt2YXIgZT1oW2ZdO2lmKGUpe2lmKCFlLmdldEF0dHJpYnV0ZSh4KSl7dmFyIHI9ZS5nZXRBdHRyaWJ1dGUoXCJjZWxfd2lkZ2V0X2lkXCIpfHxcbihiLmlkX2dlbnx8dikoZSxmKXx8ZS5pZDtlLnNldEF0dHJpYnV0ZSh4LHIpfWIudy5wdXNoKGUpO2soUSxlLGcpfX0hMT09PUImJihFKyssRT09PWQubGVuZ3RoJiYoQj0hMCxhLnVlX3V0aWxzLm5vdGlmeVdpZGdldHNMYWJlbGVkKCkpKX1mdW5jdGlvbiB1KGEsYyl7Zy5jb250YWlucyhhKXx8Qyh7bjphLmdldEF0dHJpYnV0ZSh4KSx0OmMsazpcImV3ZFwifSx7Y2xvZzoxfSl9ZnVuY3Rpb24gcChhKXtLLmxlbmd0aCYmdWVfY2VsLnRpbWVvdXQoZnVuY3Rpb24oKXtpZihxKXtmb3IodmFyIGM9UigpLGQ9ITE7UigpLWM8ZSYmIWQ7KXtmb3IoZD1TOzA8ZC0tJiYwPEsubGVuZ3RoOyl7dmFyIGI9Sy5zaGlmdCgpO1RbYi50eXBlXShiLmVsZW0sYi50aW1lKX1kPTA9PT1LLmxlbmd0aH1VKys7cChhKX19LDApfWZ1bmN0aW9uIGsoYSxjLGQpe0sucHVzaCh7dHlwZTphLGVsZW06Yyx0aW1lOmR9KX1mdW5jdGlvbiBiKGEsYyl7Zm9yKHZhciBiPTA7YjxkLmxlbmd0aDtiKyspZm9yKHZhciBlPVxuZFtiXS53fHxbXSxnPTA7ZzxlLmxlbmd0aDtnKyspayhhLGVbZ10sYyl9ZnVuY3Rpb24gcigpe018fChNPWEudWVfY2VsLnRpbWVvdXQoZnVuY3Rpb24oKXtNPW51bGw7dmFyIGM9dCgpO2IoVyxjKTtmb3IodmFyIGc9MDtnPGQubGVuZ3RoO2crKylrKFgsZFtnXSxjKTswPT09ZC5sZW5ndGgmJiExPT09QiYmKEI9ITAsYS51ZV91dGlscy5ub3RpZnlXaWRnZXRzTGFiZWxlZCgpKTtwKGMpfSxuKSl9ZnVuY3Rpb24gdygpe018fE58fChOPWEudWVfY2VsLnRpbWVvdXQoZnVuY3Rpb24oKXtOPW51bGw7dmFyIGE9dCgpO2IoUSxhKTtwKGEpfSxuKSl9ZnVuY3Rpb24gcygpe3JldHVybiB6JiZEJiZnJiZnLmNvbnRhaW5zJiZnLmdldEJvdW5kaW5nQ2xpZW50UmVjdCYmdH12YXIgbj01MCxlPTQuNSxxPSExLHQseD1cImRhdGEtY2VsLXdpZGdldFwiLGQ9W10sRT0wLEI9ITEsdj1mdW5jdGlvbigpe30sQz1hLnVlX2NlbC5sb2csZyxsLHosRCxIPW0uTXV0YXRpb25PYnNlcnZlcnx8bS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyfHxcbm0uTW96TXV0YXRpb25PYnNlcnZlcixJPSEhSCxGLEcsTz1cIkRPTUF0dHJNb2RpZmllZFwiLEw9XCJET01Ob2RlSW5zZXJ0ZWRcIixKPVwiRE9NTm9kZVJlbW92ZWRcIixOLE0sSz1bXSxVPTAsUz1udWxsLFc9XCJyZW1vdmVkV2lkZ2V0XCIsWD1cInVwZGF0ZVdpZGdldHNcIixRPVwicHJvY2Vzc1dpZGdldFwiLFQsVj1tLnBlcmZvcm1hbmNlfHx7fSxSPVYubm93JiZmdW5jdGlvbigpe3JldHVybiBWLm5vdygpfXx8ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKX07XCJmdW5jdGlvblwiPT10eXBlb2YgdWV0JiZ1ZXQoXCJiYlwiLFwiY3NtQ0VMTFNmZW1cIix7d2I6MX0pO3JldHVybntvbjpmdW5jdGlvbihiKXtmdW5jdGlvbiBlKCl7aWYocygpKXtUPXtyZW1vdmVkV2lkZ2V0OnUsdXBkYXRlV2lkZ2V0czp5LHByb2Nlc3NXaWRnZXQ6QX07aWYoSSl7dmFyIGE9e2F0dHJpYnV0ZXM6ITAsc3VidHJlZTohMH07Rj1uZXcgSCh3KTtHPW5ldyBIKHIpO0Yub2JzZXJ2ZShnLGEpO0cub2JzZXJ2ZShnLHtjaGlsZExpc3Q6ITAsXG5zdWJ0cmVlOiEwfSk7Ry5vYnNlcnZlKGwsYSl9ZWxzZSB6LmNhbGwoZyxPLHcpLHouY2FsbChnLEwsciksei5jYWxsKGcsSixyKSx6LmNhbGwobCxMLHcpLHouY2FsbChsLEosdyk7cigpfX1nPWMuYm9keTtsPWMuaGVhZDt6PWcuYWRkRXZlbnRMaXN0ZW5lcjtEPWcucmVtb3ZlRXZlbnRMaXN0ZW5lcjt0PWIudHM7ZD1hLmNlbF93aWRnZXRzfHxbXTtTPWIuYnN8fDU7Zi5kZWZmZXJlZD9lKCk6Zi5hdHRhY2gmJmYuYXR0YWNoKFwibG9hZFwiLGUpO1wiZnVuY3Rpb25cIj09dHlwZW9mIHVleCYmdWV4KFwibGRcIixcImNzbUNFTExTZmVtXCIse3diOjF9KTtxPSEwfSxvZmY6ZnVuY3Rpb24oKXtzKCkmJihHJiYoRy5kaXNjb25uZWN0KCksRz1udWxsKSxGJiYoRi5kaXNjb25uZWN0KCksRj1udWxsKSxELmNhbGwoZyxPLHcpLEQuY2FsbChnLEwsciksRC5jYWxsKGcsSixyKSxELmNhbGwobCxMLHcpLEQuY2FsbChsLEosdykpO2YuY291bnQmJmYuY291bnQoXCJjZWwud2lkZ2V0cy5iYXRjaGVzUHJvY2Vzc2VkXCIsXG5VKTtxPSExfSxyZWFkeTpmdW5jdGlvbigpe3JldHVybiBhLnVlX2NlbCYmYS51ZV9jZWwubG9nfSxyZXNldDpmdW5jdGlvbigpe2Q9YS5jZWxfd2lkZ2V0c3x8W119fX0oKSxhLnVlX2NlbCYmYS51ZV9mZW0mJmEudWVfY2VsLnJlZ2lzdGVyTW9kdWxlKFwiZmVhdHVyZXMgbW9kdWxlXCIsYS51ZV9mZW0pKX19KSh1ZV9jc20pO1xuKGZ1bmN0aW9uKGEpeyFhLnVlX21jbSYmYS51ZV9jZWwmJmEudWVfdXRpbHMmJiFhLnVlLmlzQkYmJihhLnVlX21jbT1mdW5jdGlvbigpe2Z1bmN0aW9uIGYoYSxiKXt2YXIgaD1hLnNyY0VsZW1lbnR8fGEudGFyZ2V0fHx7fSxmPXtrOm0sdzooYnx8e30pLm93fHwoQS5ib2R5fHx7fSkuc2Nyb2xsV2lkdGgsaDooYnx8e30pLm9ofHwoQS5ib2R5fHx7fSkuc2Nyb2xsSGVpZ2h0LHQ6KGJ8fHt9KS5vdHN8fGMoKSx4OmEucGFnZVgseTphLnBhZ2VZLHA6cC5nZXRYUGF0aChoKSxuOmgubm9kZU5hbWV9O3kmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB5Lm5vdyYmYS50aW1lU3RhbXAmJihmLmR0PShifHx7fSkub2R0fHx5Lm5vdygpLWEudGltZVN0YW1wLGYuZHQ9cGFyc2VGbG9hdChmLmR0LnRvRml4ZWQoMikpKTthLmJ1dHRvbiYmKGYuYj1hLmJ1dHRvbik7aC5ocmVmJiYoZi5yPXAuZXh0cmFjdFN0cmluZ1ZhbHVlKGguaHJlZikpO2guaWQmJihmLmk9aC5pZCk7aC5jbGFzc05hbWUmJmguY2xhc3NOYW1lLnNwbGl0JiZcbihmLmM9aC5jbGFzc05hbWUuc3BsaXQoL1xccysvKSk7dShmLHtjOjF9KX12YXIgbT1cIm1jbVwiLGMsaD1hLndpbmRvdyxBPWguZG9jdW1lbnQseT1oLnBlcmZvcm1hbmNlLHU9YS51ZV9jZWwubG9nLHA9YS51ZV91dGlscztyZXR1cm57b246ZnVuY3Rpb24oayl7Yz1rLnRzO2EudWVfY2VsX3N0dWImJmEudWVfY2VsX3N0dWIucmVwbGF5TW9kdWxlKG0sZik7aC5hZGRFdmVudExpc3RlbmVyJiZoLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIixmLCEwKX0sb2ZmOmZ1bmN0aW9uKGEpe2guYWRkRXZlbnRMaXN0ZW5lciYmaC5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsZiwhMCl9LHJlYWR5OmZ1bmN0aW9uKCl7cmV0dXJuIGEudWVfY2VsJiZhLnVlX2NlbC5sb2d9LHJlc2V0OmZ1bmN0aW9uKCl7fX19KCksYS51ZV9jZWwmJmEudWVfY2VsLnJlZ2lzdGVyTW9kdWxlKFwibW91c2UgY2xpY2sgbW9kdWxlXCIsYS51ZV9tY20pKX0pKHVlX2NzbSk7XG4oZnVuY3Rpb24oYSl7YS51ZV9tbW18fCFhLnVlX2NlbHx8YS51ZS5pc0JGfHwoYS51ZV9tbW09ZnVuY3Rpb24oZil7ZnVuY3Rpb24gbShhLGMpe3ZhciBiPXt4OmEucGFnZVh8fGEueHx8MCx5OmEucGFnZVl8fGEueXx8MCx0OnAoKX07IWMmJmwmJihiLnQtbC50PEF8fGIueD09bC54JiZiLnk9PWwueSl8fChsPWIsdi5wdXNoKGIpKX1mdW5jdGlvbiBjKCl7aWYodi5sZW5ndGgpe0U9Ri5ub3coKTtmb3IodmFyIGE9MDthPHYubGVuZ3RoO2ErKyl7dmFyIGM9dlthXSxiPWE7ej12W2ddO0Q9Yzt2YXIgZT12b2lkIDA7aWYoIShlPTI+Yikpe2U9dm9pZCAwO2E6aWYodltiXS50LXZbYi0xXS50PmgpZT0wO2Vsc2V7Zm9yKGU9ZysxO2U8YjtlKyspe3ZhciBmPXosaz1ELGw9dltlXTtIPShrLngtZi54KSooZi55LWwueSktKGYueC1sLngpKihrLnktZi55KTtpZihIKkgvKChrLngtZi54KSooay54LWYueCkrKGsueS1mLnkpKihrLnktZi55KSk+eSl7ZT0wO2JyZWFrIGF9fWU9MX1lPSFlfShJPVxuZSk/Zz1iLTE6Qy5wb3AoKTtDLnB1c2goYyl9Qj1GLm5vdygpLUU7cT1NYXRoLm1pbihxLEIpO3Q9TWF0aC5tYXgodCxCKTt4PSh4KmQrQikvKGQrMSk7ZCs9MTtuKHtrOnUsZTpDLG1pbjpNYXRoLmZsb29yKDFFMypxKSxtYXg6TWF0aC5mbG9vcigxRTMqdCksYXZnOk1hdGguZmxvb3IoMUUzKngpfSx7YzoxfSk7dj1bXTtDPVtdO2c9MH19dmFyIGg9MTAwLEE9MjAseT0yNSx1PVwibW1tMVwiLHAsayxiPWEud2luZG93LHI9Yi5kb2N1bWVudCx3PWIuc2V0SW50ZXJ2YWwscz1hLnVlLG49YS51ZV9jZWwubG9nLGUscT0xRTMsdD0wLHg9MCxkPTAsRSxCLHY9W10sQz1bXSxnPTAsbCx6LEQsSCxJLEY9ZiYmZi5ub3cmJmZ8fERhdGUubm93JiZEYXRlfHx7bm93OmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCl9fTtyZXR1cm57b246ZnVuY3Rpb24oYSl7cD1hLnRzO2s9YS5ucztzLmF0dGFjaCYmcy5hdHRhY2goXCJtb3VzZW1vdmVcIixtLHIpO2U9dyhjLDNFMyl9LG9mZjpmdW5jdGlvbihhKXtrJiZcbihsJiZtKGwsITApLGMoKSk7Y2xlYXJJbnRlcnZhbChlKTtzLmRldGFjaCYmcy5kZXRhY2goXCJtb3VzZW1vdmVcIixtLHIpfSxyZWFkeTpmdW5jdGlvbigpe3JldHVybiBhLnVlX2NlbCYmYS51ZV9jZWwubG9nfSxyZXNldDpmdW5jdGlvbigpe3Y9W107Qz1bXTtnPTA7bD1udWxsfX19KHdpbmRvdy5wZXJmb3JtYW5jZSksYS51ZV9jZWwmJmEudWVfY2VsLnJlZ2lzdGVyTW9kdWxlKFwibW91c2UgbW92ZSBtb2R1bGVcIixhLnVlX21tbSkpfSkodWVfY3NtKTtcblxuXG5cbnVlX2NzbS51ZS5leGVjKGZ1bmN0aW9uKGIsYyl7dmFyIGU9ZnVuY3Rpb24oKXt9LGY9ZnVuY3Rpb24oKXtyZXR1cm57c2VuZDpmdW5jdGlvbihiLGQpe2lmKGQmJmIpe3ZhciBhO2lmKGMuWERvbWFpblJlcXVlc3QpYT1uZXcgWERvbWFpblJlcXVlc3QsYS5vbmVycm9yPWUsYS5vbnRpbWVvdXQ9ZSxhLm9ucHJvZ3Jlc3M9ZSxhLm9ubG9hZD1lLGEudGltZW91dD0wO2Vsc2UgaWYoYy5YTUxIdHRwUmVxdWVzdCl7aWYoYT1uZXcgWE1MSHR0cFJlcXVlc3QsIShcIndpdGhDcmVkZW50aWFsc1wiaW4gYSkpdGhyb3dcIlwiO31lbHNlIGE9dm9pZCAwO2lmKCFhKXRocm93XCJcIjthLm9wZW4oXCJQT1NUXCIsYiwhMCk7YS5zZXRSZXF1ZXN0SGVhZGVyJiZhLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LXR5cGVcIixcInRleHQvcGxhaW5cIik7YS5zZW5kKGQpfX0saXNTdXBwb3J0ZWQ6ITB9fSgpLGc9ZnVuY3Rpb24oKXtyZXR1cm57c2VuZDpmdW5jdGlvbihjLGQpe2lmKGMmJmQpaWYobmF2aWdhdG9yLnNlbmRCZWFjb24oYyxcbmQpKWIudWVfc2J1aW1wJiZiLnVlJiZiLnVlLnNzdyYmYi51ZS5zc3coXCJlZWxzdHNcIixcInNjc1wiKTtlbHNlIHRocm93XCJcIjt9LGlzU3VwcG9ydGVkOiEhbmF2aWdhdG9yLnNlbmRCZWFjb24mJiEoYy5jb3Jkb3ZhJiZjLmNvcmRvdmEucGxhdGZvcm1JZCYmXCJpb3NcIj09Yy5jb3Jkb3ZhLnBsYXRmb3JtSWQpfX0oKTtiLnVlLl9hang9ZjtiLnVlLl9zQmNuPWd9LFwiVHJhbnNwb3J0YXRpb24tY2xpZW50c1wiKSh1ZV9jc20sd2luZG93KTtcbnVlX2NzbS51ZS5leGVjKGZ1bmN0aW9uKGIsayl7ZnVuY3Rpb24gQSgpe2Zvcih2YXIgYT0wO2E8YXJndW1lbnRzLmxlbmd0aDthKyspe3ZhciBjPWFyZ3VtZW50c1thXTt0cnl7dmFyIGg7aWYoYy5pc1N1cHBvcnRlZCl7dmFyIGI9dC5idWlsZFBheWxvYWQobCxlKTtoPWMuc2VuZChKLGIpfWVsc2UgdGhyb3cgZHVtbXlFeGNlcHRpb247cmV0dXJuIGh9Y2F0Y2goZCl7fX1CKHttOlwiQWxsIHN1cHBvcnRlZCBjbGllbnRzIGZhaWxlZFwiLGF0dHJpYnV0aW9uOlwiQ1NNU3VzaGlDbGllbnRfVFJBTlNQT1JUQVRJT05fRkFJTFwiLGY6XCJzdXNoaS1jbGllbnQuanNcIixsb2dMZXZlbDpcIkVSUk9SXCJ9LGsudWVfZXJyX2NoYW58fFwianNlcnJcIil9ZnVuY3Rpb24gbSgpe2lmKGUubGVuZ3RoKXtmb3IodmFyIGE9MDthPG4ubGVuZ3RoO2ErKyluW2FdKCk7QShkLl9zQmNufHx7fSxkLl9hanh8fHt9KTtlPVtdO2Y9e307bD17fTt1PXY9cT13PTB9fWZ1bmN0aW9uIEsoKXt2YXIgYT1uZXcgRGF0ZSxjPWZ1bmN0aW9uKGEpe3JldHVybiAxMD5cbmE/XCIwXCIrYTphfTtyZXR1cm4gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc/YS50b0lTT1N0cmluZygpOmEuZ2V0VVRDRnVsbFllYXIoKStcIi1cIitjKGEuZ2V0VVRDTW9udGgoKSsxKStcIi1cIitjKGEuZ2V0VVRDRGF0ZSgpKStcIlRcIitjKGEuZ2V0VVRDSG91cnMoKSkrXCI6XCIrYyhhLmdldFVUQ01pbnV0ZXMoKSkrXCI6XCIrYyhhLmdldFVUQ1NlY29uZHMoKSkrXCIuXCIrU3RyaW5nKChhLmdldFVUQ01pbGxpc2Vjb25kcygpLzFFMykudG9GaXhlZCgzKSkuc2xpY2UoMiw1KStcIlpcIn1mdW5jdGlvbiB4KGEpe3RyeXtyZXR1cm4gSlNPTi5zdHJpbmdpZnkoYSl9Y2F0Y2goYyl7fXJldHVybiBudWxsfWZ1bmN0aW9uIEMoYSxjLGgsZyl7dmFyIHA9ITE7Zz1nfHx7fTtyKys7cj09RCYmQih7bTpcIk1heCBudW1iZXIgb2YgU3VzaGkgTG9ncyBleGNlZWRlZFwiLGY6XCJzdXNoaS1jbGllbnQuanNcIixsb2dMZXZlbDpcIkVSUk9SXCIsYXR0cmlidXRpb246XCJDU01TdXNoaUNsaWVudF9NQVhfQ0FMTFNcIn0say51ZV9lcnJfY2hhbnx8XG5cImpzZXJyXCIpO3ZhciBmO2lmKGY9IShyPj1EKSkoZj1hJiYtMTxhLmNvbnN0cnVjdG9yLnRvU3RyaW5nKCkuaW5kZXhPZihcIk9iamVjdFwiKSYmYyYmLTE8Yy5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoXCJTdHJpbmdcIikmJmgmJi0xPGguY29uc3RydWN0b3IudG9TdHJpbmcoKS5pbmRleE9mKFwiU3RyaW5nXCIpKXx8TCsrO2YmJihkLmNvdW50JiZkLmNvdW50KFwiRXZlbnQ6XCIraCwxKSxhLnByb2R1Y2VySWQ9YS5wcm9kdWNlcklkfHxjLGEuc2NoZW1hSWQ9YS5zY2hlbWFJZHx8aCxhLnRpbWVzdGFtcD1LKCksYz1EYXRlLm5vdz9EYXRlLm5vdygpOituZXcgRGF0ZSxoPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoKS5zdWJzdHJpbmcoMiwxMiksYS5tZXNzYWdlSWQ9Yi51ZV9pZCtcIi1cIitjK1wiLVwiK2gsZyYmIWcuc3NkJiYoYS5zZXNzaW9uSWQ9YS5zZXNzaW9uSWR8fGIudWVfc2lkLGEucmVxdWVzdElkPWEucmVxdWVzdElkfHxiLnVlX2lkLGEub2JmdXNjYXRlZE1hcmtldHBsYWNlSWQ9XG5hLm9iZnVzY2F0ZWRNYXJrZXRwbGFjZUlkfHxiLnVlX21pZCksKGM9eChhKSk/KGM9Yy5sZW5ndGgsKGUubGVuZ3RoPT1NfHxxK2M+TikmJm0oKSxxKz1jLGE9e2RhdGE6dC5jb21wcmVzc0V2ZW50KGEpfSxlLnB1c2goYSksKGd8fHt9KS5uPzA9PT1FP20oKTp1fHwodT1rLnNldFRpbWVvdXQobSxFKSk6dnx8KHY9ay5zZXRUaW1lb3V0KG0sTykpLHA9ITApOnA9ITEpOyFwJiZiLnVlX2ludCYmY29uc29sZS5lcnJvcihcIkludmFsaWQgSlMgTmV4dXMgQVBJIGNhbGxcIik7cmV0dXJuIHB9ZnVuY3Rpb24gRigpe2lmKCFHKXtmb3IodmFyIGE9MDthPHkubGVuZ3RoO2ErKyl5W2FdKCk7Zm9yKGE9MDthPG4ubGVuZ3RoO2ErKyluW2FdKCk7ZS5sZW5ndGgmJihiLnVlX3NidWltcCYmYi51ZSYmYi51ZS5zc3cmJihhPXgoe2RjdDpsLGV2dDplfSksYi51ZS5zc3coXCJlZWxkYXRhXCIsYSksYi51ZS5zc3coXCJlZWxzdHNcIixcInVua1wiKSksQShkLl9zQmNufHx7fSkpO0c9ITB9fWZ1bmN0aW9uIEgoYSl7eS5wdXNoKGEpfVxuZnVuY3Rpb24gSShhKXtuLnB1c2goYSl9dmFyIEQ9MUUzLE09NDk5LE49NTI0Mjg4LHM9ZnVuY3Rpb24oKXt9LGQ9Yi51ZXx8e30sQj1kLmxvZ3x8cyxQPWIudWV4fHxzOyhiLnVldHx8cykoXCJiYlwiLFwidWVfc3VzaGlfdjFcIix7d2I6MX0pO3ZhciBKPWIudWVfc3VybHx8XCJodHRwczovL3VuYWdpLW5hLmFtYXpvbi5jb20vMS9ldmVudHMvY29tLmFtYXpvbi5jc20ubmV4dXNjbGllbnQuZ2FtbWFcIixRPVtcIm1lc3NhZ2VJZFwiLFwidGltZXN0YW1wXCJdLHo9XCIjXCIsZT1bXSxmPXt9LGw9e30scT0wLHc9MCxMPTAscj0wLHk9W10sbj1bXSxHPSExLHUsdixFPXZvaWQgMD09PWIudWVfaHBzaT8xRTM6Yi51ZV9ocHNpLE89dm9pZCAwPT09Yi51ZV9scHNpPzFFNDpiLnVlX2xwc2ksdD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7ZlthXT16K3crKztsW2ZbYV1dPWE7cmV0dXJuIGZbYV19ZnVuY3Rpb24gYyhiKXtpZighKGIgaW5zdGFuY2VvZiBGdW5jdGlvbikpe2lmKGIgaW5zdGFuY2VvZiBBcnJheSl7Zm9yKHZhciBnPVxuW10sZD1iLmxlbmd0aCxlPTA7ZTxkO2UrKylnW2VdPWMoYltlXSk7cmV0dXJuIGd9aWYoYiBpbnN0YW5jZW9mIE9iamVjdCl7Zz17fTtmb3IoZCBpbiBiKWIuaGFzT3duUHJvcGVydHkoZCkmJihnW2ZbZF0/ZltkXTphKGQpXT0tMT09PVEuaW5kZXhPZihkKT9jKGJbZF0pOmJbZF0pO3JldHVybiBnfXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYiYmKGIubGVuZ3RoPih6K3cpLmxlbmd0aHx8Yi5jaGFyQXQoMCk9PT16KT9mW2JdP2ZbYl06YShiKTpifX1yZXR1cm57Y29tcHJlc3NFdmVudDpjLGJ1aWxkUGF5bG9hZDpmdW5jdGlvbigpe3JldHVybiB4KHtjczp7ZGN0Omx9LGV2ZW50czplfSl9fX0oKTsoZnVuY3Rpb24oKXtpZihkLmV2ZW50JiZkLmV2ZW50LmlzU3R1Yil7aWYoYi51ZV9zYnVpbXAmJmIudWUmJmIudWUuc3N3KXt2YXIgYT1iLnVlLnNzdyhcImVlbHN0c1wiKS52YWw7aWYoYSYmXCJ1bmtcIj09PWEmJihhPWIudWUuc3N3KFwiZWVsZGF0YVwiKS52YWwpKXt2YXIgYzthOnt0cnl7Yz1cbkpTT04ucGFyc2UoYSk7YnJlYWsgYX1jYXRjaChmKXt9Yz1udWxsfWMmJmMuZXZ0IGluc3RhbmNlb2YgQXJyYXkmJmMuZGN0IGluc3RhbmNlb2YgT2JqZWN0JiYoZT1jLmV2dCxsPWMuZGN0LGUmJmwmJihtKCksYi51ZS5zc3coXCJlZWxkYXRhXCIsXCJ7fVwiKSxiLnVlLnNzdyhcImVlbHN0c1wiLFwic2NzXCIpKSl9fWQuZXZlbnQucmVwbGF5KGZ1bmN0aW9uKGEpe2FbM109YVszXXx8e307YVszXS5uPTE7Qy5hcHBseSh0aGlzLGEpfSk7ZC5vblN1c2hpVW5sb2FkLnJlcGxheShmdW5jdGlvbihhKXtIKGFbMF0pfSk7ZC5vblN1c2hpRmx1c2gucmVwbGF5KGZ1bmN0aW9uKGEpe0koYVswXSl9KX19KSgpO2QuYXR0YWNoKFwiYmVmb3JldW5sb2FkXCIsRik7ZC5hdHRhY2goXCJwYWdlaGlkZVwiLEYpO2QuX2NtcHM9dDtkLmV2ZW50PUM7ZC5ldmVudC5yZXNldD1mdW5jdGlvbigpe3I9MH07ZC5vblN1c2hpVW5sb2FkPUg7ZC5vblN1c2hpRmx1c2g9STt0cnl7ay5QJiZrLlAucmVnaXN0ZXImJmsuUC5yZWdpc3RlcihcInN1c2hpLWNsaWVudFwiLFxucyl9Y2F0Y2goUil7Yi51ZUxvZ0Vycm9yKFIse2xvZ0xldmVsOlwiV0FSTlwifSl9UChcImxkXCIsXCJ1ZV9zdXNoaV92MVwiLHt3YjoxfSl9LFwiTnhzLUpTLUNsaWVudFwiKSh1ZV9jc20sd2luZG93KTtcblxuXG51ZV9jc20udWVfdW5ydCA9IDE1MDA7XG4oZnVuY3Rpb24oZCxiLHQpe2Z1bmN0aW9uIHUoYSxnKXt2YXIgYz1hLnNyY0VsZW1lbnR8fGEudGFyZ2V0fHx7fSxiPXtrOnYsdDpnLnQsZHQ6Zy5kdCx4OmEucGFnZVgseTphLnBhZ2VZLHA6ZS5nZXRYUGF0aChjKSxuOmMubm9kZU5hbWV9O2EuYnV0dG9uJiYoYi5iPWEuYnV0dG9uKTtjLnR5cGUmJihiLnR5PWMudHlwZSk7Yy5ocmVmJiYoYi5yPWUuZXh0cmFjdFN0cmluZ1ZhbHVlKGMuaHJlZikpO2MuaWQmJihiLmk9Yy5pZCk7Yy5jbGFzc05hbWUmJmMuY2xhc3NOYW1lLnNwbGl0JiYoYi5jPWMuY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpO2grPTE7ZS5nZXRGaXJzdEFzY2VuZGluZ1dpZGdldChjLGZ1bmN0aW9uKGEpe2Iud2Q9YTtkLnVlLmxvZyhiLHIpfSl9ZnVuY3Rpb24gdyhhKXtpZigheChhLnNyY0VsZW1lbnR8fGEudGFyZ2V0KSl7bSs9MTtuPSEwO3ZhciBnPWY9ZC51ZS5kKCksYztwJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcC5ub3cmJmEudGltZVN0YW1wJiYoYz1wLm5vdygpLVxuYS50aW1lU3RhbXAsYz1wYXJzZUZsb2F0KGMudG9GaXhlZCgyKSkpO3M9Yi5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dShhLHt0OmcsZHQ6Y30pfSx5KX19ZnVuY3Rpb24geihhKXtpZihhKXt2YXIgYj1hLmZpbHRlcihBKTthLmxlbmd0aCE9PWIubGVuZ3RoJiYocT0hMCxrPWQudWUuZCgpLG4mJnEmJihrJiZmJiZkLnVlLmxvZyh7azpCLHQ6ZixtOk1hdGguYWJzKGstZil9LHIpLGwoKSxxPSExLGs9MCkpfX1mdW5jdGlvbiBBKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPVwiY2hhcmFjdGVyRGF0YVwiPT09YS50eXBlP2EudGFyZ2V0LnBhcmVudEVsZW1lbnQ6YS50YXJnZXQ7aWYoIWJ8fCFiLmhhc0F0dHJpYnV0ZXN8fCFiLmF0dHJpYnV0ZXMpcmV0dXJuITE7dmFyIGM9e1wiY2xhc3NcIjpcImd3LWNsb2NrIGd3LWNsb2NrLWFyaWEgcy1pdGVtLWNvbnRhaW5lci1oZWlnaHQtYXV0byBmZWVkLWNhcm91c2VsIHVzaW5nLW1vdXNlIGtmcy1pbm5lci1jb250YWluZXJcIi5zcGxpdChcIiBcIiksaWQ6W1wiZGVhbENsb2NrXCIsXG5cImRlYWxfZXhwaXJ5X3RpbWVyXCIsXCJ0aW1lclwiXSxyb2xlOltcInRpbWVyXCJdfSxkPSExO09iamVjdC5rZXlzKGMpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGU9Yi5hdHRyaWJ1dGVzW2FdP2IuYXR0cmlidXRlc1thXS52YWx1ZTpcIlwiOyhjW2FdfHxcIlwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpey0xIT09ZS5pbmRleE9mKGEpJiYoZD0hMCl9KX0pO3JldHVybiBkfWZ1bmN0aW9uIHgoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9KGUuZXh0cmFjdFN0cmluZ1ZhbHVlKGEubm9kZU5hbWUpfHxcIlwiKS50b0xvd2VyQ2FzZSgpLGM9KGUuZXh0cmFjdFN0cmluZ1ZhbHVlKGEudHlwZSl8fFwiXCIpLnRvTG93ZXJDYXNlKCksZD0oZS5leHRyYWN0U3RyaW5nVmFsdWUoYS5ocmVmKXx8XCJcIikudG9Mb3dlckNhc2UoKTthPShlLmV4dHJhY3RTdHJpbmdWYWx1ZShhLmlkKXx8XCJcIikudG9Mb3dlckNhc2UoKTt2YXIgZj1cImNoZWNrYm94IGNvbG9yIGRhdGUgZGF0ZXRpbWUtbG9jYWwgZW1haWwgZmlsZSBtb250aCBudW1iZXIgcGFzc3dvcmQgcmFkaW8gcmFuZ2UgcmVzZXQgc2VhcmNoIHRlbCB0ZXh0IHRpbWUgdXJsIHdlZWtcIi5zcGxpdChcIiBcIik7XG5pZigtMSE9PVtcInNlbGVjdFwiLFwidGV4dGFyZWFcIixcImh0bWxcIl0uaW5kZXhPZihiKXx8XCJpbnB1dFwiPT09YiYmLTEhPT1mLmluZGV4T2YoYyl8fFwiYVwiPT09YiYmLTEhPT1kLmluZGV4T2YoXCJodHRwXCIpfHwtMSE9PVtcInNpdGJyZWFkZXJyaWdodHBhZ2V0dXJuZXJcIixcInNpdGJyZWFkZXJsZWZ0cGFnZXR1cm5lclwiLFwic2l0YnJlYWRlcnBhZ2Vjb250YWluZXJcIl0uaW5kZXhPZihhKSlyZXR1cm4hMH1mdW5jdGlvbiBsKCl7bj0hMTtmPTA7Yi5jbGVhclRpbWVvdXQocyl9ZnVuY3Rpb24gQygpe2IudWUub251bmxvYWQoZnVuY3Rpb24oKXt1ZS5jb3VudChcImFybW9yZWQtY3hndWFyZHJhaWxzLnVucmVzcG9uc2l2ZS1jbGlja3MudmlvbGF0aW9uc1wiLGgpO3VlLmNvdW50KFwiYXJtb3JlZC1jeGd1YXJkcmFpbHMudW5yZXNwb25zaXZlLWNsaWNrcy52aW9sYXRpb25SYXRlXCIsaC9tKjEwMHx8MCl9KX1pZihiLk11dGF0aW9uT2JzZXJ2ZXImJmIuYWRkRXZlbnRMaXN0ZW5lciYmT2JqZWN0LmtleXMmJlxuZCYmZC51ZSYmZC51ZS5sb2cmJmQudWVfdW5ydCYmZC51ZV91dGlscyl7dmFyIHk9ZC51ZV91bnJ0LHI9XCJjZWxcIix2PVwidW5yX21jbVwiLEI9XCJyZXNfbWNtXCIscD1iLnBlcmZvcm1hbmNlLGU9ZC51ZV91dGlscyxuPSExLGY9MCxzPTAscT0hMSxrPTAsaD0wLG09MDtiLmFkZEV2ZW50TGlzdGVuZXImJihiLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIix3LCEwKSxiLmFkZEV2ZW50TGlzdGVuZXIoXCJiZWZvcmV1bmxvYWRcIixsLCEwKSxiLmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsbCwhMCksYi5hZGRFdmVudExpc3RlbmVyKFwicGFnZWhpZGVcIixsLCEwKSk7Yi51ZSYmYi51ZS5ldmVudCYmYi51ZS5vblN1c2hpVW5sb2FkJiZiLnVlLm9udW5sb2FkJiZDKCk7KG5ldyBNdXRhdGlvbk9ic2VydmVyKHopKS5vYnNlcnZlKHQse2NoaWxkTGlzdDohMCxhdHRyaWJ1dGVzOiEwLGNoYXJhY3RlckRhdGE6ITAsc3VidHJlZTohMH0pfX0pKHVlX2NzbSx3aW5kb3csZG9jdW1lbnQpO1xuXG5cbnVlX2NzbS51ZS5leGVjKGZ1bmN0aW9uKGcsZSl7aWYoZS51ZV9lcnIpe3ZhciBmPVwiXCI7ZS51ZV9lcnIuZXJyb3JIYW5kbGVyc3x8KGUudWVfZXJyLmVycm9ySGFuZGxlcnM9W10pO2UudWVfZXJyLmVycm9ySGFuZGxlcnMucHVzaCh7bmFtZTpcImZjdHhcIixoYW5kbGVyOmZ1bmN0aW9uKGEpe2lmKCFhLmxvZ0xldmVsfHxcIkZBVEFMXCI9PT1hLmxvZ0xldmVsKWlmKGY9Zy5nZXRFbGVtZW50c0J5VGFnTmFtZShcImh0bWxcIilbMF0uaW5uZXJIVE1MKXt2YXIgYj1mLmluZGV4T2YoXCJ2YXIgdWVfdDA9dWVfdDB8fCtuZXcgRGF0ZSgpO1wiKTtpZigtMSE9PWIpe3ZhciBiPWYuc3Vic3RyKDAsYikuc3BsaXQoU3RyaW5nLmZyb21DaGFyQ29kZSgxMCkpLGQ9TWF0aC5tYXgoYi5sZW5ndGgtMTAtMSwwKSxiPWIuc2xpY2UoZCxiLmxlbmd0aC0xKTthLmZjc21sbj1kK2IubGVuZ3RoKzE7YS5jaW5mbz1hLmNpbmZvfHx7fTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoO2MrKylhLmNpbmZvW2QrYysxK1wiXCJdPVxuYltjXX1iPWYuc3BsaXQoU3RyaW5nLmZyb21DaGFyQ29kZSgxMCkpO2EuY2luZm89YS5jaW5mb3x8e307aWYoIShhLmZ8fHZvaWQgMD09PWEubHx8YS5sIGluIGEuY2luZm8pKWZvcihjPSthLmwtMSxkPU1hdGgubWF4KGMtNSwwKSxjPU1hdGgubWluKGMrNSxiLmxlbmd0aC0xKTtkPD1jO2QrKylhLmNpbmZvW2QrMStcIlwiXT1iW2RdfX19KX19LFwiZmF0YWxzLWNvbnRleHRcIikoZG9jdW1lbnQsd2luZG93KTtcblxuXG4oZnVuY3Rpb24obSxhKXtmdW5jdGlvbiBjKGspe2Z1bmN0aW9uIGYoYil7YiYmXCJzdHJpbmdcIj09PXR5cGVvZiBiJiYoYj0oYj1iLm1hdGNoKC9eKD86aHR0cHM/Oik/XFwvXFwvKC4qPykoXFwvfCQpL2kpKSYmMTxiLmxlbmd0aD9iWzFdOm51bGwsYiYmYiYmKFwibnVtYmVyXCI9PT10eXBlb2YgZVtiXT9lW2JdKys6ZVtiXT0xKSl9ZnVuY3Rpb24gZChiKXt2YXIgZT0xMCxkPStuZXcgRGF0ZTtiJiZiLnRpbWVSZW1haW5pbmc/ZT1iLnRpbWVSZW1haW5pbmcoKTpiPXt0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIE1hdGgubWF4KDAsZS0oK25ldyBEYXRlLWQpKX19O2Zvcih2YXIgYz1hLnBlcmZvcm1hbmNlLmdldEVudHJpZXMoKSxrPWU7ZzxjLmxlbmd0aCYmaz5uOyljW2ddLm5hbWUmJmYoY1tnXS5uYW1lKSxnKyssaz1iLnRpbWVSZW1haW5pbmcoKTtnPj1jLmxlbmd0aD9oKCEwKTpsKCl9ZnVuY3Rpb24gaChiKXtpZighYil7Yj1tLnNjcmlwdHM7dmFyIGM7aWYoYilmb3IodmFyIGQ9XG4wO2Q8Yi5sZW5ndGg7ZCsrKShjPWJbZF0uZ2V0QXR0cmlidXRlKFwic3JjXCIpKSYmXCJ1bmRlZmluZWRcIiE9PWMmJmYoYyl9MDxPYmplY3Qua2V5cyhlKS5sZW5ndGgmJihwJiZ1ZV9jc20udWUmJnVlX2NzbS51ZS5ldmVudCYmdWVfY3NtLnVlLmV2ZW50KHtkb21haW5zOmUscGFnZVR5cGU6YS51ZV9wdHl8fG51bGwsc3ViUGFnZVR5cGU6YS51ZV9zcHR5fHxudWxsLHBhZ2VUeXBlSWQ6YS51ZV9wdGl8fG51bGx9LFwiY3NtXCIsXCJjc20uQ3Jvc3NPcmlnaW5Eb21haW5zLjJcIiksYS51ZV9leHQ9ZSl9ZnVuY3Rpb24gbCgpeyEwPT09az9kKCk6YS5yZXF1ZXN0SWRsZUNhbGxiYWNrP2EucmVxdWVzdElkbGVDYWxsYmFjayhkKTphLnJlcXVlc3RBbmltYXRpb25GcmFtZT9hLnJlcXVlc3RBbmltYXRpb25GcmFtZShkKTphLnNldFRpbWVvdXQoZCwxMDApfWZ1bmN0aW9uIGMoKXtpZihhLnBlcmZvcm1hbmNlJiZhLnBlcmZvcm1hbmNlLmdldEVudHJpZXMpe3ZhciBiPWEucGVyZm9ybWFuY2UuZ2V0RW50cmllcygpO1xuIWJ8fDA+PWIubGVuZ3RoP2goITEpOmwoKX1lbHNlIGgoITEpfXZhciBlPWEudWVfZXh0fHx7fTthLnVlX2V4dHx8YygpO3JldHVybiBlfWZ1bmN0aW9uIHEoKXtzZXRUaW1lb3V0KGMscil9dmFyIHM9YS51ZV9kc2Vycnx8ITEscD0hMCxuPTEscj0yRTMsZz0wO2EudWVfZXJyJiZzJiYoYS51ZV9lcnIuZXJyb3JIYW5kbGVyc3x8KGEudWVfZXJyLmVycm9ySGFuZGxlcnM9W10pLGEudWVfZXJyLmVycm9ySGFuZGxlcnMucHVzaCh7bmFtZTpcImV4dFwiLGhhbmRsZXI6ZnVuY3Rpb24oYSl7aWYoIWEubG9nTGV2ZWx8fFwiRkFUQUxcIj09PWEubG9nTGV2ZWwpe3ZhciBmPWMoITApLGQ9W10saDtmb3IoaCBpbiBmKXt2YXIgZj1oLGc9Zi5tYXRjaCgvYW1hem9uKFxcLmNvbT8pP1xcLlxcd3syLDN9JC9pKTtnJiYxPGcubGVuZ3RofHwtMSE9PWYuaW5kZXhPZihcImFtYXpvbi1hZHN5c3RlbS5jb21cIil8fC0xIT09Zi5pbmRleE9mKFwiYW1hem9ucGF5LmNvbVwiKXx8LTEhPT1mLmluZGV4T2YoXCJjbG91ZGZyb250LWxhYnMuYW1hem9uYXdzLmNvbVwiKXx8XG5kLnB1c2goaCl9YS5leHQ9ZH19fSkpO2EudWUmJmEudWUuaXNsP2MoKTphLnVlJiZ1ZS5hdHRhY2gmJnVlLmF0dGFjaChcImxvYWRcIixxKX0pKGRvY3VtZW50LHdpbmRvdyk7XG5cblxuXG5cblxudmFyIHVlX3d0Y19jID0gMztcbnVlX2NzbS51ZS5leGVjKGZ1bmN0aW9uKGIsZSl7ZnVuY3Rpb24gbCgpe2Zvcih2YXIgYT0wO2E8Zi5sZW5ndGg7YSsrKWE6Zm9yKHZhciBkPXMucmVwbGFjZShBLGZbYV0pK2dbZlthXV0rdCxjPWFyZ3VtZW50cyxiPTA7YjxjLmxlbmd0aDtiKyspdHJ5e2NbYl0uc2VuZChkKTticmVhayBhfWNhdGNoKGUpe31nPXt9O2Y9W107bj0wO2s9cH1mdW5jdGlvbiB1KCl7Qj9sKHEpOmwoQyxxKX1mdW5jdGlvbiB2KGEsbSxjKXtyKys7aWYocj53KWQuY291bnQmJjE9PXItdyYmKGQuY291bnQoXCJXZWJsYWJUcmlnZ2VyVGhyZXNob2xkUmVhY2hlZFwiLDEpLGIudWVfaW50JiZjb25zb2xlLmVycm9yKFwiTnVtYmVyIG9mIG1heCBjYWxsIHJlYWNoZWQuIERhdGEgd2lsbCBubyBsb25nZXIgYmUgc2VuZFwiKSk7ZWxzZXt2YXIgaD1jfHx7fTtoJiYtMTxoLmNvbnN0cnVjdG9yLnRvU3RyaW5nKCkuaW5kZXhPZihEKSYmYSYmLTE8YS5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoeCkmJm0mJi0xPFxubS5jb25zdHJ1Y3Rvci50b1N0cmluZygpLmluZGV4T2YoeCk/KGg9Yi51ZV9pZCxjJiZjLnJpZCYmKGg9Yy5yaWQpLGM9aCxhPWVuY29kZVVSSUNvbXBvbmVudChcIix3bD1cIithK1wiL1wiK20pLDJFMz5hLmxlbmd0aCtwPygyRTM8aythLmxlbmd0aCYmdSgpLHZvaWQgMD09PWdbY10mJihnW2NdPVwiXCIsZi5wdXNoKGMpKSxnW2NdKz1hLGsrPWEubGVuZ3RoLG58fChuPWUuc2V0VGltZW91dCh1LEUpKSk6Yi51ZV9pbnQmJmNvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIEFQSSBjYWxsLiBUaGUgaW5wdXQgcHJvdmlkZWQgaXMgb3ZlciAyMDAwIGNoYXJzLlwiKSk6ZC5jb3VudCYmKGQuY291bnQoXCJXZWJsYWJUcmlnZ2VySW1wcm9wZXJBUElDYWxsXCIsMSksYi51ZV9pbnQmJmNvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIEFQSSBjYWxsLiBUaGUgaW5wdXQgcHJvdmlkZWQgZG9lcyBub3QgbWF0Y2ggdGhlIEFQSSBwcm90b2NvbCBpLmUgdWUudHJpZ2dlcihTdHJpbmcsIFN0cmluZywgT2JqZWN0KS5cIikpfX1mdW5jdGlvbiBGKCl7ZC50cmlnZ2VyJiZcbmQudHJpZ2dlci5pc1N0dWImJmQudHJpZ2dlci5yZXBsYXkoZnVuY3Rpb24oYSl7di5hcHBseSh0aGlzLGEpfSl9ZnVuY3Rpb24geSgpe3p8fChmLmxlbmd0aCYmbChxKSx6PSEwKX12YXIgdD1cIjoxMjM0XCIscz1cIi8vXCIrYi51ZV9mdXJsK1wiLzEvcmVtb3RlLXdlYmxhYi10cmlnZ2Vycy8xL09FL1wiK2IudWVfbWlkK1wiOlwiK2IudWVfc2lkK1wiOlBMQ0hMRFJfUklEJHM6d2wtY2xpZW50LWlkJTNEQ1NNVHJpZ2VyXCIsQT1cIlBMQ0hMRFJfUklEXCIsRT1iLnd0dHx8MUU0LHA9cy5sZW5ndGgrdC5sZW5ndGgsdz1iLm13dGN8fDJFMyxHPTE9PT1lLnVlX3d0Y19jLEI9Mz09PWUudWVfd3RjX2MsSD1lLlhNTEh0dHBSZXF1ZXN0JiZcIndpdGhDcmVkZW50aWFsc1wiaW4gbmV3IGUuWE1MSHR0cFJlcXVlc3QseD1cIlN0cmluZ1wiLEQ9XCJPYmplY3RcIixkPWIudWUsZz17fSxmPVtdLGs9cCxuLHo9ITEscj0wLEM9ZnVuY3Rpb24oKXtyZXR1cm57c2VuZDpmdW5jdGlvbihhKXtpZihIKXt2YXIgYj1uZXcgZS5YTUxIdHRwUmVxdWVzdDtcbmIub3BlbihcIkdFVFwiLGEsITApO0cmJihiLndpdGhDcmVkZW50aWFscz0hMCk7Yi5zZW5kKCl9ZWxzZSB0aHJvd1wiXCI7fX19KCkscT1mdW5jdGlvbigpe3JldHVybntzZW5kOmZ1bmN0aW9uKGEpeyhuZXcgSW1hZ2UpLnNyYz1hfX19KCk7ZS5lbmNvZGVVUklDb21wb25lbnQmJihkLmF0dGFjaCYmKGQuYXR0YWNoKFwiYmVmb3JldW5sb2FkXCIseSksZC5hdHRhY2goXCJwYWdlaGlkZVwiLHkpKSxGKCksZC50cmlnZ2VyPXYpfSxcImNsaWVudC13YmwtdHJnXCIpKHVlX2NzbSx3aW5kb3cpO1xuXG5cbihmdW5jdGlvbihrLGQsaCl7ZnVuY3Rpb24gZihhLGMsYil7YSYmYS5pbmRleE9mJiYwPT09YS5pbmRleE9mKFwiaHR0cFwiKSYmMCE9PWEuaW5kZXhPZihcImh0dHBzXCIpJiZsKHMsYyxhLGIpfWZ1bmN0aW9uIGcoYSxjLGIpe2EmJmEuaW5kZXhPZiYmKGxvY2F0aW9uLmhyZWYuc3BsaXQoXCIjXCIpWzBdIT1hJiZudWxsIT09YSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBhfHxsKHQsYyxhLGIpKX1mdW5jdGlvbiBsKGEsYyxiLGUpe21bYl18fChlPXUmJmU/bihlKTpcIk4vQVwiLGQudWVMb2dFcnJvciYmZC51ZUxvZ0Vycm9yKHttZXNzYWdlOmErYytcIiA6IFwiK2IsbG9nTGV2ZWw6dixzdGFjazpcIk4vQVwifSx7YXR0cmlidXRpb246ZX0pLG1bYl09MSxwKyspfWZ1bmN0aW9uIGUoYSxjKXtpZihhJiZjKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXRyeXtjKGFbYl0pfWNhdGNoKGQpe319ZnVuY3Rpb24gcSgpe3JldHVybiBkLnBlcmZvcm1hbmNlJiZkLnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGU/XG5kLnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoXCJyZXNvdXJjZVwiKTpbXX1mdW5jdGlvbiBuKGEpe2lmKGEuaWQpcmV0dXJuXCIvLypbQGlkPSdcIithLmlkK1wiJ11cIjt2YXIgYztjPTE7dmFyIGI7Zm9yKGI9YS5wcmV2aW91c1NpYmxpbmc7YjtiPWIucHJldmlvdXNTaWJsaW5nKWIubm9kZU5hbWU9PWEubm9kZU5hbWUmJihjKz0xKTtiPWEubm9kZU5hbWU7MSE9YyYmKGIrPVwiW1wiK2MrXCJdXCIpO2EucGFyZW50Tm9kZSYmKGI9bihhLnBhcmVudE5vZGUpK1wiL1wiK2IpO3JldHVybiBifWZ1bmN0aW9uIHcoKXt2YXIgYT1oLmltYWdlczthJiZhLmxlbmd0aCYmZShhLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKFwic3JjXCIpO2YoYixcImltZ1wiLGEpO2coYixcImltZ1wiLGEpfSl9ZnVuY3Rpb24geCgpe3ZhciBhPWguc2NyaXB0czthJiZhLmxlbmd0aCYmZShhLGZ1bmN0aW9uKGEpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKFwic3JjXCIpO2YoYixcInNjcmlwdFwiLGEpO2coYixcInNjcmlwdFwiLGEpfSl9XG5mdW5jdGlvbiB5KCl7dmFyIGE9aC5zdHlsZVNoZWV0czthJiZhLmxlbmd0aCYmZShhLGZ1bmN0aW9uKGEpe2lmKGE9YS5vd25lck5vZGUpe3ZhciBiPWEuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKTtmKGIsXCJzdHlsZVwiLGEpO2coYixcInN0eWxlXCIsYSl9fSl9ZnVuY3Rpb24geigpe2lmKEEpe3ZhciBhPXEoKTtlKGEsZnVuY3Rpb24oYSl7ZihhLm5hbWUsYS5pbml0aWF0b3JUeXBlKX0pfX1mdW5jdGlvbiBCKCl7ZShxKCksZnVuY3Rpb24oYSl7ZyhhLm5hbWUsYS5pbml0aWF0b3JUeXBlKX0pfWZ1bmN0aW9uIHIoKXt2YXIgYTthPWQubG9jYXRpb24mJmQubG9jYXRpb24ucHJvdG9jb2w/ZC5sb2NhdGlvbi5wcm90b2NvbDp2b2lkIDA7XCJodHRwczpcIj09YSYmKHooKSx3KCkseCgpLHkoKSxCKCkscDxDJiZzZXRUaW1lb3V0KHIsRCkpfXZhciBzPVwiW0NTTV0gSW5zZWN1cmUgY29udGVudCBkZXRlY3RlZCBcIix0PVwiW0NTTV0gQWpheCByZXF1ZXN0IHRvIHNhbWUgcGFnZSBkZXRlY3RlZCBcIix2PVwiV0FSTlwiLFxubT17fSxwPTAsRD1rLnVlX25zaXB8fDFFMyxDPTUsQT0xPT1rLnVlX3VydCx1PSEwO3VlX2NzbS51ZV9kaXNhYmxlTm9uU2VjdXJlfHwoZC5wZXJmb3JtYW5jZSYmZC5wZXJmb3JtYW5jZS5zZXRSZXNvdXJjZVRpbWluZ0J1ZmZlclNpemUmJmQucGVyZm9ybWFuY2Uuc2V0UmVzb3VyY2VUaW1pbmdCdWZmZXJTaXplKDMwMCkscigpKX0pKHVlX2NzbSx3aW5kb3csZG9jdW1lbnQpO1xuXG5cbnZhciB1ZV9hYV9hID0gXCJUMVwiO1xuaWYgKHVlLnRyaWdnZXIgJiYgKHVlX2FhX2EgPT09IFwiQ1wiIHx8IHVlX2FhX2EgPT09IFwiVDFcIikpIHtcbiAgICB1ZS50cmlnZ2VyKFwiVUVEQVRBX0FBX1NFUlZFUlNJREVfQVNTSUdOTUVOVF9DTElFTlRTSURFX1RSSUdHRVJfMTkwMjQ5XCIsIHVlX2FhX2EpO1xufVxuKGZ1bmN0aW9uKGYsYil7ZnVuY3Rpb24gZygpe3RyeXtiLlBlcmZvcm1hbmNlT2JzZXJ2ZXImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlBlcmZvcm1hbmNlT2JzZXJ2ZXImJihhPW5ldyBiLlBlcmZvcm1hbmNlT2JzZXJ2ZXIoZnVuY3Rpb24oYil7YyhiLmdldEVudHJpZXMoKSl9KSxhLm9ic2VydmUoZCkpfWNhdGNoKGgpe2soKX19ZnVuY3Rpb24gbSgpe2Zvcih2YXIgaD1kLmVudHJ5VHlwZXMsYT0wO2E8aC5sZW5ndGg7YSsrKWMoYi5wZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlKGhbYV0pKX1mdW5jdGlvbiBjKGEpe2lmKGEmJkFycmF5LmlzQXJyYXkoYSkpe2Zvcih2YXIgYz0wLGU9MDtlPGEubGVuZ3RoO2UrKyl7dmFyIGQ9bC5pbmRleE9mKGFbZV0ubmFtZSk7aWYoLTEhPT1kKXt2YXIgZz1NYXRoLnJvdW5kKGIucGVyZm9ybWFuY2UudGltaW5nLm5hdmlnYXRpb25TdGFydCthW2VdLnN0YXJ0VGltZSk7Zi51ZXQobltkXSx2b2lkIDAsdm9pZCAwLGcpO2MrK319bC5sZW5ndGg9PT1cbmMmJmsoKX19ZnVuY3Rpb24gaygpe2EmJmEuZGlzY29ubmVjdCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuZGlzY29ubmVjdCYmYS5kaXNjb25uZWN0KCl9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGYudWV0JiZiLnBlcmZvcm1hbmNlJiZcIm9iamVjdFwiPT09dHlwZW9mIGIucGVyZm9ybWFuY2UmJmIucGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSYmYi5wZXJmb3JtYW5jZS50aW1pbmcmJlwib2JqZWN0XCI9PT10eXBlb2YgYi5wZXJmb3JtYW5jZS50aW1pbmcmJlwibnVtYmVyXCI9PT10eXBlb2YgYi5wZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0KXt2YXIgZD17ZW50cnlUeXBlczpbXCJwYWludFwiXX0sbD1bXCJmaXJzdC1wYWludFwiLFwiZmlyc3QtY29udGVudGZ1bC1wYWludFwiXSxuPVtcImZwXCIsXCJmY3BcIl0sYTt0cnl7bSgpLGcoKX1jYXRjaChwKXtmLnVlTG9nRXJyb3IocCx7bG9nTGV2ZWw6XCJFUlJPUlwiLFxuYXR0cmlidXRpb246XCJwZXJmb3JtYW5jZU1ldHJpY3NcIn0pfX19KSh1ZV9jc20sd2luZG93KTtcblxuXG5pZiAod2luZG93LmNzYSkge1xuICAgIGNzYShcIkV2ZW50c1wiKShcInNldEVudGl0eVwiLCB7XG4gICAgICAgIHBhZ2U6e3BhZ2VUeXBlOiBcIlNlYXJjaFwiLCBzdWJQYWdlVHlwZTogXCJMaXN0XCIsIHBhZ2VUeXBlSWQ6IFwiXCJ9XG4gICAgfSk7XG59XG5jc2EucGx1Z2luKGZ1bmN0aW9uKGMpe3ZhciBtPVwidHJhbnNpdGlvblN0YXJ0XCIsbj1cInBhZ2VWaXNpYmxlXCIsZT1cIlBhZ2VUaW1pbmdcIix0PVwidmlzaWJpbGl0eWNoYW5nZVwiLHM9XCIkbGF0ZW5jeS52aXNpYmxlXCIsaT1jLmdsb2JhbCxyPShpLnBlcmZvcm1hbmNlfHx7fSkudGltaW5nLGE9W1wibmF2aWdhdGlvblN0YXJ0XCIsXCJ1bmxvYWRFdmVudFN0YXJ0XCIsXCJ1bmxvYWRFdmVudEVuZFwiLFwicmVkaXJlY3RTdGFydFwiLFwicmVkaXJlY3RFbmRcIixcImZldGNoU3RhcnRcIixcImRvbWFpbkxvb2t1cFN0YXJ0XCIsXCJkb21haW5Mb29rdXBFbmRcIixcImNvbm5lY3RTdGFydFwiLFwiY29ubmVjdEVuZFwiLFwic2VjdXJlQ29ubmVjdGlvblN0YXJ0XCIsXCJyZXF1ZXN0U3RhcnRcIixcInJlc3BvbnNlU3RhcnRcIixcInJlc3BvbnNlRW5kXCIsXCJkb21Mb2FkaW5nXCIsXCJkb21JbnRlcmFjdGl2ZVwiLFwiZG9tQ29udGVudExvYWRlZEV2ZW50U3RhcnRcIixcImRvbUNvbnRlbnRMb2FkZWRFdmVudEVuZFwiLFwiZG9tQ29tcGxldGVcIixcImxvYWRFdmVudFN0YXJ0XCIsXCJsb2FkRXZlbnRFbmRcIl0sbz1pLk1hdGgsdT1vLm1heCxsPW8uZmxvb3IsZD1pLmRvY3VtZW50fHx7fSxnPShyfHx7fSkubmF2aWdhdGlvblN0YXJ0LGY9Zyx2PTAscD1udWxsO2lmKGkuT2JqZWN0LmtleXMmJltdLmZvckVhY2gmJiFjLmNvbmZpZ1tcIktpbGxTd2l0Y2guXCIrZV0pe2lmKCFyfHxudWxsPT09Z3x8Zzw9MHx8dm9pZCAwPT09ZylyZXR1cm4gYy5lcnJvcihcIkludmFsaWQgbmF2aWdhdGlvbiB0aW1pbmcgZGF0YTogXCIrZyk7cD1uZXcgUyh7c2NoZW1hSWQ6XCI8bnM+LlBhZ2VMYXRlbmN5LjVcIixwcm9kdWNlcklkOlwiY3NhXCJ9KSxcImJvb2xlYW5cIiE9dHlwZW9mIGQuaGlkZGVuJiZcInN0cmluZ1wiIT10eXBlb2YgZC52aXNpYmlsaXR5U3RhdGV8fCFkLnJlbW92ZUV2ZW50TGlzdGVuZXI/Yy5lbWl0KHMpOmgoKT8oYy5lbWl0KHMpLEUobixnKSk6Yy5vbihkLHQsZnVuY3Rpb24gZSgpe2goKSYmKGY9Yy50aW1lKCksZC5yZW1vdmVFdmVudExpc3RlbmVyKHQsZSksRShtLGYpLEUobixmKSxjLmVtaXQocykpfSksYy5vbmNlKFwiJHVubG9hZFwiLEkpLGMub25jZShcIiRsb2FkXCIsSSksYy5vbihcIiRwYWdlVHJhbnNpdGlvblwiLGZ1bmN0aW9uKCl7Zj1jLnRpbWUoKX0pLGMucmVnaXN0ZXIoZSx7bWFyazpFLGluc3RhbmNlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgUyhlKX19KX1mdW5jdGlvbiBTKGUpe3ZhciBpLHI9bnVsbCxhPWUuZW50fHx7cGFnZTpbXCJwYWdlVHlwZVwiLFwic3ViUGFnZVR5cGVcIixcInJlcXVlc3RJZFwiXX0sbz1lLmxvZ2dlcnx8YyhcIkV2ZW50c1wiLHtwcm9kdWNlcklkOmUucHJvZHVjZXJJZH0pO2lmKCFlfHwhZS5wcm9kdWNlcklkfHwhZS5zY2hlbWFJZClyZXR1cm4gYy5lcnJvcihcIlRoZSBwcm9kdWNlciBpZCBhbmQgc2NoZW1hIElkIG11c3QgYmUgZGVmaW5lZCBmb3IgUGFnZUxhdGVuY3lJbnN0YW5jZS5cIik7ZnVuY3Rpb24gZCgpe3JldHVybiBpfHxmfWZ1bmN0aW9uIG4oKXtyPWMuVVVJRCgpfXRoaXMubWFyaz1mdW5jdGlvbihuLHQpe2lmKG51bGwhPW4pcmV0dXJuIHQ9dHx8Yy50aW1lKCksbj09PW0mJihpPXQpLGMub25jZShzLGZ1bmN0aW9uKCl7byhcImxvZ1wiLHttZXNzYWdlSWQ6cixfX21lcmdlOmZ1bmN0aW9uKGUpe2UubWFya2Vyc1tuXT1mdW5jdGlvbihlLG4pe3JldHVybiB1KDAsbi0oZXx8ZikpfShkKCksdCksZS5tYXJrZXJUaW1lc3RhbXBzW25dPWwodCl9LG1hcmtlcnM6e30sbWFya2VyVGltZXN0YW1wczp7fSxuYXZpZ2F0aW9uU3RhcnRUaW1lc3RhbXA6ZCgpP25ldyBEYXRlKGQoKSkudG9JU09TdHJpbmcoKTpudWxsLHNjaGVtYUlkOmUuc2NoZW1hSWR9LHtlbnQ6YX0pfSksdH0sbigpLGMub24oXCIkYmVmb3JlUGFnZVRyYW5zaXRpb25cIixuKX1mdW5jdGlvbiBFKGUsbil7ZT09PW0mJihmPW4pO3ZhciB0PXAubWFyayhlLG4pO2MuZW1pdChcIiR0aW1pbmc6XCIrZSx0KX1mdW5jdGlvbiBJKCl7aWYoIXYpe2Zvcih2YXIgZT0wO2U8YS5sZW5ndGg7ZSsrKXJbYVtlXV0mJkUoYVtlXSxyW2FbZV1dKTt2PTF9fWZ1bmN0aW9uIGgoKXtyZXR1cm4hZC5oaWRkZW58fFwidmlzaWJsZVwiPT09ZC52aXNpYmlsaXR5U3RhdGV9fSk7Y3NhLnBsdWdpbihmdW5jdGlvbih0KXt2YXIgYSxmPVwibGVuZ3RoXCIsdT1cInBhcmVudEVsZW1lbnRcIixpPVwidGFyZ2V0XCIscj1cImdldEVudHJpZXNCeU5hbWVcIixvPVwiX29zcmNcIixjPVwiX2VsdFwiLGQ9XCJfZWlkXCIsbD0xMCxoPTUsZz0xMCxzPTEwMCxtPXQuZ2xvYmFsLG49dC50aW1lb3V0LGU9bS5NYXRoLHY9ZS5tYXgscD1lLmZsb29yLHk9ZS5jZWlsLEU9bS5kb2N1bWVudCx4PW0ucGVyZm9ybWFuY2V8fHt9LHc9KHgudGltaW5nfHx7fSkubmF2aWdhdGlvblN0YXJ0LE89RGF0ZS5ub3csUz1PYmplY3QudmFsdWVzfHwodC50eXBlc3x8e30pLm92bCxUPXQoXCJQYWdlVGltaW5nXCIpLGI9dChcIlNwZWVkSW5kZXhCdWZmZXJzXCIpLEk9W10sTj1bXSxCPVtdLEg9W10sTD1bXSxXPS4xLF89LjEsaz0wLEM9MCxQPSEwLFI9MCxYPTAsWT0wLCQ9MCxGPTEsVj0wLGo9W10sRD0wO2Z1bmN0aW9uIE0oKXtmb3IodmFyIGU9TygpLG49MDthOyl7aWYoMCE9PWFbZl0pe2lmKCExIT09YS5oKGFbMF0pJiZhLnNoaWZ0KCksbisrLCFZJiZuJWw9PTAmJk8oKS1lPmgpYnJlYWt9ZWxzZSBhPWEubn1rPTAsYSYmMDxhW2ZdJiYoaz1rfHx0LnJhZihNKSl9ZnVuY3Rpb24gcShlLG4sdCxpKXtWPXAoZSksST1uLE49dCxMPWk7dmFyIHI9RS5jcmVhdGVUcmVlV2Fsa2VyKEUuYm9keSxOb2RlRmlsdGVyLlNIT1dfVEVYVCxudWxsLG51bGwpLG89e3c6bS5pbm5lcldpZHRoLGg6bS5pbm5lckhlaWdodCx4Om0ucGFnZVhPZmZzZXQseTptLnBhZ2VZT2Zmc2V0fTtFLmJvZHlbY109ZSxCLnB1c2goe3c6cix2cDpvfSksSC5wdXNoKHtpbWc6RS5pbWFnZXMsaXRlcjowfSksSS5oPXosKEkubj1OKS5oPUEsKE4ubj1CKS5oPUcsKEIubj1IKS5oPUosKEgubj1MKS5oPUssYT1JLE0oKX1mdW5jdGlvbiB6KGUpe2UubS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWVbaV07byBpbiBufHwobltvXT1lLm9sZFZhbHVlKX0pfWZ1bmN0aW9uIEEobil7bi5tLmZvckVhY2goZnVuY3Rpb24oZSl7ZVtpXVtjXT1uLnQtd30pfWZ1bmN0aW9uIEcoZSl7Zm9yKHZhciBuLHQ9ZS52cCxpPWUudyxyPWw7KG49aS5uZXh0Tm9kZSgpKSYmMDxyOyl7ci09MTt2YXIgbz0oblt1XXx8e30pLm5vZGVOYW1lO1wiU0NSSVBUXCIhPT1vJiZcIlNUWUxFXCIhPT1vJiZcIk5PU0NSSVBUXCIhPT1vJiYwIT09KG4ubm9kZVZhbHVlfHxcIlwiKS50cmltKClbZl0mJlooblt1XSxRKG4pLHQpfXJldHVybiFufWZ1bmN0aW9uIEooZSl7Zm9yKHZhciBuLHQ9e3c6bS5pbm5lcldpZHRoLGg6bS5pbm5lckhlaWdodCx4Om0ucGFnZVhPZmZzZXQseTptLnBhZ2VZT2Zmc2V0fSxpPWw7ZS5pdGVyPGUuaW1nW2ZdJiYwPGk7KXt2YXIgcj1lLmltZ1tlLml0ZXJdO1oocixVKChuPXIpW29dLG4pfHxVKG4uY3VycmVudFNyYyxuKXx8VShuLnNyYyxuKSx0KSxlLml0ZXIrPTEsaS09MX1yZXR1cm4gZS5pbWdbZl08PWUuaXRlcn1mdW5jdGlvbiBLKGUpe3ZhciBuPVtdLGk9MCxyPTAsbz1DLHQ9cChlLnkvcyksYT15KChlLnkrbS5pbm5lckhlaWdodCkvcyk7ai5zbGljZSh0LGEpLmZvckVhY2goZnVuY3Rpb24oZSl7KGUuZWxlbXN8fFtdKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2UubHQgaW4gbnx8KG5bZS5sdF09e30pLGUuaWQgaW4gbltlLmx0XXx8KGkrPShuW2UubHRdW2UuaWRdPWUpLmEpfSl9KSxTKG4pLmZvckVhY2goZnVuY3Rpb24oZSl7UyhlKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPTEtci9pLHQ9dihlLmx0LG8pO0QrPW4qKHQtbyksbz10LGZ1bmN0aW9uKGUsbil7Zm9yKDtXPD0xJiZXLS4wMTw9ZTspZWUoXCJ2aXN1YWxseUxvYWRlZFwiKygxMDAqVykudG9GaXhlZCgwKSxuKSxXKz1ffSgocis9ZS5hKS9pLGUubHQpfSl9KSxDPWUudC13LExbZl08PTEmJihlZShcInNwZWVkSW5kZXhcIixEKSxlZShcInZpc3VhbGx5TG9hZGVkMFwiLFYpKSxQJiYoUD0hMSxlZShcImF0ZlNwZWVkSW5kZXhcIixEKSl9ZnVuY3Rpb24gUShlKXtmb3IodmFyIG49ZVt1XSx0PWc7biYmMDx0Oyl7aWYobltjXXx8MD09PW5bY10pcmV0dXJuIHYobltjXSxWKTtuPW4ucGFyZW50RWxlbWVudCx0LT0xfX1mdW5jdGlvbiBVKGUsbil7aWYoZSl7aWYoIWUuaW5kZXhPZihcImRhdGE6XCIpKXJldHVybiBRKG4pO3ZhciB0PXhbcl0oZSl8fFtdO2lmKDA8dFtmXSlyZXR1cm4gdih5KHRbMF0ucmVzcG9uc2VFbmR8fDApLFYpfX1mdW5jdGlvbiBaKGUsbix0KXtpZigobnx8MD09PW4pJiYhZVtkXSl7dmFyIGk9ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxyPWkud2lkdGgqaS5oZWlnaHQsbz1pLndpZHRoLzIsYT1GKys7aWYoMCE9ciYmIShvPGkucmlnaHQtdC53fHxpLnJpZ2h0PG8pKXtmb3IodmFyIGY9e2U6ZSxsdDpuLGE6cixpZDphfSx1PXAoKGkudG9wK3QueSkvcyksYz15KChpLnRvcCt0LnkraS5oZWlnaHQpL3MpLGw9dTtsPD1jO2wrKylsIGluIGp8fChqW2xdPXtlbGVtczpbXSxsdDowfSksaltsXS5lbGVtcy5wdXNoKGYpO2VbZF09YX19fWZ1bmN0aW9uIGVlKGUsbil7VChcIm1hcmtcIixlLHcreShufHwwKSl9ZnVuY3Rpb24gbmUoKXskfHwoYihcImdldEJ1ZmZlcnNcIixxKSwkPTEpfXcmJlMmJnhbcl0mJihiKFwicmVnaXN0ZXJMaXN0ZW5lclwiLGZ1bmN0aW9uKGUpe1gmJihjbGVhclRpbWVvdXQoUiksUj1uKG5lLDI1MDApKX0pLHQub25jZShcIiR1bmxvYWRcIixmdW5jdGlvbigpe1k9MSxuZSgpfSksdC5vbmNlKFwiJGxvYWRcIixmdW5jdGlvbigpe1g9MSxSPW4obmUsMjUwMCl9KSx0Lm9uY2UoXCIkdGltaW5nOmZ1bmN0aW9uYWxcIixuZSkpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbihlKXt2YXIgbT0hIWUuY29uZmlnW1wiTENQLmVsZW1lbnREZWR1cFwiXSx0PSExLG49ZShcIlBhZ2VUaW1pbmdcIikscj1lLmdsb2JhbC5QZXJmb3JtYW5jZU9ic2VydmVyLGE9ZS5nbG9iYWwucGVyZm9ybWFuY2U7ZnVuY3Rpb24gaSgpe3JldHVybiBhLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnR9ZnVuY3Rpb24gbygpe3R8fGZ1bmN0aW9uKG8pe3ZhciBsPW5ldyByKGZ1bmN0aW9uKGUpe3ZhciB0PWUuZ2V0RW50cmllcygpO2lmKDAhPT10Lmxlbmd0aCl7dmFyIG49dFt0Lmxlbmd0aC0xXTtpZihtJiZcIlwiIT09bi5pZCYmbi5lbGVtZW50JiZcIklNR1wiPT09bi5lbGVtZW50LnRhZ05hbWUpe2Zvcih2YXIgcj17fSxhPXRbMF0saT0wO2k8dC5sZW5ndGg7aSsrKXRbaV0uaWQgaW4gcnx8KFwiXCIhPT10W2ldLmlkJiYoclt0W2ldLmlkXT0hMCksYS5zdGFydFRpbWU8dFtpXS5zdGFydFRpbWUmJihhPXRbaV0pKTtuPWF9bC5kaXNjb25uZWN0KCksbyh7c3RhcnRUaW1lOm4uc3RhcnRUaW1lLHJlbmRlclRpbWU6bi5yZW5kZXJUaW1lLGxvYWRUaW1lOm4ubG9hZFRpbWV9KX19KTt0cnl7bC5vYnNlcnZlKHt0eXBlOlwibGFyZ2VzdC1jb250ZW50ZnVsLXBhaW50XCIsYnVmZmVyZWQ6ITB9KX1jYXRjaChlKXt9fShmdW5jdGlvbihlKXtlJiYodD0hMCxuKFwibWFya1wiLFwibGFyZ2VzdENvbnRlbnRmdWxQYWludFwiLE1hdGguZmxvb3IoZS5zdGFydFRpbWUraSgpKSksZS5yZW5kZXJUaW1lJiZuKFwibWFya1wiLFwibGFyZ2VzdENvbnRlbnRmdWxQYWludC5yZW5kZXJcIixNYXRoLmZsb29yKGUucmVuZGVyVGltZStpKCkpKSxlLmxvYWRUaW1lJiZuKFwibWFya1wiLFwibGFyZ2VzdENvbnRlbnRmdWxQYWludC5sb2FkXCIsTWF0aC5mbG9vcihlLmxvYWRUaW1lK2koKSkpKX0pfXImJmEmJmEudGltaW5nJiYoZS5vbmNlKFwiJHVubG9hZFwiLG8pLGUub25jZShcIiRsb2FkXCIsbyksZS5yZWdpc3RlcihcIkxhcmdlc3RDb250ZW50ZnVsUGFpbnRcIix7fSkpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbihyKXt2YXIgZT1yKFwiTWV0cmljc1wiLHtwcm9kdWNlcklkOlwiY3NhXCJ9KSxuPXIuZ2xvYmFsLlBlcmZvcm1hbmNlT2JzZXJ2ZXI7biYmKG49bmV3IG4oZnVuY3Rpb24ocil7dmFyIHQ9ci5nZXRFbnRyaWVzKCk7aWYoMD09PXQubGVuZ3RofHwhdFswXS5wcm9jZXNzaW5nU3RhcnR8fCF0WzBdLnN0YXJ0VGltZSlyZXR1cm47IWZ1bmN0aW9uKHIpe3I9cnx8MCxuLmRpc2Nvbm5lY3QoKSwwPD1yP2UoXCJyZWNvcmRNZXRyaWNcIixcImZpcnN0SW5wdXREZWxheVwiLHIpOmUoXCJyZWNvcmRNZXRyaWNcIixcImZpcnN0SW5wdXREZWxheS5pbnZhbGlkXCIsMSl9KHRbMF0ucHJvY2Vzc2luZ1N0YXJ0LXRbMF0uc3RhcnRUaW1lKX0pLGZ1bmN0aW9uKCl7dHJ5e24ub2JzZXJ2ZSh7dHlwZTpcImZpcnN0LWlucHV0XCIsYnVmZmVyZWQ6ITB9KX1jYXRjaChyKXt9fSgpKX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24oZCl7dmFyIGU9XCJNZXRyaWNzXCIsdT0wO2Z1bmN0aW9uIHIoZSl7dmFyIGkscj1lLnByb2R1Y2VySWQsbj1lLmxvZ2dlcix0PW58fGQoXCJFdmVudHNcIix7cHJvZHVjZXJJZDpyfSksYz0oZXx8e30pLmRpbWVuc2lvbnN8fHt9LG89LTE7aWYoIXImJiFuKXJldHVybiBkLmVycm9yKFwiRWl0aGVyIGEgcHJvZHVjZXIgaWQgb3IgY3VzdG9tIGxvZ2dlciBtdXN0IGJlIGRlZmluZWRcIik7ZnVuY3Rpb24gcygpe28hPT11JiYoaT1kLlVVSUQoKSxvPXUpfXRoaXMucmVjb3JkTWV0cmljPWZ1bmN0aW9uKHIsbil7cygpLHQoXCJsb2dcIix7bWVzc2FnZUlkOmksc2NoZW1hSWQ6ZS5zY2hlbWFJZHx8XCI8bnM+Lk1ldHJpYy4zXCIsbWV0cmljczp7fSxkaW1lbnNpb25zOmMsX19tZXJnZTpmdW5jdGlvbihlKXtlLm1ldHJpY3Nbcl09bn19LGUubG9nT3B0aW9uc3x8e2VudDp7cGFnZTpbXCJwYWdlVHlwZVwiLFwic3ViUGFnZVR5cGVcIixcInJlcXVlc3RJZFwiXX19KX19ZC5jb25maWdbXCJLaWxsU3dpdGNoLlwiK2VdfHwobmV3IHIoe3Byb2R1Y2VySWQ6XCJjc2FcIn0pLnJlY29yZE1ldHJpYyhcImJhc2VsaW5lTWV0cmljRXZlbnRcIiwxKSxkLm9uKFwiJGJlZm9yZVBhZ2VUcmFuc2l0aW9uXCIsZnVuY3Rpb24oKXt1Kyt9KSxkLnJlZ2lzdGVyKGUse2luc3RhbmNlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgcihlfHx7fSl9fSkpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbih0KXt2YXIgYSxyPSh0Lmdsb2JhbC5wZXJmb3JtYW5jZXx8e30pLnRpbWluZyxzPShyfHx7fSkubmF2aWdhdGlvblN0YXJ0fHx0LnRpbWUoKTtmdW5jdGlvbiBlKCl7YT10LlVVSUQoKX1mdW5jdGlvbiBuKGkpe3ZhciByPShpPWl8fHt9KS5wcm9kdWNlcklkLGU9aS5sb2dnZXIsbz1lfHx0KFwiRXZlbnRzXCIse3Byb2R1Y2VySWQ6cn0pO2lmKCFyJiYhZSlyZXR1cm4gdC5lcnJvcihcIkVpdGhlciBhIHByb2R1Y2VyIGlkIG9yIGN1c3RvbSBsb2dnZXIgbXVzdCBiZSBkZWZpbmVkXCIpO3RoaXMubWFyaz1mdW5jdGlvbihlLHIpe3ZhciBuPSh2b2lkIDA9PT1yP3QudGltZSgpOnIpLXM7byhcImxvZ1wiLHttZXNzYWdlSWQ6YSxzY2hlbWFJZDppLnNjaGVtYUlkfHxcIjxucz4uVGltZXIuMVwiLG1hcmtlcnM6e30sX19tZXJnZTpmdW5jdGlvbihyKXtyLm1hcmtlcnNbZV09bn19LGkubG9nT3B0aW9ucyl9fXImJihlKCksdC5vbihcIiRiZWZvcmVQYWdlVHJhbnNpdGlvblwiLGUpLHQucmVnaXN0ZXIoXCJUaW1lcnNcIix7aW5zdGFuY2U6ZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBuKHJ8fHt9KX19KSl9KTtjc2EucGx1Z2luKGZ1bmN0aW9uKHQpe3ZhciBlPVwidGFrZVJlY29yZHNcIixpPVwiZGlzY29ubmVjdFwiLG49XCJmdW5jdGlvblwiLG89dChcIk1ldHJpY3NcIix7cHJvZHVjZXJJZDpcImNzYVwifSksYz10KFwiUGFnZVRpbWluZ1wiKSxhPXQuZ2xvYmFsLHU9dC50aW1lb3V0LHI9dC5vbixmPWEuUGVyZm9ybWFuY2VPYnNlcnZlcixtPTAsbD0hMSxzPTAsZD1hLnBlcmZvcm1hbmNlLGg9YS5kb2N1bWVudCx2PW51bGwseT0hMSxnPXQuYmxhbms7ZnVuY3Rpb24gcCgpe2x8fChsPSEwLGNsZWFyVGltZW91dCh2KSx0eXBlb2YgZltlXT09PW4mJmZbZV0oKSx0eXBlb2YgZltpXT09PW4mJmZbaV0oKSxvKFwicmVjb3JkTWV0cmljXCIsXCJkb2N1bWVudEN1bXVsYXRpdmVMYXlvdXRTaGlmdFwiLG0pLGMoXCJtYXJrXCIsXCJjdW11bGF0aXZlTGF5b3V0U2hpZnRMYXN0VGltZXN0YW1wXCIsTWF0aC5mbG9vcihzK2QudGltaW5nLm5hdmlnYXRpb25TdGFydCkpKX1mJiZkJiZkLnRpbWluZyYmaCYmKGY9bmV3IGYoZnVuY3Rpb24odCl7diYmY2xlYXJUaW1lb3V0KHYpO3QuZ2V0RW50cmllcygpLmZvckVhY2goZnVuY3Rpb24odCl7dC5oYWRSZWNlbnRJbnB1dHx8KG0rPXQudmFsdWUsczx0LnN0YXJ0VGltZSYmKHM9dC5zdGFydFRpbWUpKX0pLHY9dShwLDVlMyl9KSxmdW5jdGlvbigpe3RyeXtmLm9ic2VydmUoe3R5cGU6XCJsYXlvdXQtc2hpZnRcIixidWZmZXJlZDohMH0pLHY9dShwLDVlMyl9Y2F0Y2godCl7fX0oKSxnPXIoaCxcImNsaWNrXCIsZnVuY3Rpb24odCl7eXx8KHk9ITAsbyhcInJlY29yZE1ldHJpY1wiLFwiZG9jdW1lbnRDdW11bGF0aXZlTGF5b3V0U2hpZnRUb0ZpcnN0SW5wdXRcIixtKSxnKCkpfSkscihoLFwidmlzaWJpbGl0eWNoYW5nZVwiLGZ1bmN0aW9uKCl7XCJoaWRkZW5cIj09PWgudmlzaWJpbGl0eVN0YXRlJiZwKCl9KSx0Lm9uY2UoXCIkdW5sb2FkXCIscCkpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbihlKXt2YXIgdCxuPWUuZ2xvYmFsLHI9bi5QZXJmb3JtYW5jZU9ic2VydmVyLGM9ZShcIk1ldHJpY3NcIix7cHJvZHVjZXJJZDpcImNzYVwifSksbz0wLGk9MCxhPS0xLGw9bi5NYXRoLGY9bC5tYXgsdT1sLmNlaWw7aWYocil7dD1uZXcgcihmdW5jdGlvbihlKXtlLmdldEVudHJpZXMoKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PWUuZHVyYXRpb247bys9dCxpKz10LGE9Zih0LGEpfSl9KTt0cnl7dC5vYnNlcnZlKHt0eXBlOlwibG9uZ3Rhc2tcIixidWZmZXJlZDohMH0pfWNhdGNoKGUpe310PW5ldyByKGZ1bmN0aW9uKGUpezA8ZS5nZXRFbnRyaWVzKCkubGVuZ3RoJiYoaT0wLGE9LTEpfSk7dHJ5e3Qub2JzZXJ2ZSh7dHlwZTpcImxhcmdlc3QtY29udGVudGZ1bC1wYWludFwiLGJ1ZmZlcmVkOiEwfSl9Y2F0Y2goZSl7fWUub24oXCIkdW5sb2FkXCIsZyksZS5vbihcIiRiZWZvcmVQYWdlVHJhbnNpdGlvblwiLGcpfWZ1bmN0aW9uIGcoKXtjKFwicmVjb3JkTWV0cmljXCIsXCJ0b3RhbEJsb2NraW5nVGltZVwiLHUoaXx8MCkpLGMoXCJyZWNvcmRNZXRyaWNcIixcInRvdGFsQmxvY2tpbmdUaW1lSW5jbExDUFwiLHUob3x8MCkpLGMoXCJyZWNvcmRNZXRyaWNcIixcIm1heEJsb2NraW5nVGltZVwiLHUoYXx8MCkpLGk9bz0wLGE9LTF9fSk7Y3NhLnBsdWdpbihmdW5jdGlvbihyKXt2YXIgZT1cIkNhY2hlRGV0ZWN0aW9uXCIsbz1cImNzYS1jdG9rZW4tXCIsbj1yLnN0b3JlLHQ9ci5kZWxldGVTdG9yZWQsYz1yLmNvbmZpZyxhPWNbZStcIi5SZXF1ZXN0SURcIl0saT1jW2UrXCIuQ2FsbGJhY2tcIl0scz1yLmdsb2JhbCx1PXMuZG9jdW1lbnR8fHt9LGQ9cy5EYXRlLGY9cihcIkV2ZW50c1wiKSxsPXIoXCJFdmVudHNcIix7cHJvZHVjZXJJZDpcImNzYVwifSk7ZnVuY3Rpb24gcChlKXt0cnl7dmFyIG49dS5jb29raWUubWF0Y2goUmVnRXhwKFwiKF58IClcIitlK1wiPShbXjtdKylcIikpO3JldHVybiBuJiZuWzJdLnRyaW0oKX1jYXRjaChlKXt9fSFmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKCl7dmFyIGU9cChcImNkbi1yaWRcIik7aWYoZSlyZXR1cm57cjplLHM6XCJjZG5cIn19KCl8fGZ1bmN0aW9uKCl7aWYoci5zdG9yZShvK2EpKXJldHVybntyOnIuVVVJRCgpLnRvVXBwZXJDYXNlKCkucmVwbGFjZSgvLS9nLFwiXCIpLnNsaWNlKDAsMjApLHM6XCJkZXZpY2VcIn19KCl8fHt9LG49ZS5yLGM9ZS5zO2lmKCEhbil7dmFyIHQ9cChcInNlc3Npb24taWRcIik7IWZ1bmN0aW9uKGUsbixjLHQpe2YoXCJzZXRFbnRpdHlcIix7cGFnZTp7cGFnZVNvdXJjZTpcImNhY2hlXCIscmVxdWVzdElkOmUsY2FjaGVSZXF1ZXN0SWQ6YSxjYWNoZVNvdXJjZTp0fSxzZXNzaW9uOntpZDpjfX0pfShuLDAsdCxjKSxcImRldmljZVwiPT09YyYmbChcImxvZ1wiLHtzY2hlbWFJZDpcIjxucz4uQ2FjaGVJbXByZXNzaW9uLjFcIn0se2VudDpcImFsbFwifSksaSYmaShuLHQsYyl9fSgpLG4obythLGQubm93KCkrMzZlNSksci5vbmNlKFwiJGxvYWRcIixmdW5jdGlvbigpe3ZhciBjPWQubm93KCk7dChmdW5jdGlvbihlLG4pe3JldHVybiAwPT1lLmluZGV4T2YobykmJnBhcnNlSW50KG4pPGN9KX0pfSk7Y3NhLnBsdWdpbihmdW5jdGlvbih1KXt2YXIgaSx0PVwiQ29udGVudFwiLGU9XCJNdXRhdGlvbk9ic2VydmVyXCIsbj1cImFkZGVkTm9kZXNcIixhPVwicXVlcnlTZWxlY3RvckFsbFwiLHM9XCJtYXRjaGVzXCIscj1cImdldEF0dHJpYnV0ZU5hbWVzXCIsbz1cImdldEF0dHJpYnV0ZVwiLGY9XCJkYXRhc2V0XCIsYz1cIndpZGdldFwiLGw9XCJwcm9kdWNlcklkXCIsZD17ZW50OntlbGVtZW50OjEscGFnZTpbXCJwYWdlVHlwZVwiLFwic3ViUGFnZVR5cGVcIixcInJlcXVlc3RJZFwiXX19LGg9NSxnPXUuY29uZmlnW3QrXCIuQnViYmxlVXAuU2VhcmNoRGVwdGhcIl18fDIwLG09XCJjc2FDXCIscD1tK1wiSWRcIix5PXt9LHY9dS5jb25maWcsYj12W3QrXCIuU2VsZWN0b3JzXCJdfHxbXSxFPXZbdCtcIi5XaGl0ZWxpc3RlZEF0dHJpYnV0ZXNcIl18fHtocmVmOjEsY2xhc3M6MX0sST12W3QrXCIuRW5hYmxlQ29udGVudEVudGl0aWVzXCJdLHc9dlt0K1wiLkVuYWJsZUNvbnRlbnRSZW5kZXJzXCJdLEM9dltcIktpbGxTd2l0Y2guQ29udGVudFJlbmRlcmVkXCJdLEE9dS5nbG9iYWwsVT1BLmRvY3VtZW50fHx7fSxrPVUuZG9jdW1lbnRFbGVtZW50LEw9QS5IVE1MRWxlbWVudCxOPXt9LE89W10sUz1mdW5jdGlvbih0LGUsbixpKXt2YXIgcj10aGlzLG89dShcIkV2ZW50c1wiLHtwcm9kdWNlcklkOnR8fFwiY3NhXCJ9KTtlLnR5cGU9ZS50eXBlfHxjLHIuaWQ9ZS5pZCxyLmw9byxyLmU9ZSxyLmVsPW4sci5ydD1pLHIuZGxvPWQsci5sb2c9ZnVuY3Rpb24odCxlKXtvKFwibG9nXCIsdCxlfHxkKX0sZS5pZCYmbyhcInNldEVudGl0eVwiLHtlbGVtZW50OmV9KX0sRD1TLnByb3RvdHlwZTtmdW5jdGlvbiBSKHQpe3ZhciBlPSh0PXR8fHt9KS5lbGVtZW50LG49dC50YXJnZXQ7cmV0dXJuIGU/ZnVuY3Rpb24odCxlKXt2YXIgbjtuPXQgaW5zdGFuY2VvZiBMP0godCl8fF8oZVtsXSx0LEssdS50aW1lKCkpOk5bdC5pZF18fEIoZVtsXSwwLHQsdS50aW1lKCkpO3JldHVybiBufShlLHQpOm4/VChuKTp1LmVycm9yKFwiTm8gZWxlbWVudCBvciB0YXJnZXQgYXJndW1lbnQgcHJvdmlkZWQuXCIpfWZ1bmN0aW9uIFQodCl7dmFyIGU9ZnVuY3Rpb24odCl7dmFyIGU9bnVsbCxuPTA7Zm9yKDt0JiZuPGc7KXtpZihuKyssaih0LHApKXtlPXQ7YnJlYWt9dD10LnBhcmVudEVsZW1lbnR9cmV0dXJuIGV9KHQpO3JldHVybiBlP0goZSk6bmV3IFMoXCJjc2FcIix7aWQ6bnVsbH0sbnVsbCx1LnRpbWUoKSl9ZnVuY3Rpb24gaih0LGUpe2lmKHQmJnQuZGF0YXNldClyZXR1cm4gdC5kYXRhc2V0W2VdfWZ1bmN0aW9uIHEodCxlLG4pe08ucHVzaCh7bjpuLGU6dCx0OmV9KSxNKCl9ZnVuY3Rpb24geCgpe2Zvcih2YXIgdD11LnRpbWUoKSxlPTA7MDxPLmxlbmd0aDspe3ZhciBuPU8uc2hpZnQoKTtpZih5W24ubl0obi5lLG4udCksKytlJTEwPT0wJiZ1LnRpbWUoKS10PmgpYnJlYWt9aT0wLE8ubGVuZ3RoJiZNKCl9ZnVuY3Rpb24gTSgpe2k9aXx8dS5yYWYoeCl9ZnVuY3Rpb24gJCh0LGUsbil7cmV0dXJue246dCxlOmUsdDpufX1mdW5jdGlvbiBfKHQsZSxuLGkpe3ZhciByPXUuVVVJRCgpLG89e2lkOnJ9LGM9VChlKTtyZXR1cm4gZVtmXVtwXT1yLG4obyxlKSxjJiZjLmlkJiYoby5wYXJlbnRJZD1jLmlkKSxCKHQsZSxvLGkpfWZ1bmN0aW9uIEIodCxlLG4saSl7SSYmKG4uc2NoZW1hSWQ9XCI8bnM+LkNvbnRlbnRFbnRpdHkuMlwiKSxuLmlkPW4uaWR8fHUuVVVJRCgpO3ZhciByPW5ldyBTKHQsbixlLGkpO3JldHVybiB3JiYhQyYmci5sb2coe3NjaGVtYUlkOlwiPG5zPi5Db250ZW50UmVuZGVyLjFcIix0aW1lc3RhbXA6aX0pLHUuZW1pdChcIiRjb250ZW50LnJlZ2lzdGVyXCIsciksTltuLmlkXT1yfWZ1bmN0aW9uIEgodCl7cmV0dXJuIE5bKHRbZl18fHt9KVtwXV19ZnVuY3Rpb24gSyh0LGUpe3IgaW4gZSYmKGZ1bmN0aW9uKG4saSl7T2JqZWN0LmtleXMobltmXSkuZm9yRWFjaChmdW5jdGlvbih0KXtpZighdC5pbmRleE9mKG0pJiZtLmxlbmd0aDx0Lmxlbmd0aCl7dmFyIGU9ZnVuY3Rpb24odCl7cmV0dXJuKHRbMF18fFwiXCIpLnRvTG93ZXJDYXNlKCkrdC5zbGljZSgxKX0odC5zbGljZShtLmxlbmd0aCkpO2lbZV09bltmXVt0XX19KX0oZSx0KSxmdW5jdGlvbihlLG4peyhlW3JdKCl8fFtdKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3QgaW4gRSYmKG5bdF09ZVtvXSh0KSl9KX0oZSx0KSl9ayYmVVthXSYmQVtlXSYmKGIucHVzaCh7c2VsZWN0b3I6XCIqW2RhdGEtY3NhLWMtdHlwZV1cIixlbnRpdHk6S30pLGIucHVzaCh7c2VsZWN0b3I6XCIuY2Vsd2lkZ2V0XCIsZW50aXR5OmZ1bmN0aW9uKHQsZSl7Syh0LGUpLHQuc2xvdElkPXQuc2xvdElkfHxlW29dKFwiY2VsX3dpZGdldF9pZFwiKXx8ZS5pZCx0LnR5cGU9dC50eXBlfHxjfX0pLHlbMV09ZnVuY3Rpb24odCxlKXt0LmZvckVhY2goZnVuY3Rpb24odCl7dFtuXSYmdFtuXS5jb25zdHJ1Y3RvciYmXCJOb2RlTGlzdFwiPT09dFtuXS5jb25zdHJ1Y3Rvci5uYW1lJiZBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKHRbbl0sZnVuY3Rpb24odCl7Ty51bnNoaWZ0KCQoMix0LGUpKX0pfSl9LHlbMl09ZnVuY3Rpb24obyxjKXthIGluIG8mJnMgaW4gbyYmYi5mb3JFYWNoKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnNlbGVjdG9yLG49b1tzXShlKSxpPW9bYV0oZSkscj1pLmxlbmd0aC0xOzA8PXI7ci0tKU8udW5zaGlmdCgkKDMse2U6aVtyXSxzOnR9LGMpKTtuJiZPLnVuc2hpZnQoJCgzLHtlOm8sczp0fSxjKSl9KX0seVszXT1mdW5jdGlvbih0LGUpe3ZhciBuPXQuZTtIKG4pfHxfKFwiY3NhXCIsbix0LnMuZW50aXR5LGUpfSx5WzRdPWZ1bmN0aW9uKCl7dS5yZWdpc3Rlcih0LHtpbnN0YW5jZTpSfSl9LG5ldyBBW2VdKGZ1bmN0aW9uKHQpe3EodCx1LnRpbWUoKSwxKX0pLm9ic2VydmUoayx7Y2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KSxxKGssdS50aW1lKCksMikscShudWxsLHUudGltZSgpLDQpLHUub24oXCIkY29udGVudC5leHBvcnRcIixmdW5jdGlvbihlKXtPYmplY3Qua2V5cyhlKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe0RbdF09ZVt0XX0pfSkpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbihuKXt2YXIgaSx0PVwiQ29udGVudEltcHJlc3Npb25zXCIsZT1cIktpbGxTd2l0Y2guXCIsbz1cIkludGVyc2VjdGlvbk9ic2VydmVyXCIscj1cImdldEF0dHJpYnV0ZVwiLHM9XCJkYXRhc2V0XCIsYz1cImludGVyc2VjdGlvblJhdGlvXCIsYT1cImNzYUNJZFwiLG09MWUzLGw9bi5nbG9iYWwsZj1uLmNvbmZpZyx1PWZbZSt0XSxnPWZbZSt0K1wiLkNvbnRlbnRWaWV3c1wiXSx2PSgobC5wZXJmb3JtYW5jZXx8e30pLnRpbWluZ3x8e30pLm5hdmlnYXRpb25TdGFydHx8bi50aW1lKCksZD17fTtmdW5jdGlvbiBoKHQpe3QmJih0LnY9MSxmdW5jdGlvbih0KXt0LnZ0PW4udGltZSgpLHQuZWwubG9nKHtzY2hlbWFJZDpcIjxucz4uQ29udGVudFZpZXcuM1wiLHRpbWVUb1ZpZXdlZDp0LnZ0LXQuZWwucnQscGFnZUZpcnN0UGFpbnRUb0VsZW1lbnRWaWV3ZWQ6dC52dC12fSl9KHQpKX1mdW5jdGlvbiBJKHQpe3QmJiF0Lml0JiYodC5pPW4udGltZSgpLXQuaXM+bSxmdW5jdGlvbih0KXt0Lml0PW4udGltZSgpLHQuZWwubG9nKHtzY2hlbWFJZDpcIjxucz4uQ29udGVudEltcHJlc3NlZC4yXCIsdGltZVRvSW1wcmVzc2VkOnQuaXQtdC5lbC5ydCxwYWdlRmlyc3RQYWludFRvRWxlbWVudEltcHJlc3NlZDp0Lml0LXZ9KX0odCkpfSF1JiZsW29dJiYoaT1uZXcgbFtvXShmdW5jdGlvbih0KXt0LmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9ZnVuY3Rpb24odCl7aWYodCYmdFtyXSlyZXR1cm4gZFt0W3NdW2FdXX0odC50YXJnZXQpO2lmKGUpe3ZhciBpPXQuaW50ZXJzZWN0aW9uUmVjdDt0LmlzSW50ZXJzZWN0aW5nJiYwPGkud2lkdGgmJjA8aS5oZWlnaHQmJihnfHxlLnZ8fGgoZSksLjU8PXRbY10mJiFlLmlzJiYoZS5pcz1uLnRpbWUoKSxlLnRpbWVyPW4udGltZW91dChmdW5jdGlvbigpe0koZSl9LG0pKSksdFtjXTwuNSYmIWUuaXQmJmUudGltZXImJihsLmNsZWFyVGltZW91dChlLnRpbWVyKSxlLmlzPTAsZS50aW1lcj0wKX19KX0se3RocmVzaG9sZDpbMCwuNV19KSxuLm9uKFwiJGNvbnRlbnQucmVnaXN0ZXJcIixmdW5jdGlvbih0KXt2YXIgZT10LmVsO2UmJihkW3QuaWRdPXtlbDp0LHY6MCxpOjAsaXM6MCx2dDowLGl0OjB9LGkub2JzZXJ2ZShlKSl9KSl9KTtjc2EucGx1Z2luKGZ1bmN0aW9uKGUpe2UuY29uZmlnW1wiS2lsbFN3aXRjaC5Db250ZW50TGF0ZW5jeVwiXXx8ZS5lbWl0KFwiJGNvbnRlbnQuZXhwb3J0XCIse21hcms6ZnVuY3Rpb24odCxuKXt2YXIgbz10aGlzO28udHx8KG8udD1lKFwiVGltZXJzXCIse2xvZ2dlcjpvLmwsc2NoZW1hSWQ6XCI8bnM+LkNvbnRlbnRMYXRlbmN5LjFcIixsb2dPcHRpb25zOm8uZGxvfSkpLG8udChcIm1hcmtcIix0LG4pfX0pfSk7Y3NhLnBsdWdpbihmdW5jdGlvbihvKXt2YXIgdCxuLGk9XCJub3JtYWxcIixzPVwicmVsb2FkXCIsZT1cImhpc3RvcnlcIixkPVwibmV3LXRhYlwiLGE9XCJhamF4XCIscj0xLGM9Mix1PVwibGFzdEFjdGl2ZVwiLGw9XCJsYXN0SW50ZXJhY3Rpb25cIixmPVwidXNlZFwiLHA9XCJjc2EtdGFiYmVkLWJyb3dzaW5nXCIsZz1cInZpc2liaWxpdHlTdGF0ZVwiLHY9e1wiYmFjay1tZW1vcnktY2FjaGVcIjoxLFwidGFiLXN3aXRjaFwiOjEsXCJoaXN0b3J5LW5hdmlnYXRpb24tcGFnZS1jYWNoZVwiOjF9LGI9XCI8bnM+LlRhYmJlZEJyb3dzaW5nLjJcIixtPVwidmlzaWJsZVwiLHk9by5nbG9iYWwsST1vKFwiRXZlbnRzXCIse3Byb2R1Y2VySWQ6XCJjc2FcIn0pLGg9eS5sb2NhdGlvbnx8e30sVD15LmRvY3VtZW50LHc9eS5KU09OLHo9KCh5LnBlcmZvcm1hbmNlfHx7fSkubmF2aWdhdGlvbnx8e30pLnR5cGUsUD1vLnN0b3JlLFM9by5vbixrPW8uc3RvcmFnZVN1cHBvcnQoKSx4PSExLEE9e30sQz17fSxPPXt9LCQ9e30saj0hMSxxPSExLEI9ITE7ZnVuY3Rpb24gRShpKXt0cnl7cmV0dXJuIHcucGFyc2UoUChwLHZvaWQgMCx7c2Vzc2lvbjppfSl8fFwie31cIil8fHt9fWNhdGNoKGkpe28uZXJyb3IoJ0NvdWxkIG5vdCBwYXJzZSBzdG9yYWdlIHZhbHVlIGZvciBrZXkgXCInK3ArJ1wiOiAnK2kpfXJldHVybnt9fWZ1bmN0aW9uIEooaSx0KXtQKHAsdy5zdHJpbmdpZnkodHx8e30pLHtzZXNzaW9uOml9KX1mdW5jdGlvbiBOKGkpe3ZhciB0PUMudGlkfHxpLmlkLG49QVt1XXx8e307bi50aWQ9PT10JiYobi5waWQ9aS5pZCksJD17cGlkOmkuaWQsdGlkOnQsbGFzdEludGVyYWN0aW9uOkNbbF18fHt9LGluaXRpYWxpemVkOiEwfSxPPXtsYXN0QWN0aXZlOm4sbGFzdEludGVyYWN0aW9uOkFbbF18fHt9LHRpbWU6by50aW1lKCl9fWZ1bmN0aW9uIEQoaSl7dmFyIHQ9aT09PWQsbj1ULnJlZmVycmVyLGU9IShuJiZuLmxlbmd0aCl8fCF+bi5pbmRleE9mKGgub3JpZ2lufHxcIlwiKSxhPXQmJmUscj17dHlwZTppLHRvVGFiSWQ6JC50aWQsdG9QYWdlSWQ6JC5waWQsdHJhbnNpdFRpbWU6by50aW1lKCktQS50aW1lfHxudWxsfTthfHxmdW5jdGlvbihpLHQsbil7dmFyIGU9aT09PXMsYT10P0FbdV18fHt9OkMscj1BW2xdfHx7fSxvPUNbbF18fHt9LGQ9dD9yOm87bi5mcm9tVGFiSWQ9YS50aWQsbi5mcm9tUGFnZUlkPWEucGlkLGV8fCFkLmlkfHxkW2ZdfHwobi5pbnRlcmFjdGlvbklkPWQuaWR8fG51bGwsci5pZD09PWQuaWQmJihyW2ZdPSEwKSxvLmlkPT09ZC5pZCYmKG9bZl09ITApKX0oaSx0LHIpLEkoXCJsb2dcIix7bmF2aWdhdGlvbjpyLHNjaGVtYUlkOmJ9LHtlbnQ6e3BhZ2U6W1wicGFnZVR5cGVcIixcInN1YlBhZ2VUeXBlXCIsXCJyZXF1ZXN0SWRcIl19fSl9ZnVuY3Rpb24gRihpKXtCPWZ1bmN0aW9uKGkpe3JldHVybiBpJiZpIGluIHZ9KGkudHJhbnNpdGlvblR5cGUpLGZ1bmN0aW9uKCl7QT1FKCExKSxDPUUoITApO3ZhciBpPUFbbF0sdD1DW2xdLG49ITEsZT0hMTtpJiZ0JiZpLmlkPT09dC5pZCYmaVtmXSE9PXRbZl0mJihuPSFpW2ZdLGU9IXRbZl0sdFtmXT1pW2ZdPSEwLG4mJkooITEsQSksZSYmSighMCxDKSl9KCksTihpKSxqPSEwLGZ1bmN0aW9uKGkpe3ZhciB0LG47dD1IKCksbj1LKCksKHR8fG4pJiZOKGkpfShpKX1mdW5jdGlvbiBHKCl7eCYmIUI/RChhKTooeD0hMCxEKHo9PT1jfHxCP2U6ej09PXI/Qy5pbml0aWFsaXplZD9zOmQ6Qy5pbml0aWFsaXplZD9pOmQpKX1mdW5jdGlvbiBIKCl7cmV0dXJuISghanx8IXQpJiYoQ1tsXT17aWQ6dC5tZXNzYWdlSWQsdXNlZDohKEFbbF09e2lkOnQubWVzc2FnZUlkLHVzZWQ6ITF9KX0sISh0PW51bGwpKX1mdW5jdGlvbiBLKCl7dmFyIGk9ITE7aWYocT1UW2ddPT09bSxqKXt2YXIgdD1BW3VdfHx7fTtpPWZ1bmN0aW9uKGksdCxuKXt2YXIgZT0hMSxhPWlbdV07cmV0dXJuIHE/YSYmYS50aWQ9PT0kLnRpZCYmYVttXSYmYS5waWQ9PT1ufHwoaVt1XT17dmlzaWJsZTohMCxwaWQ6bix0aWQ6dH0sZT0hMCk6YSYmYS50aWQ9PT0kLnRpZCYmYVttXSYmKGU9IShhW21dPSExKSksZX0oQSxDLnRpZHx8dC50aWR8fCQudGlkLEMucGlkfHx0LnBpZHx8JC5waWQpfXJldHVybiBpfWsubG9jYWwmJmsuc2Vzc2lvbiYmdyYmVCYmZyBpbiBUJiYobj1mdW5jdGlvbigpe3RyeXtyZXR1cm4geS5zZWxmIT09eS50b3B9Y2F0Y2goaSl7cmV0dXJuITB9fSgpLFMoXCIkcGFnZUNoYW5nZVwiLGZ1bmN0aW9uKGkpe258fChGKGkpLEcoKSxKKCExLE8pLEooITAsJCksQz0kLEE9Tyl9LHtidWZmZXJlZDoxfSksUyhcIiRjb250ZW50LmludGVyYWN0aW9uXCIsZnVuY3Rpb24oaSl7dD1pLEgoKSYmKEooITEsQSksSighMCxDKSl9KSxTKFQsXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsZnVuY3Rpb24oKXshbiYmSygpJiZKKCExLEEpfSx7Y2FwdHVyZTohMSxwYXNzaXZlOiEwfSkpfSk7Y3NhLnBsdWdpbihmdW5jdGlvbihjKXt2YXIgZT1jKFwiTWV0cmljc1wiLHtwcm9kdWNlcklkOlwiY3NhXCJ9KTtjLm9uKGMuZ2xvYmFsLFwicGFnZXNob3dcIixmdW5jdGlvbihjKXtjJiZjLnBlcnNpc3RlZCYmZShcInJlY29yZE1ldHJpY1wiLFwiYmZDYWNoZVwiLDEpfSl9KTtjc2EucGx1Z2luKGZ1bmN0aW9uKGUpe3ZhciBuLGEsYyxyLHMsdCx1LGYsbCxwLG8saT1cImhhc0ZvY3VzXCIsbT1cImF2YWlsXCIsaD1cImNsaWVudFwiLGQ9XCJkb2N1bWVudFwiLGc9XCJpbm5lclwiLHY9XCJvZmZzZXRcIixiPVwic2NyZWVuXCIseT1cInNjcm9sbFwiLFQ9XCJXaWR0aFwiLHc9XCJIZWlnaHRcIixQPW0rVCxTPW0rdyxJPWgrVCx4PWgrdyxEPWcrVCxFPWcrdyxGPXYrVCxPPXYrdywkPXkrVCxxPXkrdyx6PWUoXCJFdmVudHNcIix7cHJvZHVjZXJJZDpcImNzYVwifSksQz1lLmdsb2JhbHx8e30sSD1lLnRpbWUsTT1lLm9uLFI9ZS5vbmNlLFc9Q1tkXXx8e30sWD1DW2JdfHx7fSxZPUMuTWF0aHx8e30saj1ZLmFicyxrPVkubWF4LEE9WS5jZWlsLEI9KChDLnBlcmZvcm1hbmNlfHx7fSkudGltaW5nfHx7fSkucmVzcG9uc2VTdGFydCxHPUMuUHx8e30sSj0xMDA7ZnVuY3Rpb24gSygpe2Y9YT1zPXQ9bixjPXI9MCx1PWw9cD1vPTB9ZnVuY3Rpb24gTCgpe3ZhciBlPUgoKSxuPWooQy5wYWdlWE9mZnNldHx8MCksdD1qKEMucGFnZVlPZmZzZXR8fDApLG89Q1tEXXx8MCxpPUNbRV18fDA7IWZ1bmN0aW9uKGUpe0ImJiFzJiYoZj1BKChzPWUpLUIpKX0oZSksZnVuY3Rpb24oZSxuLHQpe3ZhciBvPW4tYyxpPXQtcjthJiYhKGEmJmE8PWUpfHwoKG98fGkpJiYrK3UsYz1uLHI9dCxvLGkpLGE9ZStKfShlLG4sdCksZnVuY3Rpb24oZSxuLHQsbyxpKXtsPUEoayhsLHQraSkpLG4mJihwPUEoayhwLG4rbykpKX0oMCxuLHQsbyxpKX1mdW5jdGlvbiBOKCl7dCYmKG8rPUEoSCgpLXQpLHQ9bil9ZnVuY3Rpb24gUSgpe3Q9dHx8SCgpfWZ1bmN0aW9uIFUoZSxuLHQsbyl7bltlK1RdPUEodHx8MCksbltlK3ddPUEob3x8MCl9ZnVuY3Rpb24gVigpe3ZhciBlLG49ZnVuY3Rpb24oKXt2YXIgZT17fSxuPVcuZG9jdW1lbnRFbGVtZW50fHx7fSx0PVcuYm9keXx8e307cmV0dXJuIFUoXCJhdmFpbGFibGVTY3JlZW5cIixlLFhbUF0sWFtTXSksVShkLGUsayh0WyRdfHwwLHRbRl18fDAsbltJXXx8MCxuWyRdfHwwLG5bRl18fDApLGsodFtxXXx8MCx0W09dfHwwLG5beF18fDAsbltxXXx8MCxuW09dfHwwKSksVShiLGUsWC53aWR0aCxYLmhlaWdodCksVShcInZpZXdwb3J0XCIsZSxDW0RdLENbRV0pLGV9KCk7V1tpXSgpJiZOKCksZT17c2Nyb2xsQ291bnRzOnUscmVhY2hlZERlcHRoOmwsaG9yaXpvbnRhbFNjcm9sbERpc3RhbmNlOnAsZHdlbGxUaW1lOm99LFwibnVtYmVyXCI9PXR5cGVvZiBmJiYoZS5jbGllbnRUaW1lVG9GaXJzdFNjcm9sbD1mKSxLKCksQj1IKCksV1tpXSgpJiYodD1CKSx6KFwibG9nXCIse2FjdGl2aXR5OmUsZGltZW5zaW9uczpuLHNjaGVtYUlkOlwiPG5zPi5QYWdlSW50ZXJhY3Rpb25zU3VtbWFyeS4xXCJ9LHtlbnQ6e3BhZ2U6W1wicGFnZVR5cGVcIixcInN1YlBhZ2VUeXBlXCIsXCJyZXF1ZXN0SWRcIl19fSl9XCJmdW5jdGlvblwiPT10eXBlb2YgV1tpXSYmKEsoKSxNKEMseSxMLHtwYXNzaXZlOiEwfSksTShDLFwiYmx1clwiLE4pLE0oQyxcImZvY3VzXCIsUSksRy53aGVuJiZHLndoZW4oXCJtYXNoXCIpLmV4ZWN1dGUoZnVuY3Rpb24oZSl7ZSYmKE0oZSxcImFwcFBhdXNlXCIsTiksTShlLFwiYXBwUmVzdW1lXCIsUSkpfSksV1tpXSgpJiYodD1CfHxIKCkpLFIoXCIkYmVmb3JldW5sb2FkXCIsViksTShcIiRiZWZvcmVQYWdlVHJhbnNpdGlvblwiLFYpKX0pO2NzYS5wbHVnaW4oZnVuY3Rpb24oZSl7dmFyIG8sbixyPVwiPG5zPi5OYXZpZ2F0b3IuNFwiLGE9ZS5nbG9iYWwsaT1hLm5hdmlnYXRvcnx8e30sZD1pLmNvbm5lY3Rpb258fHt9LGM9YS5NYXRoLnJvdW5kLHQ9ZShcIkV2ZW50c1wiLHtwcm9kdWNlcklkOlwiY3NhXCJ9KTtmdW5jdGlvbiBsKCl7bz17bmV0d29yazp7ZG93bmxpbms6dm9pZCAwLGRvd25saW5rTWF4OnZvaWQgMCxydHQ6dm9pZCAwLHR5cGU6dm9pZCAwLGVmZmVjdGl2ZVR5cGU6dm9pZCAwLHNhdmVEYXRhOnZvaWQgMH0sbGFuZ3VhZ2U6dm9pZCAwLGRvTm90VHJhY2s6dm9pZCAwLGhhcmR3YXJlQ29uY3VycmVuY3k6dm9pZCAwLGRldmljZU1lbW9yeTp2b2lkIDAsY29va2llRW5hYmxlZDp2b2lkIDAsd2ViZHJpdmVyOnZvaWQgMH0sdigpLG8ubGFuZ3VhZ2U9aS5sYW5ndWFnZXx8bnVsbCxvLmRvTm90VHJhY2s9ZnVuY3Rpb24oKXtzd2l0Y2goaS5kb05vdFRyYWNrKXtjYXNlXCIxXCI6cmV0dXJuXCJlbmFibGVkXCI7Y2FzZVwiMFwiOnJldHVyblwiZGlzYWJsZWRcIjtjYXNlXCJ1bnNwZWNpZmllZFwiOnJldHVybiBpLmRvTm90VHJhY2s7ZGVmYXVsdDpyZXR1cm4gbnVsbH19KCksby5oYXJkd2FyZUNvbmN1cnJlbmN5PVwiaGFyZHdhcmVDb25jdXJyZW5jeVwiaW4gaT9jKGkuaGFyZHdhcmVDb25jdXJyZW5jeXx8MCk6bnVsbCxvLmRldmljZU1lbW9yeT1cImRldmljZU1lbW9yeVwiaW4gaT9jKGkuZGV2aWNlTWVtb3J5fHwwKTpudWxsLG8uY29va2llRW5hYmxlZD1cImNvb2tpZUVuYWJsZWRcImluIGk/aS5jb29raWVFbmFibGVkOm51bGwsby53ZWJkcml2ZXI9XCJ3ZWJkcml2ZXJcImluIGk/aS53ZWJkcml2ZXI6bnVsbH1mdW5jdGlvbiB1KCl7dChcImxvZ1wiLHtuZXR3b3JrOihuPXt9LE9iamVjdC5rZXlzKG8ubmV0d29yaykuZm9yRWFjaChmdW5jdGlvbihlKXtuW2VdPW8ubmV0d29ya1tlXStcIlwifSksbiksbGFuZ3VhZ2U6by5sYW5ndWFnZSxkb05vdFRyYWNrOm8uZG9Ob3RUcmFjayxoYXJkd2FyZUNvbmN1cnJlbmN5Om8uaGFyZHdhcmVDb25jdXJyZW5jeSxkZXZpY2VNZW1vcnk6by5kZXZpY2VNZW1vcnksY29va2llRW5hYmxlZDpvLmNvb2tpZUVuYWJsZWQsd2ViZHJpdmVyOm8ud2ViZHJpdmVyLHNjaGVtYUlkOnJ9LHtlbnQ6e3BhZ2U6W1wicGFnZVR5cGVcIixcInN1YlBhZ2VUeXBlXCIsXCJyZXF1ZXN0SWRcIl19fSl9ZnVuY3Rpb24gdigpeyFmdW5jdGlvbihuKXtPYmplY3Qua2V5cyhvLm5ldHdvcmspLmZvckVhY2goZnVuY3Rpb24oZSl7by5uZXR3b3JrW2VdPW5bZV19KX0oe2Rvd25saW5rOlwiZG93bmxpbmtcImluIGQ/YyhkLmRvd25saW5rfHwwKTpudWxsLGRvd25saW5rTWF4OlwiZG93bmxpbmtNYXhcImluIGQ/YyhkLmRvd25saW5rTWF4fHwwKTpudWxsLHJ0dDpcInJ0dFwiaW4gZD8oZC5ydHR8fDApLnRvRml4ZWQoKTpudWxsLHR5cGU6ZC50eXBlfHxudWxsLGVmZmVjdGl2ZVR5cGU6ZC5lZmZlY3RpdmVUeXBlfHxudWxsLHNhdmVEYXRhOlwic2F2ZURhdGFcImluIGQ/ZC5zYXZlRGF0YTpudWxsfSl9ZnVuY3Rpb24gaygpe3YoKSx1KCl9ZnVuY3Rpb24gdygpe2woKSx1KCl9bCgpLHUoKSxlLm9uKFwiJGFmdGVyUGFnZVRyYW5zaXRpb25cIix3KSxlLm9uKGQsXCJjaGFuZ2VcIixrKX0pO1xuaWYgKHdpbmRvdy51ZSAmJiB3aW5kb3cudWUudWVscykge1xuICAgIHVlLnVlbHMoXCJodHRwczovL2MuYW1hem9uLWFkc3lzdGVtLmNvbS9iYW8tY3NtL2ZvcmVuc2ljcy9hOS10cS1mb3JlbnNpY3MtaW5jcmVtZW50YWwubWluLmpzXCIpO1xufVxuXG5cblxufVxuLyog4pesICovXG48L3NjcmlwdD5cblxuPC9kaXY+XG5cbjxub3NjcmlwdD5cbiAgICA8aW1nIGhlaWdodD1cIjFcIiB3aWR0aD1cIjFcIiBzdHlsZT0nZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuOycgc3JjPScvL2Zscy1uYS5hbWF6b24uY29tLzEvYmF0Y2gvMS9PUC9BVFZQREtJS1gwREVSOjE0Ny04NjkzNjY3LTU5MDEwMzE6MVE3ME03OENDUzhBUzk5Uk1DQTgkdWVkYXRhPXM6JTJGcmQlMkZ1ZWRhdGElM0Zub3NjcmlwdCUyNmlkJTNEMVE3ME03OENDUzhBUzk5Uk1DQTg6MCcgYWx0PVwiXCIvPlxuPC9ub3NjcmlwdD5cblxuPHNjcmlwdD53aW5kb3cudWUgJiYgdWUuY291bnQgJiYgdWUuY291bnQoJ0NTTUxpYnJhcnlTaXplJywgNTgwNjEpPC9zY3JpcHQ+XG48L2Rpdj48L2JvZHk+PC9odG1sPlxuPCEtLSAgICAgICBfXG4gICAgICAgLl9fKC4pPCAoTUVPVylcbiAgICAgICAgXFxfX18pICAgXG4gfn5+fn5+fn5+fn5+fn5+fn5+LS0+XG48IS0tIHNwOmVoOlI1WUVORnhXZnJuTmRva1llNnNyUi9xUnBJMG9lVGhlTENlMTdpZFc4QUczUndueFVqTFhRb1YvcWdraFc1M09Gbk5naW5zVHdMbmc3ZVhQNzhzVUxJTkN1ZDByWG5FUUw3Sm94QVpXdDJ1eU9VVmR6RmdIS3c9PSAtLT5cbiJ9","timestampMS":"17e407d1e3b","lifetimeMS":"36ee80"}